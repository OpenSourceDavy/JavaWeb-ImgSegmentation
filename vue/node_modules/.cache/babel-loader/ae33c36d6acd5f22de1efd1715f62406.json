{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*!\n  * vue-router v4.0.14\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nconst PolySymbol = name => // vr = vue router\nhasSymbol ? Symbol(process.env.NODE_ENV !== 'production' ? '[vue-router]: ' + name : name) : (process.env.NODE_ENV !== 'production' ? '[vue-router]: ' : '_vr_') + name; // rvlm = Router View Location Matched\n\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\n\n\nconst matchedRouteKey = /*#__PURE__*/PolySymbol(process.env.NODE_ENV !== 'production' ? 'router view location matched' : 'rvlm');\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\n\nconst viewDepthKey = /*#__PURE__*/PolySymbol(process.env.NODE_ENV !== 'production' ? 'router view depth' : 'rvd');\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\n\nconst routerKey = /*#__PURE__*/PolySymbol(process.env.NODE_ENV !== 'production' ? 'router' : 'r');\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\n\nconst routeLocationKey = /*#__PURE__*/PolySymbol(process.env.NODE_ENV !== 'production' ? 'route location' : 'rl');\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\n\nconst routerViewLocationKey = /*#__PURE__*/PolySymbol(process.env.NODE_ENV !== 'production' ? 'router view location' : 'rvl');\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\n  return obj.__esModule || hasSymbol && obj[Symbol.toStringTag] === 'Module';\n}\n\nconst assign = Object.assign;\n\nfunction applyToParams(fn, params) {\n  const newParams = {};\n\n  for (const key in params) {\n    const value = params[key];\n    newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\n  }\n\n  return newParams;\n}\n\nconst noop = () => {};\n\nfunction warn(msg) {\n  // avoid using ...args as it breaks in older Edge builds\n  const args = Array.from(arguments).slice(1);\n  console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\n\nconst removeTrailingSlash = path => path.replace(TRAILING_SLASH_RE, '');\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\n\n\nfunction parseURL(parseQuery, location, currentLocation = '/') {\n  let path,\n      query = {},\n      searchString = '',\n      hash = ''; // Could use URL and URLSearchParams but IE 11 doesn't support it\n\n  const searchPos = location.indexOf('?');\n  const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\n\n  if (searchPos > -1) {\n    path = location.slice(0, searchPos);\n    searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\n    query = parseQuery(searchString);\n  }\n\n  if (hashPos > -1) {\n    path = path || location.slice(0, hashPos); // keep the # character\n\n    hash = location.slice(hashPos, location.length);\n  } // no search and no query\n\n\n  path = resolveRelativePath(path != null ? path : location, currentLocation); // empty path means a relative query or hash `?foo=f`, `#thing`\n\n  return {\n    fullPath: path + (searchString && '?') + searchString + hash,\n    path,\n    query,\n    hash\n  };\n}\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\n\n\nfunction stringifyURL(stringifyQuery, location) {\n  const query = location.query ? stringifyQuery(location.query) : '';\n  return location.path + (query && '?') + query + (location.hash || '');\n}\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\n\n\nfunction stripBase(pathname, base) {\n  // no base or base is not found at the beginning\n  if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase())) return pathname;\n  return pathname.slice(base.length) || '/';\n}\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\n\n\nfunction isSameRouteLocation(stringifyQuery, a, b) {\n  const aLastIndex = a.matched.length - 1;\n  const bLastIndex = b.matched.length - 1;\n  return aLastIndex > -1 && aLastIndex === bLastIndex && isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) && isSameRouteLocationParams(a.params, b.params) && stringifyQuery(a.query) === stringifyQuery(b.query) && a.hash === b.hash;\n}\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\n\n\nfunction isSameRouteRecord(a, b) {\n  // since the original record has an undefined value for aliasOf\n  // but all aliases point to the original record, this will always compare\n  // the original record\n  return (a.aliasOf || a) === (b.aliasOf || b);\n}\n\nfunction isSameRouteLocationParams(a, b) {\n  if (Object.keys(a).length !== Object.keys(b).length) return false;\n\n  for (const key in a) {\n    if (!isSameRouteLocationParamsValue(a[key], b[key])) return false;\n  }\n\n  return true;\n}\n\nfunction isSameRouteLocationParamsValue(a, b) {\n  return Array.isArray(a) ? isEquivalentArray(a, b) : Array.isArray(b) ? isEquivalentArray(b, a) : a === b;\n}\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\n\n\nfunction isEquivalentArray(a, b) {\n  return Array.isArray(b) ? a.length === b.length && a.every((value, i) => value === b[i]) : a.length === 1 && a[0] === b;\n}\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\n\n\nfunction resolveRelativePath(to, from) {\n  if (to.startsWith('/')) return to;\n\n  if (process.env.NODE_ENV !== 'production' && !from.startsWith('/')) {\n    warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\n    return to;\n  }\n\n  if (!to) return from;\n  const fromSegments = from.split('/');\n  const toSegments = to.split('/');\n  let position = fromSegments.length - 1;\n  let toPosition;\n  let segment;\n\n  for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\n    segment = toSegments[toPosition]; // can't go below zero\n\n    if (position === 1 || segment === '.') continue;\n    if (segment === '..') position--; // found something that is not relative path\n    else break;\n  }\n\n  return fromSegments.slice(0, position).join('/') + '/' + toSegments.slice(toPosition - (toPosition === toSegments.length ? 1 : 0)).join('/');\n}\n\nvar NavigationType;\n\n(function (NavigationType) {\n  NavigationType[\"pop\"] = \"pop\";\n  NavigationType[\"push\"] = \"push\";\n})(NavigationType || (NavigationType = {}));\n\nvar NavigationDirection;\n\n(function (NavigationDirection) {\n  NavigationDirection[\"back\"] = \"back\";\n  NavigationDirection[\"forward\"] = \"forward\";\n  NavigationDirection[\"unknown\"] = \"\";\n})(NavigationDirection || (NavigationDirection = {}));\n/**\r\n * Starting location for Histories\r\n */\n\n\nconst START = ''; // Generic utils\n\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\n\nfunction normalizeBase(base) {\n  if (!base) {\n    if (isBrowser) {\n      // respect <base> tag\n      const baseEl = document.querySelector('base');\n      base = baseEl && baseEl.getAttribute('href') || '/'; // strip full URL origin\n\n      base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  } // ensure leading slash when it was removed by the regex above avoid leading\n  // slash with hash because the file could be read from the disk like file://\n  // and the leading slash would cause problems\n\n\n  if (base[0] !== '/' && base[0] !== '#') base = '/' + base; // remove the trailing slash so all other method can just do `base + fullPath`\n  // to build an href\n\n  return removeTrailingSlash(base);\n} // remove any character before the hash\n\n\nconst BEFORE_HASH_RE = /^[^#]+#/;\n\nfunction createHref(base, location) {\n  return base.replace(BEFORE_HASH_RE, '#') + location;\n}\n\nfunction getElementPosition(el, offset) {\n  const docRect = document.documentElement.getBoundingClientRect();\n  const elRect = el.getBoundingClientRect();\n  return {\n    behavior: offset.behavior,\n    left: elRect.left - docRect.left - (offset.left || 0),\n    top: elRect.top - docRect.top - (offset.top || 0)\n  };\n}\n\nconst computeScrollPosition = () => ({\n  left: window.pageXOffset,\n  top: window.pageYOffset\n});\n\nfunction scrollToPosition(position) {\n  let scrollToOptions;\n\n  if ('el' in position) {\n    const positionEl = position.el;\n    const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\n    /**\r\n     * `id`s can accept pretty much any characters, including CSS combinators\r\n     * like `>` or `~`. It's still possible to retrieve elements using\r\n     * `document.getElementById('~')` but it needs to be escaped when using\r\n     * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n     * requirements for `id`s are them to be unique on the page and to not be\r\n     * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n     * be properly escaped for it to work with `querySelector`. We could check\r\n     * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n     * would make things inconsistent since they are valid characters for an\r\n     * `id` but would need to be escaped when using `querySelector`, breaking\r\n     * their usage and ending up in no selector returned. Selectors need to be\r\n     * escaped:\r\n     *\r\n     * - `#1-thing` becomes `#\\31 -thing`\r\n     * - `#with~symbols` becomes `#with\\\\~symbols`\r\n     *\r\n     * - More information about  the topic can be found at\r\n     *   https://mathiasbynens.be/notes/html5-id-class.\r\n     * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n     */\n\n    if (process.env.NODE_ENV !== 'production' && typeof position.el === 'string') {\n      if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\n        try {\n          const foundEl = document.querySelector(position.el);\n\n          if (isIdSelector && foundEl) {\n            warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`); // return to avoid other warnings\n\n            return;\n          }\n        } catch (err) {\n          warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`); // return to avoid other warnings\n\n          return;\n        }\n      }\n    }\n\n    const el = typeof positionEl === 'string' ? isIdSelector ? document.getElementById(positionEl.slice(1)) : document.querySelector(positionEl) : positionEl;\n\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\n      return;\n    }\n\n    scrollToOptions = getElementPosition(el, position);\n  } else {\n    scrollToOptions = position;\n  }\n\n  if ('scrollBehavior' in document.documentElement.style) window.scrollTo(scrollToOptions);else {\n    window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\n  }\n}\n\nfunction getScrollKey(path, delta) {\n  const position = history.state ? history.state.position - delta : -1;\n  return position + path;\n}\n\nconst scrollPositions = new Map();\n\nfunction saveScrollPosition(key, scrollPosition) {\n  scrollPositions.set(key, scrollPosition);\n}\n\nfunction getSavedScrollPosition(key) {\n  const scroll = scrollPositions.get(key); // consume it so it's not used again\n\n  scrollPositions.delete(key);\n  return scroll;\n} // TODO: RFC about how to save scroll position\n\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\n//   // returns a scroll position that can be saved in history\n//   compute(): ScrollPositionEntry\n//   // can take an extended ScrollPositionEntry\n//   scroll(position: ScrollPosition): void\n// }\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\n//   compute: computeScroll,\n//   scroll: scrollToPosition,\n// }\n\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\n\n\nfunction createCurrentLocation(base, location) {\n  const {\n    pathname,\n    search,\n    hash\n  } = location; // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\n\n  const hashPos = base.indexOf('#');\n\n  if (hashPos > -1) {\n    let slicePos = hash.includes(base.slice(hashPos)) ? base.slice(hashPos).length : 1;\n    let pathFromHash = hash.slice(slicePos); // prepend the starting slash to hash so the url starts with /#\n\n    if (pathFromHash[0] !== '/') pathFromHash = '/' + pathFromHash;\n    return stripBase(pathFromHash, '');\n  }\n\n  const path = stripBase(pathname, base);\n  return path + search + hash;\n}\n\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\n  let listeners = [];\n  let teardowns = []; // TODO: should it be a stack? a Dict. Check if the popstate listener\n  // can trigger twice\n\n  let pauseState = null;\n\n  const popStateHandler = ({\n    state\n  }) => {\n    const to = createCurrentLocation(base, location);\n    const from = currentLocation.value;\n    const fromState = historyState.value;\n    let delta = 0;\n\n    if (state) {\n      currentLocation.value = to;\n      historyState.value = state; // ignore the popstate and reset the pauseState\n\n      if (pauseState && pauseState === from) {\n        pauseState = null;\n        return;\n      }\n\n      delta = fromState ? state.position - fromState.position : 0;\n    } else {\n      replace(to);\n    } // console.log({ deltaFromCurrent })\n    // Here we could also revert the navigation by calling history.go(-delta)\n    // this listener will have to be adapted to not trigger again and to wait for the url\n    // to be updated before triggering the listeners. Some kind of validation function would also\n    // need to be passed to the listeners so the navigation can be accepted\n    // call all listeners\n\n\n    listeners.forEach(listener => {\n      listener(currentLocation.value, from, {\n        delta,\n        type: NavigationType.pop,\n        direction: delta ? delta > 0 ? NavigationDirection.forward : NavigationDirection.back : NavigationDirection.unknown\n      });\n    });\n  };\n\n  function pauseListeners() {\n    pauseState = currentLocation.value;\n  }\n\n  function listen(callback) {\n    // setup the listener and prepare teardown callbacks\n    listeners.push(callback);\n\n    const teardown = () => {\n      const index = listeners.indexOf(callback);\n      if (index > -1) listeners.splice(index, 1);\n    };\n\n    teardowns.push(teardown);\n    return teardown;\n  }\n\n  function beforeUnloadListener() {\n    const {\n      history\n    } = window;\n    if (!history.state) return;\n    history.replaceState(assign({}, history.state, {\n      scroll: computeScrollPosition()\n    }), '');\n  }\n\n  function destroy() {\n    for (const teardown of teardowns) teardown();\n\n    teardowns = [];\n    window.removeEventListener('popstate', popStateHandler);\n    window.removeEventListener('beforeunload', beforeUnloadListener);\n  } // setup the listeners and prepare teardown callbacks\n\n\n  window.addEventListener('popstate', popStateHandler);\n  window.addEventListener('beforeunload', beforeUnloadListener);\n  return {\n    pauseListeners,\n    listen,\n    destroy\n  };\n}\n/**\r\n * Creates a state object\r\n */\n\n\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\n  return {\n    back,\n    current,\n    forward,\n    replaced,\n    position: window.history.length,\n    scroll: computeScroll ? computeScrollPosition() : null\n  };\n}\n\nfunction useHistoryStateNavigation(base) {\n  const {\n    history,\n    location\n  } = window; // private variables\n\n  const currentLocation = {\n    value: createCurrentLocation(base, location)\n  };\n  const historyState = {\n    value: history.state\n  }; // build current history entry as this is a fresh navigation\n\n  if (!historyState.value) {\n    changeLocation(currentLocation.value, {\n      back: null,\n      current: currentLocation.value,\n      forward: null,\n      // the length is off by one, we need to decrease it\n      position: history.length - 1,\n      replaced: true,\n      // don't add a scroll as the user may have an anchor and we want\n      // scrollBehavior to be triggered without a saved position\n      scroll: null\n    }, true);\n  }\n\n  function changeLocation(to, state, replace) {\n    /**\r\n     * if a base tag is provided and we are on a normal domain, we have to\r\n     * respect the provided `base` attribute because pushState() will use it and\r\n     * potentially erase anything before the `#` like at\r\n     * https://github.com/vuejs/router/issues/685 where a base of\r\n     * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n     * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n     * base tag we can just use everything after the `#`.\r\n     */\n    const hashIndex = base.indexOf('#');\n    const url = hashIndex > -1 ? (location.host && document.querySelector('base') ? base : base.slice(hashIndex)) + to : createBaseLocation() + base + to;\n\n    try {\n      // BROWSER QUIRK\n      // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\n      history[replace ? 'replaceState' : 'pushState'](state, '', url);\n      historyState.value = state;\n    } catch (err) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Error with push/replace State', err);\n      } else {\n        console.error(err);\n      } // Force the navigation, this also resets the call count\n\n\n      location[replace ? 'replace' : 'assign'](url);\n    }\n  }\n\n  function replace(to, data) {\n    const state = assign({}, history.state, buildState(historyState.value.back, // keep back and forward entries but override current position\n    to, historyState.value.forward, true), data, {\n      position: historyState.value.position\n    });\n    changeLocation(to, state, true);\n    currentLocation.value = to;\n  }\n\n  function push(to, data) {\n    // Add to current entry the information of where we are going\n    // as well as saving the current position\n    const currentState = assign({}, // use current history state to gracefully handle a wrong call to\n    // history.replaceState\n    // https://github.com/vuejs/router/issues/366\n    historyState.value, history.state, {\n      forward: to,\n      scroll: computeScrollPosition()\n    });\n\n    if (process.env.NODE_ENV !== 'production' && !history.state) {\n      warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` + `history.replaceState(history.state, '', url)\\n\\n` + `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\n    }\n\n    changeLocation(currentState.current, currentState, true);\n    const state = assign({}, buildState(currentLocation.value, to, null), {\n      position: currentState.position + 1\n    }, data);\n    changeLocation(to, state, false);\n    currentLocation.value = to;\n  }\n\n  return {\n    location: currentLocation,\n    state: historyState,\n    push,\n    replace\n  };\n}\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\n\n\nfunction createWebHistory(base) {\n  base = normalizeBase(base);\n  const historyNavigation = useHistoryStateNavigation(base);\n  const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\n\n  function go(delta, triggerListeners = true) {\n    if (!triggerListeners) historyListeners.pauseListeners();\n    history.go(delta);\n  }\n\n  const routerHistory = assign({\n    // it's overridden right after\n    location: '',\n    base,\n    go,\n    createHref: createHref.bind(null, base)\n  }, historyNavigation, historyListeners);\n  Object.defineProperty(routerHistory, 'location', {\n    enumerable: true,\n    get: () => historyNavigation.location.value\n  });\n  Object.defineProperty(routerHistory, 'state', {\n    enumerable: true,\n    get: () => historyNavigation.state.value\n  });\n  return routerHistory;\n}\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\n\n\nfunction createMemoryHistory(base = '') {\n  let listeners = [];\n  let queue = [START];\n  let position = 0;\n  base = normalizeBase(base);\n\n  function setLocation(location) {\n    position++;\n\n    if (position === queue.length) {\n      // we are at the end, we can simply append a new entry\n      queue.push(location);\n    } else {\n      // we are in the middle, we remove everything from here in the queue\n      queue.splice(position);\n      queue.push(location);\n    }\n  }\n\n  function triggerListeners(to, from, {\n    direction,\n    delta\n  }) {\n    const info = {\n      direction,\n      delta,\n      type: NavigationType.pop\n    };\n\n    for (const callback of listeners) {\n      callback(to, from, info);\n    }\n  }\n\n  const routerHistory = {\n    // rewritten by Object.defineProperty\n    location: START,\n    // TODO: should be kept in queue\n    state: {},\n    base,\n    createHref: createHref.bind(null, base),\n\n    replace(to) {\n      // remove current entry and decrement position\n      queue.splice(position--, 1);\n      setLocation(to);\n    },\n\n    push(to, data) {\n      setLocation(to);\n    },\n\n    listen(callback) {\n      listeners.push(callback);\n      return () => {\n        const index = listeners.indexOf(callback);\n        if (index > -1) listeners.splice(index, 1);\n      };\n    },\n\n    destroy() {\n      listeners = [];\n      queue = [START];\n      position = 0;\n    },\n\n    go(delta, shouldTrigger = true) {\n      const from = this.location;\n      const direction = // we are considering delta === 0 going forward, but in abstract mode\n      // using 0 for the delta doesn't make sense like it does in html5 where\n      // it reloads the page\n      delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\n      position = Math.max(0, Math.min(position + delta, queue.length - 1));\n\n      if (shouldTrigger) {\n        triggerListeners(this.location, from, {\n          direction,\n          delta\n        });\n      }\n    }\n\n  };\n  Object.defineProperty(routerHistory, 'location', {\n    enumerable: true,\n    get: () => queue[position]\n  });\n  return routerHistory;\n}\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\n\n\nfunction createWebHashHistory(base) {\n  // Make sure this implementation is fine in terms of encoding, specially for IE11\n  // for `file://`, directly use the pathname and ignore the base\n  // location.pathname contains an initial `/` even at the root: `https://example.com`\n  base = location.host ? base || location.pathname + location.search : ''; // allow the user to provide a `#` in the middle: `/base/#/app`\n\n  if (!base.includes('#')) base += '#';\n\n  if (process.env.NODE_ENV !== 'production' && !base.endsWith('#/') && !base.endsWith('#')) {\n    warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\n  }\n\n  return createWebHistory(base);\n}\n\nfunction isRouteLocation(route) {\n  return typeof route === 'string' || route && typeof route === 'object';\n}\n\nfunction isRouteName(name) {\n  return typeof name === 'string' || typeof name === 'symbol';\n}\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\n\n\nconst START_LOCATION_NORMALIZED = {\n  path: '/',\n  name: undefined,\n  params: {},\n  query: {},\n  hash: '',\n  fullPath: '/',\n  matched: [],\n  meta: {},\n  redirectedFrom: undefined\n};\nconst NavigationFailureSymbol = /*#__PURE__*/PolySymbol(process.env.NODE_ENV !== 'production' ? 'navigation failure' : 'nf');\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\n\nvar NavigationFailureType;\n\n(function (NavigationFailureType) {\n  /**\r\n   * An aborted navigation is a navigation that failed because a navigation\r\n   * guard returned `false` or called `next(false)`\r\n   */\n  NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\n  /**\r\n   * A cancelled navigation is a navigation that failed because a more recent\r\n   * navigation finished started (not necessarily finished).\r\n   */\n\n  NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\n  /**\r\n   * A duplicated navigation is a navigation that failed because it was\r\n   * initiated while already being at the exact same location.\r\n   */\n\n  NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\n})(NavigationFailureType || (NavigationFailureType = {})); // DEV only debug messages\n\n\nconst ErrorTypeMessages = {\n  [1\n  /* MATCHER_NOT_FOUND */\n  ]({\n    location,\n    currentLocation\n  }) {\n    return `No match for\\n ${JSON.stringify(location)}${currentLocation ? '\\nwhile being at\\n' + JSON.stringify(currentLocation) : ''}`;\n  },\n\n  [2\n  /* NAVIGATION_GUARD_REDIRECT */\n  ]({\n    from,\n    to\n  }) {\n    return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\n  },\n\n  [4\n  /* NAVIGATION_ABORTED */\n  ]({\n    from,\n    to\n  }) {\n    return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\n  },\n\n  [8\n  /* NAVIGATION_CANCELLED */\n  ]({\n    from,\n    to\n  }) {\n    return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\n  },\n\n  [16\n  /* NAVIGATION_DUPLICATED */\n  ]({\n    from,\n    to\n  }) {\n    return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\n  }\n\n};\n\nfunction createRouterError(type, params) {\n  // keep full error messages in cjs versions\n  if (process.env.NODE_ENV !== 'production' || !true) {\n    return assign(new Error(ErrorTypeMessages[type](params)), {\n      type,\n      [NavigationFailureSymbol]: true\n    }, params);\n  } else {\n    return assign(new Error(), {\n      type,\n      [NavigationFailureSymbol]: true\n    }, params);\n  }\n}\n\nfunction isNavigationFailure(error, type) {\n  return error instanceof Error && NavigationFailureSymbol in error && (type == null || !!(error.type & type));\n}\n\nconst propertiesToLog = ['params', 'query', 'hash'];\n\nfunction stringifyRoute(to) {\n  if (typeof to === 'string') return to;\n  if ('path' in to) return to.path;\n  const location = {};\n\n  for (const key of propertiesToLog) {\n    if (key in to) location[key] = to[key];\n  }\n\n  return JSON.stringify(location, null, 2);\n} // default pattern for a param: non greedy everything but /\n\n\nconst BASE_PARAM_PATTERN = '[^/]+?';\nconst BASE_PATH_PARSER_OPTIONS = {\n  sensitive: false,\n  strict: false,\n  start: true,\n  end: true\n}; // Special Regex characters that must be escaped in static tokens\n\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\n\nfunction tokensToParser(segments, extraOptions) {\n  const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions); // the amount of scores is the same as the length of segments except for the root segment \"/\"\n\n  const score = []; // the regexp as a string\n\n  let pattern = options.start ? '^' : ''; // extracted keys\n\n  const keys = [];\n\n  for (const segment of segments) {\n    // the root segment needs special treatment\n    const segmentScores = segment.length ? [] : [90\n    /* Root */\n    ]; // allow trailing slash\n\n    if (options.strict && !segment.length) pattern += '/';\n\n    for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\n      const token = segment[tokenIndex]; // resets the score if we are inside a sub segment /:a-other-:b\n\n      let subSegmentScore = 40\n      /* Segment */\n      + (options.sensitive ? 0.25\n      /* BonusCaseSensitive */\n      : 0);\n\n      if (token.type === 0\n      /* Static */\n      ) {\n        // prepend the slash if we are starting a new segment\n        if (!tokenIndex) pattern += '/';\n        pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\n        subSegmentScore += 40\n        /* Static */\n        ;\n      } else if (token.type === 1\n      /* Param */\n      ) {\n        const {\n          value,\n          repeatable,\n          optional,\n          regexp\n        } = token;\n        keys.push({\n          name: value,\n          repeatable,\n          optional\n        });\n        const re = regexp ? regexp : BASE_PARAM_PATTERN; // the user provided a custom regexp /:id(\\\\d+)\n\n        if (re !== BASE_PARAM_PATTERN) {\n          subSegmentScore += 10\n          /* BonusCustomRegExp */\n          ; // make sure the regexp is valid before using it\n\n          try {\n            new RegExp(`(${re})`);\n          } catch (err) {\n            throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` + err.message);\n          }\n        } // when we repeat we must take care of the repeating leading slash\n\n\n        let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`; // prepend the slash if we are starting a new segment\n\n        if (!tokenIndex) subPattern = // avoid an optional / if there are more segments e.g. /:p?-static\n        // or /:p?-:p2\n        optional && segment.length < 2 ? `(?:/${subPattern})` : '/' + subPattern;\n        if (optional) subPattern += '?';\n        pattern += subPattern;\n        subSegmentScore += 20\n        /* Dynamic */\n        ;\n        if (optional) subSegmentScore += -8\n        /* BonusOptional */\n        ;\n        if (repeatable) subSegmentScore += -20\n        /* BonusRepeatable */\n        ;\n        if (re === '.*') subSegmentScore += -50\n        /* BonusWildcard */\n        ;\n      }\n\n      segmentScores.push(subSegmentScore);\n    } // an empty array like /home/ -> [[{home}], []]\n    // if (!segment.length) pattern += '/'\n\n\n    score.push(segmentScores);\n  } // only apply the strict bonus to the last score\n\n\n  if (options.strict && options.end) {\n    const i = score.length - 1;\n    score[i][score[i].length - 1] += 0.7000000000000001\n    /* BonusStrict */\n    ;\n  } // TODO: dev only warn double trailing slash\n\n\n  if (!options.strict) pattern += '/?';\n  if (options.end) pattern += '$'; // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\n  else if (options.strict) pattern += '(?:/|$)';\n  const re = new RegExp(pattern, options.sensitive ? '' : 'i');\n\n  function parse(path) {\n    const match = path.match(re);\n    const params = {};\n    if (!match) return null;\n\n    for (let i = 1; i < match.length; i++) {\n      const value = match[i] || '';\n      const key = keys[i - 1];\n      params[key.name] = value && key.repeatable ? value.split('/') : value;\n    }\n\n    return params;\n  }\n\n  function stringify(params) {\n    let path = ''; // for optional parameters to allow to be empty\n\n    let avoidDuplicatedSlash = false;\n\n    for (const segment of segments) {\n      if (!avoidDuplicatedSlash || !path.endsWith('/')) path += '/';\n      avoidDuplicatedSlash = false;\n\n      for (const token of segment) {\n        if (token.type === 0\n        /* Static */\n        ) {\n          path += token.value;\n        } else if (token.type === 1\n        /* Param */\n        ) {\n          const {\n            value,\n            repeatable,\n            optional\n          } = token;\n          const param = value in params ? params[value] : '';\n          if (Array.isArray(param) && !repeatable) throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\n          const text = Array.isArray(param) ? param.join('/') : param;\n\n          if (!text) {\n            if (optional) {\n              // if we have more than one optional param like /:a?-static we\n              // don't need to care about the optional param\n              if (segment.length < 2) {\n                // remove the last slash as we could be at the end\n                if (path.endsWith('/')) path = path.slice(0, -1); // do not append a slash on the next iteration\n                else avoidDuplicatedSlash = true;\n              }\n            } else throw new Error(`Missing required param \"${value}\"`);\n          }\n\n          path += text;\n        }\n      }\n    }\n\n    return path;\n  }\n\n  return {\n    re,\n    score,\n    keys,\n    parse,\n    stringify\n  };\n}\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\n\n\nfunction compareScoreArray(a, b) {\n  let i = 0;\n\n  while (i < a.length && i < b.length) {\n    const diff = b[i] - a[i]; // only keep going if diff === 0\n\n    if (diff) return diff;\n    i++;\n  } // if the last subsegment was Static, the shorter segments should be sorted first\n  // otherwise sort the longest segment first\n\n\n  if (a.length < b.length) {\n    return a.length === 1 && a[0] === 40\n    /* Static */\n    + 40\n    /* Segment */\n    ? -1 : 1;\n  } else if (a.length > b.length) {\n    return b.length === 1 && b[0] === 40\n    /* Static */\n    + 40\n    /* Segment */\n    ? 1 : -1;\n  }\n\n  return 0;\n}\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\n\n\nfunction comparePathParserScore(a, b) {\n  let i = 0;\n  const aScore = a.score;\n  const bScore = b.score;\n\n  while (i < aScore.length && i < bScore.length) {\n    const comp = compareScoreArray(aScore[i], bScore[i]); // do not return if both are equal\n\n    if (comp) return comp;\n    i++;\n  } // if a and b share the same score entries but b has more, sort b first\n\n\n  return bScore.length - aScore.length; // this is the ternary version\n  // return aScore.length < bScore.length\n  //   ? 1\n  //   : aScore.length > bScore.length\n  //   ? -1\n  //   : 0\n}\n\nconst ROOT_TOKEN = {\n  type: 0\n  /* Static */\n  ,\n  value: ''\n};\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/; // After some profiling, the cache seems to be unnecessary because tokenizePath\n// (the slowest part of adding a route) is very fast\n// const tokenCache = new Map<string, Token[][]>()\n\nfunction tokenizePath(path) {\n  if (!path) return [[]];\n  if (path === '/') return [[ROOT_TOKEN]];\n\n  if (!path.startsWith('/')) {\n    throw new Error(process.env.NODE_ENV !== 'production' ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".` : `Invalid path \"${path}\"`);\n  } // if (tokenCache.has(path)) return tokenCache.get(path)!\n\n\n  function crash(message) {\n    throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\n  }\n\n  let state = 0\n  /* Static */\n  ;\n  let previousState = state;\n  const tokens = []; // the segment will always be valid because we get into the initial state\n  // with the leading /\n\n  let segment;\n\n  function finalizeSegment() {\n    if (segment) tokens.push(segment);\n    segment = [];\n  } // index on the path\n\n\n  let i = 0; // char at index\n\n  let char; // buffer of the value read\n\n  let buffer = ''; // custom regexp for a param\n\n  let customRe = '';\n\n  function consumeBuffer() {\n    if (!buffer) return;\n\n    if (state === 0\n    /* Static */\n    ) {\n      segment.push({\n        type: 0\n        /* Static */\n        ,\n        value: buffer\n      });\n    } else if (state === 1\n    /* Param */\n    || state === 2\n    /* ParamRegExp */\n    || state === 3\n    /* ParamRegExpEnd */\n    ) {\n      if (segment.length > 1 && (char === '*' || char === '+')) crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\n      segment.push({\n        type: 1\n        /* Param */\n        ,\n        value: buffer,\n        regexp: customRe,\n        repeatable: char === '*' || char === '+',\n        optional: char === '*' || char === '?'\n      });\n    } else {\n      crash('Invalid state to consume buffer');\n    }\n\n    buffer = '';\n  }\n\n  function addCharToBuffer() {\n    buffer += char;\n  }\n\n  while (i < path.length) {\n    char = path[i++];\n\n    if (char === '\\\\' && state !== 2\n    /* ParamRegExp */\n    ) {\n      previousState = state;\n      state = 4\n      /* EscapeNext */\n      ;\n      continue;\n    }\n\n    switch (state) {\n      case 0\n      /* Static */\n      :\n        if (char === '/') {\n          if (buffer) {\n            consumeBuffer();\n          }\n\n          finalizeSegment();\n        } else if (char === ':') {\n          consumeBuffer();\n          state = 1\n          /* Param */\n          ;\n        } else {\n          addCharToBuffer();\n        }\n\n        break;\n\n      case 4\n      /* EscapeNext */\n      :\n        addCharToBuffer();\n        state = previousState;\n        break;\n\n      case 1\n      /* Param */\n      :\n        if (char === '(') {\n          state = 2\n          /* ParamRegExp */\n          ;\n        } else if (VALID_PARAM_RE.test(char)) {\n          addCharToBuffer();\n        } else {\n          consumeBuffer();\n          state = 0\n          /* Static */\n          ; // go back one character if we were not modifying\n\n          if (char !== '*' && char !== '?' && char !== '+') i--;\n        }\n\n        break;\n\n      case 2\n      /* ParamRegExp */\n      :\n        // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\n        // it already works by escaping the closing )\n        // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\n        // is this really something people need since you can also write\n        // /prefix_:p()_suffix\n        if (char === ')') {\n          // handle the escaped )\n          if (customRe[customRe.length - 1] == '\\\\') customRe = customRe.slice(0, -1) + char;else state = 3\n          /* ParamRegExpEnd */\n          ;\n        } else {\n          customRe += char;\n        }\n\n        break;\n\n      case 3\n      /* ParamRegExpEnd */\n      :\n        // same as finalizing a param\n        consumeBuffer();\n        state = 0\n        /* Static */\n        ; // go back one character if we were not modifying\n\n        if (char !== '*' && char !== '?' && char !== '+') i--;\n        customRe = '';\n        break;\n\n      default:\n        crash('Unknown state');\n        break;\n    }\n  }\n\n  if (state === 2\n  /* ParamRegExp */\n  ) crash(`Unfinished custom RegExp for param \"${buffer}\"`);\n  consumeBuffer();\n  finalizeSegment(); // tokenCache.set(path, tokens)\n\n  return tokens;\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\n  const parser = tokensToParser(tokenizePath(record.path), options); // warn against params with the same name\n\n  if (process.env.NODE_ENV !== 'production') {\n    const existingKeys = new Set();\n\n    for (const key of parser.keys) {\n      if (existingKeys.has(key.name)) warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\n      existingKeys.add(key.name);\n    }\n  }\n\n  const matcher = assign(parser, {\n    record,\n    parent,\n    // these needs to be populated by the parent\n    children: [],\n    alias: []\n  });\n\n  if (parent) {\n    // both are aliases or both are not aliases\n    // we don't want to mix them because the order is used when\n    // passing originalRecord in Matcher.addRoute\n    if (!matcher.record.aliasOf === !parent.record.aliasOf) parent.children.push(matcher);\n  }\n\n  return matcher;\n}\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\n\n\nfunction createRouterMatcher(routes, globalOptions) {\n  // normalized ordered array of matchers\n  const matchers = [];\n  const matcherMap = new Map();\n  globalOptions = mergeOptions({\n    strict: false,\n    end: true,\n    sensitive: false\n  }, globalOptions);\n\n  function getRecordMatcher(name) {\n    return matcherMap.get(name);\n  }\n\n  function addRoute(record, parent, originalRecord) {\n    // used later on to remove by name\n    const isRootAdd = !originalRecord;\n    const mainNormalizedRecord = normalizeRouteRecord(record); // we might be the child of an alias\n\n    mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\n    const options = mergeOptions(globalOptions, record); // generate an array of records to correctly handle aliases\n\n    const normalizedRecords = [mainNormalizedRecord];\n\n    if ('alias' in record) {\n      const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\n\n      for (const alias of aliases) {\n        normalizedRecords.push(assign({}, mainNormalizedRecord, {\n          // this allows us to hold a copy of the `components` option\n          // so that async components cache is hold on the original record\n          components: originalRecord ? originalRecord.record.components : mainNormalizedRecord.components,\n          path: alias,\n          // we might be the child of an alias\n          aliasOf: originalRecord ? originalRecord.record : mainNormalizedRecord // the aliases are always of the same kind as the original since they\n          // are defined on the same record\n\n        }));\n      }\n    }\n\n    let matcher;\n    let originalMatcher;\n\n    for (const normalizedRecord of normalizedRecords) {\n      const {\n        path\n      } = normalizedRecord; // Build up the path for nested routes if the child isn't an absolute\n      // route. Only add the / delimiter if the child path isn't empty and if the\n      // parent path doesn't have a trailing slash\n\n      if (parent && path[0] !== '/') {\n        const parentPath = parent.record.path;\n        const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\n        normalizedRecord.path = parent.record.path + (path && connectingSlash + path);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && normalizedRecord.path === '*') {\n        throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' + 'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\n      } // create the object before hand so it can be passed to children\n\n\n      matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\n      if (process.env.NODE_ENV !== 'production' && parent && path[0] === '/') checkMissingParamsInAbsolutePath(matcher, parent); // if we are an alias we must tell the original record that we exist\n      // so we can be removed\n\n      if (originalRecord) {\n        originalRecord.alias.push(matcher);\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkSameParams(originalRecord, matcher);\n        }\n      } else {\n        // otherwise, the first record is the original and others are aliases\n        originalMatcher = originalMatcher || matcher;\n        if (originalMatcher !== matcher) originalMatcher.alias.push(matcher); // remove the route if named and only for the top record (avoid in nested calls)\n        // this works because the original record is the first one\n\n        if (isRootAdd && record.name && !isAliasRecord(matcher)) removeRoute(record.name);\n      }\n\n      if ('children' in mainNormalizedRecord) {\n        const children = mainNormalizedRecord.children;\n\n        for (let i = 0; i < children.length; i++) {\n          addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\n        }\n      } // if there was no original record, then the first one was not an alias and all\n      // other alias (if any) need to reference this record when adding children\n\n\n      originalRecord = originalRecord || matcher; // TODO: add normalized records for more flexibility\n      // if (parent && isAliasRecord(originalRecord)) {\n      //   parent.children.push(originalRecord)\n      // }\n\n      insertMatcher(matcher);\n    }\n\n    return originalMatcher ? () => {\n      // since other matchers are aliases, they should be removed by the original matcher\n      removeRoute(originalMatcher);\n    } : noop;\n  }\n\n  function removeRoute(matcherRef) {\n    if (isRouteName(matcherRef)) {\n      const matcher = matcherMap.get(matcherRef);\n\n      if (matcher) {\n        matcherMap.delete(matcherRef);\n        matchers.splice(matchers.indexOf(matcher), 1);\n        matcher.children.forEach(removeRoute);\n        matcher.alias.forEach(removeRoute);\n      }\n    } else {\n      const index = matchers.indexOf(matcherRef);\n\n      if (index > -1) {\n        matchers.splice(index, 1);\n        if (matcherRef.record.name) matcherMap.delete(matcherRef.record.name);\n        matcherRef.children.forEach(removeRoute);\n        matcherRef.alias.forEach(removeRoute);\n      }\n    }\n  }\n\n  function getRoutes() {\n    return matchers;\n  }\n\n  function insertMatcher(matcher) {\n    let i = 0;\n\n    while (i < matchers.length && comparePathParserScore(matcher, matchers[i]) >= 0 && ( // Adding children with empty path should still appear before the parent\n    // https://github.com/vuejs/router/issues/1124\n    matcher.record.path !== matchers[i].record.path || !isRecordChildOf(matcher, matchers[i]))) i++;\n\n    matchers.splice(i, 0, matcher); // only add the original record to the name map\n\n    if (matcher.record.name && !isAliasRecord(matcher)) matcherMap.set(matcher.record.name, matcher);\n  }\n\n  function resolve(location, currentLocation) {\n    let matcher;\n    let params = {};\n    let path;\n    let name;\n\n    if ('name' in location && location.name) {\n      matcher = matcherMap.get(location.name);\n      if (!matcher) throw createRouterError(1\n      /* MATCHER_NOT_FOUND */\n      , {\n        location\n      });\n      name = matcher.record.name;\n      params = assign( // paramsFromLocation is a new object\n      paramsFromLocation(currentLocation.params, // only keep params that exist in the resolved location\n      // TODO: only keep optional params coming from a parent record\n      matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params); // throws if cannot be stringified\n\n      path = matcher.stringify(params);\n    } else if ('path' in location) {\n      // no need to resolve the path with the matcher as it was provided\n      // this also allows the user to control the encoding\n      path = location.path;\n\n      if (process.env.NODE_ENV !== 'production' && !path.startsWith('/')) {\n        warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\n      }\n\n      matcher = matchers.find(m => m.re.test(path)); // matcher should have a value after the loop\n\n      if (matcher) {\n        // TODO: dev warning of unused params if provided\n        // we know the matcher works because we tested the regexp\n        params = matcher.parse(path);\n        name = matcher.record.name;\n      } // location is a relative path\n\n    } else {\n      // match by name or path of current route\n      matcher = currentLocation.name ? matcherMap.get(currentLocation.name) : matchers.find(m => m.re.test(currentLocation.path));\n      if (!matcher) throw createRouterError(1\n      /* MATCHER_NOT_FOUND */\n      , {\n        location,\n        currentLocation\n      });\n      name = matcher.record.name; // since we are navigating to the same location, we don't need to pick the\n      // params like when `name` is provided\n\n      params = assign({}, currentLocation.params, location.params);\n      path = matcher.stringify(params);\n    }\n\n    const matched = [];\n    let parentMatcher = matcher;\n\n    while (parentMatcher) {\n      // reversed order so parents are at the beginning\n      matched.unshift(parentMatcher.record);\n      parentMatcher = parentMatcher.parent;\n    }\n\n    return {\n      name,\n      path,\n      params,\n      matched,\n      meta: mergeMetaFields(matched)\n    };\n  } // add initial routes\n\n\n  routes.forEach(route => addRoute(route));\n  return {\n    addRoute,\n    resolve,\n    removeRoute,\n    getRoutes,\n    getRecordMatcher\n  };\n}\n\nfunction paramsFromLocation(params, keys) {\n  const newParams = {};\n\n  for (const key of keys) {\n    if (key in params) newParams[key] = params[key];\n  }\n\n  return newParams;\n}\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\n\n\nfunction normalizeRouteRecord(record) {\n  return {\n    path: record.path,\n    redirect: record.redirect,\n    name: record.name,\n    meta: record.meta || {},\n    aliasOf: undefined,\n    beforeEnter: record.beforeEnter,\n    props: normalizeRecordProps(record),\n    children: record.children || [],\n    instances: {},\n    leaveGuards: new Set(),\n    updateGuards: new Set(),\n    enterCallbacks: {},\n    components: 'components' in record ? record.components || {} : {\n      default: record.component\n    }\n  };\n}\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\n\n\nfunction normalizeRecordProps(record) {\n  const propsObject = {}; // props does not exist on redirect records but we can set false directly\n\n  const props = record.props || false;\n\n  if ('component' in record) {\n    propsObject.default = props;\n  } else {\n    // NOTE: we could also allow a function to be applied to every component.\n    // Would need user feedback for use cases\n    for (const name in record.components) propsObject[name] = typeof props === 'boolean' ? props : props[name];\n  }\n\n  return propsObject;\n}\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\n\n\nfunction isAliasRecord(record) {\n  while (record) {\n    if (record.record.aliasOf) return true;\n    record = record.parent;\n  }\n\n  return false;\n}\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\n\n\nfunction mergeMetaFields(matched) {\n  return matched.reduce((meta, record) => assign(meta, record.meta), {});\n}\n\nfunction mergeOptions(defaults, partialOptions) {\n  const options = {};\n\n  for (const key in defaults) {\n    options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\n  }\n\n  return options;\n}\n\nfunction isSameParam(a, b) {\n  return a.name === b.name && a.optional === b.optional && a.repeatable === b.repeatable;\n}\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\n\n\nfunction checkSameParams(a, b) {\n  for (const key of a.keys) {\n    if (!key.optional && !b.keys.find(isSameParam.bind(null, key))) return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\n  }\n\n  for (const key of b.keys) {\n    if (!key.optional && !a.keys.find(isSameParam.bind(null, key))) return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\n  }\n}\n\nfunction checkMissingParamsInAbsolutePath(record, parent) {\n  for (const key of parent.keys) {\n    if (!record.keys.find(isSameParam.bind(null, key))) return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\n  }\n}\n\nfunction isRecordChildOf(record, parent) {\n  return parent.children.some(child => child === record || isRecordChildOf(record, child));\n}\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\n// const EXTRA_RESERVED_RE = /[!'()*]/g\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\n\n\nconst HASH_RE = /#/g; // %23\n\nconst AMPERSAND_RE = /&/g; // %26\n\nconst SLASH_RE = /\\//g; // %2F\n\nconst EQUAL_RE = /=/g; // %3D\n\nconst IM_RE = /\\?/g; // %3F\n\nconst PLUS_RE = /\\+/g; // %2B\n\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\n\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\n\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\n\nconst ENC_CARET_RE = /%5E/g; // ^\n\nconst ENC_BACKTICK_RE = /%60/g; // `\n\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\n\nconst ENC_PIPE_RE = /%7C/g; // |\n\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\n\nconst ENC_SPACE_RE = /%20/g; // }\n\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\n\nfunction commonEncode(text) {\n  return encodeURI('' + text).replace(ENC_PIPE_RE, '|').replace(ENC_BRACKET_OPEN_RE, '[').replace(ENC_BRACKET_CLOSE_RE, ']');\n}\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\n\n\nfunction encodeHash(text) {\n  return commonEncode(text).replace(ENC_CURLY_OPEN_RE, '{').replace(ENC_CURLY_CLOSE_RE, '}').replace(ENC_CARET_RE, '^');\n}\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\n\n\nfunction encodeQueryValue(text) {\n  return commonEncode(text) // Encode the space as +, encode the + to differentiate it from the space\n  .replace(PLUS_RE, '%2B').replace(ENC_SPACE_RE, '+').replace(HASH_RE, '%23').replace(AMPERSAND_RE, '%26').replace(ENC_BACKTICK_RE, '`').replace(ENC_CURLY_OPEN_RE, '{').replace(ENC_CURLY_CLOSE_RE, '}').replace(ENC_CARET_RE, '^');\n}\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\n\n\nfunction encodeQueryKey(text) {\n  return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\n}\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\n\n\nfunction encodePath(text) {\n  return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\n}\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\n\n\nfunction encodeParam(text) {\n  return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\n}\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\n\n\nfunction decode(text) {\n  try {\n    return decodeURIComponent('' + text);\n  } catch (err) {\n    process.env.NODE_ENV !== 'production' && warn(`Error decoding \"${text}\". Using original value`);\n  }\n\n  return '' + text;\n}\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\n\n\nfunction parseQuery(search) {\n  const query = {}; // avoid creating an object with an empty key and empty value\n  // because of split('&')\n\n  if (search === '' || search === '?') return query;\n  const hasLeadingIM = search[0] === '?';\n  const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\n\n  for (let i = 0; i < searchParams.length; ++i) {\n    // pre decode the + into space\n    const searchParam = searchParams[i].replace(PLUS_RE, ' '); // allow the = character\n\n    const eqPos = searchParam.indexOf('=');\n    const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\n    const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\n\n    if (key in query) {\n      // an extra variable for ts types\n      let currentValue = query[key];\n\n      if (!Array.isArray(currentValue)) {\n        currentValue = query[key] = [currentValue];\n      }\n\n      currentValue.push(value);\n    } else {\n      query[key] = value;\n    }\n  }\n\n  return query;\n}\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\n\n\nfunction stringifyQuery(query) {\n  let search = '';\n\n  for (let key in query) {\n    const value = query[key];\n    key = encodeQueryKey(key);\n\n    if (value == null) {\n      // only null adds the value\n      if (value !== undefined) {\n        search += (search.length ? '&' : '') + key;\n      }\n\n      continue;\n    } // keep null values\n\n\n    const values = Array.isArray(value) ? value.map(v => v && encodeQueryValue(v)) : [value && encodeQueryValue(value)];\n    values.forEach(value => {\n      // skip undefined values in arrays as if they were not present\n      // smaller code than using filter\n      if (value !== undefined) {\n        // only append & with non-empty search\n        search += (search.length ? '&' : '') + key;\n        if (value != null) search += '=' + value;\n      }\n    });\n  }\n\n  return search;\n}\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\n\n\nfunction normalizeQuery(query) {\n  const normalizedQuery = {};\n\n  for (const key in query) {\n    const value = query[key];\n\n    if (value !== undefined) {\n      normalizedQuery[key] = Array.isArray(value) ? value.map(v => v == null ? null : '' + v) : value == null ? value : '' + value;\n    }\n  }\n\n  return normalizedQuery;\n}\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\n\n\nfunction useCallbacks() {\n  let handlers = [];\n\n  function add(handler) {\n    handlers.push(handler);\n    return () => {\n      const i = handlers.indexOf(handler);\n      if (i > -1) handlers.splice(i, 1);\n    };\n  }\n\n  function reset() {\n    handlers = [];\n  }\n\n  return {\n    add,\n    list: () => handlers,\n    reset\n  };\n}\n\nfunction registerGuard(record, name, guard) {\n  const removeFromList = () => {\n    record[name].delete(guard);\n  };\n\n  onUnmounted(removeFromList);\n  onDeactivated(removeFromList);\n  onActivated(() => {\n    record[name].add(guard);\n  });\n  record[name].add(guard);\n}\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\n\n\nfunction onBeforeRouteLeave(leaveGuard) {\n  if (process.env.NODE_ENV !== 'production' && !getCurrentInstance()) {\n    warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\n    return;\n  }\n\n  const activeRecord = inject(matchedRouteKey, // to avoid warning\n  {}).value;\n\n  if (!activeRecord) {\n    process.env.NODE_ENV !== 'production' && warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\n    return;\n  }\n\n  registerGuard(activeRecord, 'leaveGuards', leaveGuard);\n}\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\n\n\nfunction onBeforeRouteUpdate(updateGuard) {\n  if (process.env.NODE_ENV !== 'production' && !getCurrentInstance()) {\n    warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\n    return;\n  }\n\n  const activeRecord = inject(matchedRouteKey, // to avoid warning\n  {}).value;\n\n  if (!activeRecord) {\n    process.env.NODE_ENV !== 'production' && warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\n    return;\n  }\n\n  registerGuard(activeRecord, 'updateGuards', updateGuard);\n}\n\nfunction guardToPromiseFn(guard, to, from, record, name) {\n  // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\n  const enterCallbackArray = record && ( // name is defined if record is because of the function overload\n  record.enterCallbacks[name] = record.enterCallbacks[name] || []);\n  return () => new Promise((resolve, reject) => {\n    const next = valid => {\n      if (valid === false) reject(createRouterError(4\n      /* NAVIGATION_ABORTED */\n      , {\n        from,\n        to\n      }));else if (valid instanceof Error) {\n        reject(valid);\n      } else if (isRouteLocation(valid)) {\n        reject(createRouterError(2\n        /* NAVIGATION_GUARD_REDIRECT */\n        , {\n          from: to,\n          to: valid\n        }));\n      } else {\n        if (enterCallbackArray && // since enterCallbackArray is truthy, both record and name also are\n        record.enterCallbacks[name] === enterCallbackArray && typeof valid === 'function') enterCallbackArray.push(valid);\n        resolve();\n      }\n    }; // wrapping with Promise.resolve allows it to work with both async and sync guards\n\n\n    const guardReturn = guard.call(record && record.instances[name], to, from, process.env.NODE_ENV !== 'production' ? canOnlyBeCalledOnce(next, to, from) : next);\n    let guardCall = Promise.resolve(guardReturn);\n    if (guard.length < 3) guardCall = guardCall.then(next);\n\n    if (process.env.NODE_ENV !== 'production' && guard.length > 2) {\n      const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\n\n      if (typeof guardReturn === 'object' && 'then' in guardReturn) {\n        guardCall = guardCall.then(resolvedValue => {\n          // @ts-expect-error: _called is added at canOnlyBeCalledOnce\n          if (!next._called) {\n            warn(message);\n            return Promise.reject(new Error('Invalid navigation guard'));\n          }\n\n          return resolvedValue;\n        }); // TODO: test me!\n      } else if (guardReturn !== undefined) {\n        // @ts-expect-error: _called is added at canOnlyBeCalledOnce\n        if (!next._called) {\n          warn(message);\n          reject(new Error('Invalid navigation guard'));\n          return;\n        }\n      }\n    }\n\n    guardCall.catch(err => reject(err));\n  });\n}\n\nfunction canOnlyBeCalledOnce(next, to, from) {\n  let called = 0;\n  return function () {\n    if (called++ === 1) warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`); // @ts-expect-error: we put it in the original one because it's easier to check\n\n    next._called = true;\n    if (called === 1) next.apply(null, arguments);\n  };\n}\n\nfunction extractComponentsGuards(matched, guardType, to, from) {\n  const guards = [];\n\n  for (const record of matched) {\n    for (const name in record.components) {\n      let rawComponent = record.components[name];\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!rawComponent || typeof rawComponent !== 'object' && typeof rawComponent !== 'function') {\n          warn(`Component \"${name}\" in record with path \"${record.path}\" is not` + ` a valid component. Received \"${String(rawComponent)}\".`); // throw to ensure we stop here but warn to ensure the message isn't\n          // missed by the user\n\n          throw new Error('Invalid route component');\n        } else if ('then' in rawComponent) {\n          // warn if user wrote import('/component.vue') instead of () =>\n          // import('./component.vue')\n          warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` + `Promise instead of a function that returns a Promise. Did you ` + `write \"import('./MyPage.vue')\" instead of ` + `\"() => import('./MyPage.vue')\" ? This will break in ` + `production if not fixed.`);\n          const promise = rawComponent;\n\n          rawComponent = () => promise;\n        } else if (rawComponent.__asyncLoader && // warn only once per component\n        !rawComponent.__warnedDefineAsync) {\n          rawComponent.__warnedDefineAsync = true;\n          warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` + `using \"defineAsyncComponent()\". ` + `Write \"() => import('./MyPage.vue')\" instead of ` + `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\n        }\n      } // skip update and leave guards if the route component is not mounted\n\n\n      if (guardType !== 'beforeRouteEnter' && !record.instances[name]) continue;\n\n      if (isRouteComponent(rawComponent)) {\n        // __vccOpts is added by vue-class-component and contain the regular options\n        const options = rawComponent.__vccOpts || rawComponent;\n        const guard = options[guardType];\n        guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\n      } else {\n        // start requesting the chunk already\n        let componentPromise = rawComponent();\n\n        if (process.env.NODE_ENV !== 'production' && !('catch' in componentPromise)) {\n          warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\n          componentPromise = Promise.resolve(componentPromise);\n        }\n\n        guards.push(() => componentPromise.then(resolved => {\n          if (!resolved) return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\n          const resolvedComponent = isESModule(resolved) ? resolved.default : resolved; // replace the function with the resolved component\n\n          record.components[name] = resolvedComponent; // __vccOpts is added by vue-class-component and contain the regular options\n\n          const options = resolvedComponent.__vccOpts || resolvedComponent;\n          const guard = options[guardType];\n          return guard && guardToPromiseFn(guard, to, from, record, name)();\n        }));\n      }\n    }\n  }\n\n  return guards;\n}\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n *\r\n * @param component\r\n */\n\n\nfunction isRouteComponent(component) {\n  return typeof component === 'object' || 'displayName' in component || 'props' in component || '__vccOpts' in component;\n} // TODO: we could allow currentRoute as a prop to expose `isActive` and\n// `isExactActive` behavior should go through an RFC\n\n\nfunction useLink(props) {\n  const router = inject(routerKey);\n  const currentRoute = inject(routeLocationKey);\n  const route = computed(() => router.resolve(unref(props.to)));\n  const activeRecordIndex = computed(() => {\n    const {\n      matched\n    } = route.value;\n    const {\n      length\n    } = matched;\n    const routeMatched = matched[length - 1];\n    const currentMatched = currentRoute.matched;\n    if (!routeMatched || !currentMatched.length) return -1;\n    const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\n    if (index > -1) return index; // possible parent record\n\n    const parentRecordPath = getOriginalPath(matched[length - 2]);\n    return (// we are dealing with nested routes\n      length > 1 && // if the parent and matched route have the same path, this link is\n      // referring to the empty child. Or we currently are on a different\n      // child of the same parent\n      getOriginalPath(routeMatched) === parentRecordPath && // avoid comparing the child with its parent\n      currentMatched[currentMatched.length - 1].path !== parentRecordPath ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2])) : index\n    );\n  });\n  const isActive = computed(() => activeRecordIndex.value > -1 && includesParams(currentRoute.params, route.value.params));\n  const isExactActive = computed(() => activeRecordIndex.value > -1 && activeRecordIndex.value === currentRoute.matched.length - 1 && isSameRouteLocationParams(currentRoute.params, route.value.params));\n\n  function navigate(e = {}) {\n    if (guardEvent(e)) {\n      return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to) // avoid uncaught errors are they are logged anyway\n      ).catch(noop);\n    }\n\n    return Promise.resolve();\n  } // devtools only\n\n\n  if ((process.env.NODE_ENV !== 'production' || __VUE_PROD_DEVTOOLS__) && isBrowser) {\n    const instance = getCurrentInstance();\n\n    if (instance) {\n      const linkContextDevtools = {\n        route: route.value,\n        isActive: isActive.value,\n        isExactActive: isExactActive.value\n      }; // @ts-expect-error: this is internal\n\n      instance.__vrl_devtools = instance.__vrl_devtools || []; // @ts-expect-error: this is internal\n\n      instance.__vrl_devtools.push(linkContextDevtools);\n\n      watchEffect(() => {\n        linkContextDevtools.route = route.value;\n        linkContextDevtools.isActive = isActive.value;\n        linkContextDevtools.isExactActive = isExactActive.value;\n      }, {\n        flush: 'post'\n      });\n    }\n  }\n\n  return {\n    route,\n    href: computed(() => route.value.href),\n    isActive,\n    isExactActive,\n    navigate\n  };\n}\n\nconst RouterLinkImpl = /*#__PURE__*/defineComponent({\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: [String, Object],\n      required: true\n    },\n    replace: Boolean,\n    activeClass: String,\n    // inactiveClass: String,\n    exactActiveClass: String,\n    custom: Boolean,\n    ariaCurrentValue: {\n      type: String,\n      default: 'page'\n    }\n  },\n  useLink,\n\n  setup(props, {\n    slots\n  }) {\n    const link = reactive(useLink(props));\n    const {\n      options\n    } = inject(routerKey);\n    const elClass = computed(() => ({\n      [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\n      // [getLinkClass(\n      //   props.inactiveClass,\n      //   options.linkInactiveClass,\n      //   'router-link-inactive'\n      // )]: !link.isExactActive,\n      [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive\n    }));\n    return () => {\n      const children = slots.default && slots.default(link);\n      return props.custom ? children : h('a', {\n        'aria-current': link.isExactActive ? props.ariaCurrentValue : null,\n        href: link.href,\n        // this would override user added attrs but Vue will still add\n        // the listener so we end up triggering both\n        onClick: link.navigate,\n        class: elClass.value\n      }, children);\n    };\n  }\n\n}); // export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\n\nconst RouterLink = RouterLinkImpl;\n\nfunction guardEvent(e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) return; // don't redirect when preventDefault called\n\n  if (e.defaultPrevented) return; // don't redirect on right click\n\n  if (e.button !== undefined && e.button !== 0) return; // don't redirect if `target=\"_blank\"`\n  // @ts-expect-error getAttribute does exist\n\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    // @ts-expect-error getAttribute exists\n    const target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) return;\n  } // this may be a Weex event which doesn't have this method\n\n\n  if (e.preventDefault) e.preventDefault();\n  return true;\n}\n\nfunction includesParams(outer, inner) {\n  for (const key in inner) {\n    const innerValue = inner[key];\n    const outerValue = outer[key];\n\n    if (typeof innerValue === 'string') {\n      if (innerValue !== outerValue) return false;\n    } else {\n      if (!Array.isArray(outerValue) || outerValue.length !== innerValue.length || innerValue.some((value, i) => value !== outerValue[i])) return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\n\n\nfunction getOriginalPath(record) {\n  return record ? record.aliasOf ? record.aliasOf.path : record.path : '';\n}\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\n\n\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null ? propClass : globalClass != null ? globalClass : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/defineComponent({\n  name: 'RouterView',\n  // #674 we manually inherit them\n  inheritAttrs: false,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    },\n    route: Object\n  },\n\n  setup(props, {\n    attrs,\n    slots\n  }) {\n    process.env.NODE_ENV !== 'production' && warnDeprecatedUsage();\n    const injectedRoute = inject(routerViewLocationKey);\n    const routeToDisplay = computed(() => props.route || injectedRoute.value);\n    const depth = inject(viewDepthKey, 0);\n    const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\n    provide(viewDepthKey, depth + 1);\n    provide(matchedRouteKey, matchedRouteRef);\n    provide(routerViewLocationKey, routeToDisplay);\n    const viewRef = ref(); // watch at the same time the component instance, the route record we are\n    // rendering, and the name\n\n    watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\n      // copy reused instances\n      if (to) {\n        // this will update the instance for new instances as well as reused\n        // instances when navigating to a new route\n        to.instances[name] = instance; // the component instance is reused for a different route or name so\n        // we copy any saved update or leave guards. With async setup, the\n        // mounting component will mount before the matchedRoute changes,\n        // making instance === oldInstance, so we check if guards have been\n        // added before. This works because we remove guards when\n        // unmounting/deactivating components\n\n        if (from && from !== to && instance && instance === oldInstance) {\n          if (!to.leaveGuards.size) {\n            to.leaveGuards = from.leaveGuards;\n          }\n\n          if (!to.updateGuards.size) {\n            to.updateGuards = from.updateGuards;\n          }\n        }\n      } // trigger beforeRouteEnter next callbacks\n\n\n      if (instance && to && ( // if there is no instance but to and from are the same this might be\n      // the first visit\n      !from || !isSameRouteRecord(to, from) || !oldInstance)) {\n        (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\n      }\n    }, {\n      flush: 'post'\n    });\n    return () => {\n      const route = routeToDisplay.value;\n      const matchedRoute = matchedRouteRef.value;\n      const ViewComponent = matchedRoute && matchedRoute.components[props.name]; // we need the value at the time we render because when we unmount, we\n      // navigated to a different location so the value is different\n\n      const currentName = props.name;\n\n      if (!ViewComponent) {\n        return normalizeSlot(slots.default, {\n          Component: ViewComponent,\n          route\n        });\n      } // props from route configuration\n\n\n      const routePropsOption = matchedRoute.props[props.name];\n      const routeProps = routePropsOption ? routePropsOption === true ? route.params : typeof routePropsOption === 'function' ? routePropsOption(route) : routePropsOption : null;\n\n      const onVnodeUnmounted = vnode => {\n        // remove the instance reference to prevent leak\n        if (vnode.component.isUnmounted) {\n          matchedRoute.instances[currentName] = null;\n        }\n      };\n\n      const component = h(ViewComponent, assign({}, routeProps, attrs, {\n        onVnodeUnmounted,\n        ref: viewRef\n      }));\n\n      if ((process.env.NODE_ENV !== 'production' || __VUE_PROD_DEVTOOLS__) && isBrowser && component.ref) {\n        // TODO: can display if it's an alias, its props\n        const info = {\n          depth,\n          name: matchedRoute.name,\n          path: matchedRoute.path,\n          meta: matchedRoute.meta\n        };\n        const internalInstances = Array.isArray(component.ref) ? component.ref.map(r => r.i) : [component.ref.i];\n        internalInstances.forEach(instance => {\n          // @ts-expect-error\n          instance.__vrv_devtools = info;\n        });\n      }\n\n      return (// pass the vnode to the slot as a prop.\n        // h and <component :is=\"...\"> both accept vnodes\n        normalizeSlot(slots.default, {\n          Component: component,\n          route\n        }) || component\n      );\n    };\n  }\n\n});\n\nfunction normalizeSlot(slot, data) {\n  if (!slot) return null;\n  const slotContent = slot(data);\n  return slotContent.length === 1 ? slotContent[0] : slotContent;\n} // export the public type for h/tsx inference\n// also to avoid inline import() in generated d.ts files\n\n/**\r\n * Component to display the current route the user is at.\r\n */\n\n\nconst RouterView = RouterViewImpl; // warn against deprecated usage with <transition> & <keep-alive>\n// due to functional component being no longer eager in Vue 3\n\nfunction warnDeprecatedUsage() {\n  const instance = getCurrentInstance();\n  const parentName = instance.parent && instance.parent.type.name;\n\n  if (parentName && (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\n    const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\n    warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` + `Use slot props instead:\\n\\n` + `<router-view v-slot=\"{ Component }\">\\n` + `  <${comp}>\\n` + `    <component :is=\"Component\" />\\n` + `  </${comp}>\\n` + `</router-view>`);\n  }\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\n  const copy = assign({}, routeLocation, {\n    // remove variables that can contain vue instances\n    matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf']))\n  });\n  return {\n    _custom: {\n      type: null,\n      readOnly: true,\n      display: routeLocation.fullPath,\n      tooltip,\n      value: copy\n    }\n  };\n}\n\nfunction formatDisplay(display) {\n  return {\n    _custom: {\n      display\n    }\n  };\n} // to support multiple router instances\n\n\nlet routerId = 0;\n\nfunction addDevtools(app, router, matcher) {\n  // Take over router.beforeEach and afterEach\n  // make sure we are not registering the devtool twice\n  if (router.__hasDevtools) return;\n  router.__hasDevtools = true; // increment to support multiple router instances\n\n  const id = routerId++;\n  setupDevtoolsPlugin({\n    id: 'org.vuejs.router' + (id ? '.' + id : ''),\n    label: 'Vue Router',\n    packageName: 'vue-router',\n    homepage: 'https://router.vuejs.org',\n    logo: 'https://router.vuejs.org/logo.png',\n    componentStateTypes: ['Routing'],\n    app\n  }, api => {\n    // display state added by the router\n    api.on.inspectComponent((payload, ctx) => {\n      if (payload.instanceData) {\n        payload.instanceData.state.push({\n          type: 'Routing',\n          key: '$route',\n          editable: false,\n          value: formatRouteLocation(router.currentRoute.value, 'Current Route')\n        });\n      }\n    }); // mark router-link as active and display tags on router views\n\n    api.on.visitComponentTree(({\n      treeNode: node,\n      componentInstance\n    }) => {\n      if (componentInstance.__vrv_devtools) {\n        const info = componentInstance.__vrv_devtools;\n        node.tags.push({\n          label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\n          textColor: 0,\n          tooltip: 'This component is rendered by &lt;router-view&gt;',\n          backgroundColor: PINK_500\n        });\n      } // if multiple useLink are used\n\n\n      if (Array.isArray(componentInstance.__vrl_devtools)) {\n        componentInstance.__devtoolsApi = api;\n\n        componentInstance.__vrl_devtools.forEach(devtoolsData => {\n          let backgroundColor = ORANGE_400;\n          let tooltip = '';\n\n          if (devtoolsData.isExactActive) {\n            backgroundColor = LIME_500;\n            tooltip = 'This is exactly active';\n          } else if (devtoolsData.isActive) {\n            backgroundColor = BLUE_600;\n            tooltip = 'This link is active';\n          }\n\n          node.tags.push({\n            label: devtoolsData.route.path,\n            textColor: 0,\n            tooltip,\n            backgroundColor\n          });\n        });\n      }\n    });\n    watch(router.currentRoute, () => {\n      // refresh active state\n      refreshRoutesView();\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(routerInspectorId);\n      api.sendInspectorState(routerInspectorId);\n    });\n    const navigationsLayerId = 'router:navigations:' + id;\n    api.addTimelineLayer({\n      id: navigationsLayerId,\n      label: `Router${id ? ' ' + id : ''} Navigations`,\n      color: 0x40a8c4\n    }); // const errorsLayerId = 'router:errors'\n    // api.addTimelineLayer({\n    //   id: errorsLayerId,\n    //   label: 'Router Errors',\n    //   color: 0xea5455,\n    // })\n\n    router.onError((error, to) => {\n      api.addTimelineEvent({\n        layerId: navigationsLayerId,\n        event: {\n          title: 'Error during Navigation',\n          subtitle: to.fullPath,\n          logType: 'error',\n          time: api.now(),\n          data: {\n            error\n          },\n          groupId: to.meta.__navigationId\n        }\n      });\n    }); // attached to `meta` and used to group events\n\n    let navigationId = 0;\n    router.beforeEach((to, from) => {\n      const data = {\n        guard: formatDisplay('beforeEach'),\n        from: formatRouteLocation(from, 'Current Location during this navigation'),\n        to: formatRouteLocation(to, 'Target location')\n      }; // Used to group navigations together, hide from devtools\n\n      Object.defineProperty(to.meta, '__navigationId', {\n        value: navigationId++\n      });\n      api.addTimelineEvent({\n        layerId: navigationsLayerId,\n        event: {\n          time: api.now(),\n          title: 'Start of navigation',\n          subtitle: to.fullPath,\n          data,\n          groupId: to.meta.__navigationId\n        }\n      });\n    });\n    router.afterEach((to, from, failure) => {\n      const data = {\n        guard: formatDisplay('afterEach')\n      };\n\n      if (failure) {\n        data.failure = {\n          _custom: {\n            type: Error,\n            readOnly: true,\n            display: failure ? failure.message : '',\n            tooltip: 'Navigation Failure',\n            value: failure\n          }\n        };\n        data.status = formatDisplay('❌');\n      } else {\n        data.status = formatDisplay('✅');\n      } // we set here to have the right order\n\n\n      data.from = formatRouteLocation(from, 'Current Location during this navigation');\n      data.to = formatRouteLocation(to, 'Target location');\n      api.addTimelineEvent({\n        layerId: navigationsLayerId,\n        event: {\n          title: 'End of navigation',\n          subtitle: to.fullPath,\n          time: api.now(),\n          data,\n          logType: failure ? 'warning' : 'default',\n          groupId: to.meta.__navigationId\n        }\n      });\n    });\n    /**\r\n     * Inspector of Existing routes\r\n     */\n\n    const routerInspectorId = 'router-inspector:' + id;\n    api.addInspector({\n      id: routerInspectorId,\n      label: 'Routes' + (id ? ' ' + id : ''),\n      icon: 'book',\n      treeFilterPlaceholder: 'Search routes'\n    });\n\n    function refreshRoutesView() {\n      // the routes view isn't active\n      if (!activeRoutesPayload) return;\n      const payload = activeRoutesPayload; // children routes will appear as nested\n\n      let routes = matcher.getRoutes().filter(route => !route.parent); // reset match state to false\n\n      routes.forEach(resetMatchStateOnRouteRecord); // apply a match state if there is a payload\n\n      if (payload.filter) {\n        routes = routes.filter(route => // save matches state based on the payload\n        isRouteMatching(route, payload.filter.toLowerCase()));\n      } // mark active routes\n\n\n      routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\n      payload.rootNodes = routes.map(formatRouteRecordForInspector);\n    }\n\n    let activeRoutesPayload;\n    api.on.getInspectorTree(payload => {\n      activeRoutesPayload = payload;\n\n      if (payload.app === app && payload.inspectorId === routerInspectorId) {\n        refreshRoutesView();\n      }\n    });\n    /**\r\n     * Display information about the currently selected route record\r\n     */\n\n    api.on.getInspectorState(payload => {\n      if (payload.app === app && payload.inspectorId === routerInspectorId) {\n        const routes = matcher.getRoutes();\n        const route = routes.find(route => route.record.__vd_id === payload.nodeId);\n\n        if (route) {\n          payload.state = {\n            options: formatRouteRecordMatcherForStateInspector(route)\n          };\n        }\n      }\n    });\n    api.sendInspectorTree(routerInspectorId);\n    api.sendInspectorState(routerInspectorId);\n  });\n}\n\nfunction modifierForKey(key) {\n  if (key.optional) {\n    return key.repeatable ? '*' : '?';\n  } else {\n    return key.repeatable ? '+' : '';\n  }\n}\n\nfunction formatRouteRecordMatcherForStateInspector(route) {\n  const {\n    record\n  } = route;\n  const fields = [{\n    editable: false,\n    key: 'path',\n    value: record.path\n  }];\n\n  if (record.name != null) {\n    fields.push({\n      editable: false,\n      key: 'name',\n      value: record.name\n    });\n  }\n\n  fields.push({\n    editable: false,\n    key: 'regexp',\n    value: route.re\n  });\n\n  if (route.keys.length) {\n    fields.push({\n      editable: false,\n      key: 'keys',\n      value: {\n        _custom: {\n          type: null,\n          readOnly: true,\n          display: route.keys.map(key => `${key.name}${modifierForKey(key)}`).join(' '),\n          tooltip: 'Param keys',\n          value: route.keys\n        }\n      }\n    });\n  }\n\n  if (record.redirect != null) {\n    fields.push({\n      editable: false,\n      key: 'redirect',\n      value: record.redirect\n    });\n  }\n\n  if (route.alias.length) {\n    fields.push({\n      editable: false,\n      key: 'aliases',\n      value: route.alias.map(alias => alias.record.path)\n    });\n  }\n\n  fields.push({\n    key: 'score',\n    editable: false,\n    value: {\n      _custom: {\n        type: null,\n        readOnly: true,\n        display: route.score.map(score => score.join(', ')).join(' | '),\n        tooltip: 'Score used to sort routes',\n        value: route.score\n      }\n    }\n  });\n  return fields;\n}\n/**\r\n * Extracted from tailwind palette\r\n */\n\n\nconst PINK_500 = 0xec4899;\nconst BLUE_600 = 0x2563eb;\nconst LIME_500 = 0x84cc16;\nconst CYAN_400 = 0x22d3ee;\nconst ORANGE_400 = 0xfb923c; // const GRAY_100 = 0xf4f4f5\n\nconst DARK = 0x666666;\n\nfunction formatRouteRecordForInspector(route) {\n  const tags = [];\n  const {\n    record\n  } = route;\n\n  if (record.name != null) {\n    tags.push({\n      label: String(record.name),\n      textColor: 0,\n      backgroundColor: CYAN_400\n    });\n  }\n\n  if (record.aliasOf) {\n    tags.push({\n      label: 'alias',\n      textColor: 0,\n      backgroundColor: ORANGE_400\n    });\n  }\n\n  if (route.__vd_match) {\n    tags.push({\n      label: 'matches',\n      textColor: 0,\n      backgroundColor: PINK_500\n    });\n  }\n\n  if (route.__vd_exactActive) {\n    tags.push({\n      label: 'exact',\n      textColor: 0,\n      backgroundColor: LIME_500\n    });\n  }\n\n  if (route.__vd_active) {\n    tags.push({\n      label: 'active',\n      textColor: 0,\n      backgroundColor: BLUE_600\n    });\n  }\n\n  if (record.redirect) {\n    tags.push({\n      label: 'redirect: ' + (typeof record.redirect === 'string' ? record.redirect : 'Object'),\n      textColor: 0xffffff,\n      backgroundColor: DARK\n    });\n  } // add an id to be able to select it. Using the `path` is not possible because\n  // empty path children would collide with their parents\n\n\n  let id = record.__vd_id;\n\n  if (id == null) {\n    id = String(routeRecordId++);\n    record.__vd_id = id;\n  }\n\n  return {\n    id,\n    label: record.path,\n    tags,\n    children: route.children.map(formatRouteRecordForInspector)\n  };\n} //  incremental id for route records and inspector state\n\n\nlet routeRecordId = 0;\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\n\nfunction markRouteRecordActive(route, currentRoute) {\n  // no route will be active if matched is empty\n  // reset the matching state\n  const isExactActive = currentRoute.matched.length && isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\n  route.__vd_exactActive = route.__vd_active = isExactActive;\n\n  if (!isExactActive) {\n    route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\n  }\n\n  route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\n}\n\nfunction resetMatchStateOnRouteRecord(route) {\n  route.__vd_match = false;\n  route.children.forEach(resetMatchStateOnRouteRecord);\n}\n\nfunction isRouteMatching(route, filter) {\n  const found = String(route.re).match(EXTRACT_REGEXP_RE);\n  route.__vd_match = false;\n\n  if (!found || found.length < 3) {\n    return false;\n  } // use a regexp without $ at the end to match nested routes better\n\n\n  const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\n\n  if (nonEndingRE.test(filter)) {\n    // mark children as matches\n    route.children.forEach(child => isRouteMatching(child, filter)); // exception case: `/`\n\n    if (route.record.path !== '/' || filter === '/') {\n      route.__vd_match = route.re.test(filter);\n      return true;\n    } // hide the / route\n\n\n    return false;\n  }\n\n  const path = route.record.path.toLowerCase();\n  const decodedPath = decode(path); // also allow partial matching on the path\n\n  if (!filter.startsWith('/') && (decodedPath.includes(filter) || path.includes(filter))) return true;\n  if (decodedPath.startsWith(filter) || path.startsWith(filter)) return true;\n  if (route.record.name && String(route.record.name).includes(filter)) return true;\n  return route.children.some(child => isRouteMatching(child, filter));\n}\n\nfunction omit(obj, keys) {\n  const ret = {};\n\n  for (const key in obj) {\n    if (!keys.includes(key)) {\n      // @ts-expect-error\n      ret[key] = obj[key];\n    }\n  }\n\n  return ret;\n}\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\n\n\nfunction createRouter(options) {\n  const matcher = createRouterMatcher(options.routes, options);\n  const parseQuery$1 = options.parseQuery || parseQuery;\n  const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\n  const routerHistory = options.history;\n  if (process.env.NODE_ENV !== 'production' && !routerHistory) throw new Error('Provide the \"history\" option when calling \"createRouter()\":' + ' https://next.router.vuejs.org/api/#history.');\n  const beforeGuards = useCallbacks();\n  const beforeResolveGuards = useCallbacks();\n  const afterGuards = useCallbacks();\n  const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\n  let pendingLocation = START_LOCATION_NORMALIZED; // leave the scrollRestoration if no scrollBehavior is provided\n\n  if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\n    history.scrollRestoration = 'manual';\n  }\n\n  const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\n  const encodeParams = applyToParams.bind(null, encodeParam);\n  const decodeParams = // @ts-expect-error: intentionally avoid the type check\n  applyToParams.bind(null, decode);\n\n  function addRoute(parentOrRoute, route) {\n    let parent;\n    let record;\n\n    if (isRouteName(parentOrRoute)) {\n      parent = matcher.getRecordMatcher(parentOrRoute);\n      record = route;\n    } else {\n      record = parentOrRoute;\n    }\n\n    return matcher.addRoute(record, parent);\n  }\n\n  function removeRoute(name) {\n    const recordMatcher = matcher.getRecordMatcher(name);\n\n    if (recordMatcher) {\n      matcher.removeRoute(recordMatcher);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(`Cannot remove non-existent route \"${String(name)}\"`);\n    }\n  }\n\n  function getRoutes() {\n    return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\n  }\n\n  function hasRoute(name) {\n    return !!matcher.getRecordMatcher(name);\n  }\n\n  function resolve(rawLocation, currentLocation) {\n    // const objectLocation = routerLocationAsObject(rawLocation)\n    // we create a copy to modify it later\n    currentLocation = assign({}, currentLocation || currentRoute.value);\n\n    if (typeof rawLocation === 'string') {\n      const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\n      const matchedRoute = matcher.resolve({\n        path: locationNormalized.path\n      }, currentLocation);\n      const href = routerHistory.createHref(locationNormalized.fullPath);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (href.startsWith('//')) warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);else if (!matchedRoute.matched.length) {\n          warn(`No match found for location with path \"${rawLocation}\"`);\n        }\n      } // locationNormalized is always a new object\n\n\n      return assign(locationNormalized, matchedRoute, {\n        params: decodeParams(matchedRoute.params),\n        hash: decode(locationNormalized.hash),\n        redirectedFrom: undefined,\n        href\n      });\n    }\n\n    let matcherLocation; // path could be relative in object as well\n\n    if ('path' in rawLocation) {\n      if (process.env.NODE_ENV !== 'production' && 'params' in rawLocation && !('name' in rawLocation) && // @ts-expect-error: the type is never\n      Object.keys(rawLocation.params).length) {\n        warn(`Path \"${// @ts-expect-error: the type is never\n        rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\n      }\n\n      matcherLocation = assign({}, rawLocation, {\n        path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path\n      });\n    } else {\n      // remove any nullish param\n      const targetParams = assign({}, rawLocation.params);\n\n      for (const key in targetParams) {\n        if (targetParams[key] == null) {\n          delete targetParams[key];\n        }\n      } // pass encoded values to the matcher so it can produce encoded path and fullPath\n\n\n      matcherLocation = assign({}, rawLocation, {\n        params: encodeParams(rawLocation.params)\n      }); // current location params are decoded, we need to encode them in case the\n      // matcher merges the params\n\n      currentLocation.params = encodeParams(currentLocation.params);\n    }\n\n    const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\n    const hash = rawLocation.hash || '';\n\n    if (process.env.NODE_ENV !== 'production' && hash && !hash.startsWith('#')) {\n      warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\n    } // decoding them) the matcher might have merged current location params so\n    // we need to run the decoding again\n\n\n    matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\n    const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\n      hash: encodeHash(hash),\n      path: matchedRoute.path\n    }));\n    const href = routerHistory.createHref(fullPath);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (href.startsWith('//')) {\n        warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\n      } else if (!matchedRoute.matched.length) {\n        warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\n      }\n    }\n\n    return assign({\n      fullPath,\n      // keep the hash encoded so fullPath is effectively path + encodedQuery +\n      // hash\n      hash,\n      query: // if the user is using a custom query lib like qs, we might have\n      // nested objects, so we keep the query as is, meaning it can contain\n      // numbers at `$route.query`, but at the point, the user will have to\n      // use their own type anyway.\n      // https://github.com/vuejs/router/issues/328#issuecomment-649481567\n      stringifyQuery$1 === stringifyQuery ? normalizeQuery(rawLocation.query) : rawLocation.query || {}\n    }, matchedRoute, {\n      redirectedFrom: undefined,\n      href\n    });\n  }\n\n  function locationAsObject(to) {\n    return typeof to === 'string' ? parseURL(parseQuery$1, to, currentRoute.value.path) : assign({}, to);\n  }\n\n  function checkCanceledNavigation(to, from) {\n    if (pendingLocation !== to) {\n      return createRouterError(8\n      /* NAVIGATION_CANCELLED */\n      , {\n        from,\n        to\n      });\n    }\n  }\n\n  function push(to) {\n    return pushWithRedirect(to);\n  }\n\n  function replace(to) {\n    return push(assign(locationAsObject(to), {\n      replace: true\n    }));\n  }\n\n  function handleRedirectRecord(to) {\n    const lastMatched = to.matched[to.matched.length - 1];\n\n    if (lastMatched && lastMatched.redirect) {\n      const {\n        redirect\n      } = lastMatched;\n      let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\n\n      if (typeof newTargetLocation === 'string') {\n        newTargetLocation = newTargetLocation.includes('?') || newTargetLocation.includes('#') ? newTargetLocation = locationAsObject(newTargetLocation) : // force empty params\n        {\n          path: newTargetLocation\n        }; // @ts-expect-error: force empty params when a string is passed to let\n        // the router parse them again\n\n        newTargetLocation.params = {};\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !('path' in newTargetLocation) && !('name' in newTargetLocation)) {\n        warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\n        throw new Error('Invalid redirect');\n      }\n\n      return assign({\n        query: to.query,\n        hash: to.hash,\n        params: to.params\n      }, newTargetLocation);\n    }\n  }\n\n  function pushWithRedirect(to, redirectedFrom) {\n    const targetLocation = pendingLocation = resolve(to);\n    const from = currentRoute.value;\n    const data = to.state;\n    const force = to.force; // to could be a string where `replace` is a function\n\n    const replace = to.replace === true;\n    const shouldRedirect = handleRedirectRecord(targetLocation);\n    if (shouldRedirect) return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\n      state: data,\n      force,\n      replace\n    }), // keep original redirectedFrom if it exists\n    redirectedFrom || targetLocation); // if it was a redirect we already called `pushWithRedirect` above\n\n    const toLocation = targetLocation;\n    toLocation.redirectedFrom = redirectedFrom;\n    let failure;\n\n    if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\n      failure = createRouterError(16\n      /* NAVIGATION_DUPLICATED */\n      , {\n        to: toLocation,\n        from\n      }); // trigger scroll to allow scrolling to the same anchor\n\n      handleScroll(from, from, // this is a push, the only way for it to be triggered from a\n      // history.listen is with a redirect, which makes it become a push\n      true, // This cannot be the first navigation because the initial location\n      // cannot be manually navigated to\n      false);\n    }\n\n    return (failure ? Promise.resolve(failure) : navigate(toLocation, from)).catch(error => isNavigationFailure(error) ? // navigation redirects still mark the router as ready\n    isNavigationFailure(error, 2\n    /* NAVIGATION_GUARD_REDIRECT */\n    ) ? error : markAsReady(error) // also returns the error\n    : // reject any unknown error\n    triggerError(error, toLocation, from)).then(failure => {\n      if (failure) {\n        if (isNavigationFailure(failure, 2\n        /* NAVIGATION_GUARD_REDIRECT */\n        )) {\n          if (process.env.NODE_ENV !== 'production' && // we are redirecting to the same location we were already at\n          isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) && // and we have done it a couple of times\n          redirectedFrom && // @ts-expect-error: added only in dev\n          (redirectedFrom._count = redirectedFrom._count ? // @ts-expect-error\n          redirectedFrom._count + 1 : 1) > 10) {\n            warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\n            return Promise.reject(new Error('Infinite redirect in navigation guard'));\n          }\n\n          return pushWithRedirect( // keep options\n          assign(locationAsObject(failure.to), {\n            state: data,\n            force,\n            replace\n          }), // preserve the original redirectedFrom if any\n          redirectedFrom || toLocation);\n        }\n      } else {\n        // if we fail we don't finalize the navigation\n        failure = finalizeNavigation(toLocation, from, true, replace, data);\n      }\n\n      triggerAfterEach(toLocation, from, failure);\n      return failure;\n    });\n  }\n  /**\r\n   * Helper to reject and skip all navigation guards if a new navigation happened\r\n   * @param to\r\n   * @param from\r\n   */\n\n\n  function checkCanceledNavigationAndReject(to, from) {\n    const error = checkCanceledNavigation(to, from);\n    return error ? Promise.reject(error) : Promise.resolve();\n  } // TODO: refactor the whole before guards by internally using router.beforeEach\n\n\n  function navigate(to, from) {\n    let guards;\n    const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from); // all components here have been resolved once because we are leaving\n\n    guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from); // leavingRecords is already reversed\n\n    for (const record of leavingRecords) {\n      record.leaveGuards.forEach(guard => {\n        guards.push(guardToPromiseFn(guard, to, from));\n      });\n    }\n\n    const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\n    guards.push(canceledNavigationCheck); // run the queue of per route beforeRouteLeave guards\n\n    return runGuardQueue(guards).then(() => {\n      // check global guards beforeEach\n      guards = [];\n\n      for (const guard of beforeGuards.list()) {\n        guards.push(guardToPromiseFn(guard, to, from));\n      }\n\n      guards.push(canceledNavigationCheck);\n      return runGuardQueue(guards);\n    }).then(() => {\n      // check in components beforeRouteUpdate\n      guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\n\n      for (const record of updatingRecords) {\n        record.updateGuards.forEach(guard => {\n          guards.push(guardToPromiseFn(guard, to, from));\n        });\n      }\n\n      guards.push(canceledNavigationCheck); // run the queue of per route beforeEnter guards\n\n      return runGuardQueue(guards);\n    }).then(() => {\n      // check the route beforeEnter\n      guards = [];\n\n      for (const record of to.matched) {\n        // do not trigger beforeEnter on reused views\n        if (record.beforeEnter && !from.matched.includes(record)) {\n          if (Array.isArray(record.beforeEnter)) {\n            for (const beforeEnter of record.beforeEnter) guards.push(guardToPromiseFn(beforeEnter, to, from));\n          } else {\n            guards.push(guardToPromiseFn(record.beforeEnter, to, from));\n          }\n        }\n      }\n\n      guards.push(canceledNavigationCheck); // run the queue of per route beforeEnter guards\n\n      return runGuardQueue(guards);\n    }).then(() => {\n      // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\n      // clear existing enterCallbacks, these are added by extractComponentsGuards\n      to.matched.forEach(record => record.enterCallbacks = {}); // check in-component beforeRouteEnter\n\n      guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\n      guards.push(canceledNavigationCheck); // run the queue of per route beforeEnter guards\n\n      return runGuardQueue(guards);\n    }).then(() => {\n      // check global guards beforeResolve\n      guards = [];\n\n      for (const guard of beforeResolveGuards.list()) {\n        guards.push(guardToPromiseFn(guard, to, from));\n      }\n\n      guards.push(canceledNavigationCheck);\n      return runGuardQueue(guards);\n    }) // catch any navigation canceled\n    .catch(err => isNavigationFailure(err, 8\n    /* NAVIGATION_CANCELLED */\n    ) ? err : Promise.reject(err));\n  }\n\n  function triggerAfterEach(to, from, failure) {\n    // navigation is confirmed, call afterGuards\n    // TODO: wrap with error handlers\n    for (const guard of afterGuards.list()) guard(to, from, failure);\n  }\n  /**\r\n   * - Cleans up any navigation guards\r\n   * - Changes the url if necessary\r\n   * - Calls the scrollBehavior\r\n   */\n\n\n  function finalizeNavigation(toLocation, from, isPush, replace, data) {\n    // a more recent navigation took place\n    const error = checkCanceledNavigation(toLocation, from);\n    if (error) return error; // only consider as push if it's not the first navigation\n\n    const isFirstNavigation = from === START_LOCATION_NORMALIZED;\n    const state = !isBrowser ? {} : history.state; // change URL only if the user did a push/replace and if it's not the initial navigation because\n    // it's just reflecting the url\n\n    if (isPush) {\n      // on the initial navigation, we want to reuse the scroll position from\n      // history state if it exists\n      if (replace || isFirstNavigation) routerHistory.replace(toLocation.fullPath, assign({\n        scroll: isFirstNavigation && state && state.scroll\n      }, data));else routerHistory.push(toLocation.fullPath, data);\n    } // accept current navigation\n\n\n    currentRoute.value = toLocation;\n    handleScroll(toLocation, from, isPush, isFirstNavigation);\n    markAsReady();\n  }\n\n  let removeHistoryListener; // attach listener to history to trigger navigations\n\n  function setupListeners() {\n    removeHistoryListener = routerHistory.listen((to, _from, info) => {\n      // cannot be a redirect route because it was in history\n      const toLocation = resolve(to); // due to dynamic routing, and to hash history with manual navigation\n      // (manually changing the url or calling history.hash = '#/somewhere'),\n      // there could be a redirect record in history\n\n      const shouldRedirect = handleRedirectRecord(toLocation);\n\n      if (shouldRedirect) {\n        pushWithRedirect(assign(shouldRedirect, {\n          replace: true\n        }), toLocation).catch(noop);\n        return;\n      }\n\n      pendingLocation = toLocation;\n      const from = currentRoute.value; // TODO: should be moved to web history?\n\n      if (isBrowser) {\n        saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\n      }\n\n      navigate(toLocation, from).catch(error => {\n        if (isNavigationFailure(error, 4\n        /* NAVIGATION_ABORTED */\n        | 8\n        /* NAVIGATION_CANCELLED */\n        )) {\n          return error;\n        }\n\n        if (isNavigationFailure(error, 2\n        /* NAVIGATION_GUARD_REDIRECT */\n        )) {\n          // Here we could call if (info.delta) routerHistory.go(-info.delta,\n          // false) but this is bug prone as we have no way to wait the\n          // navigation to be finished before calling pushWithRedirect. Using\n          // a setTimeout of 16ms seems to work but there is not guarantee for\n          // it to work on every browser. So Instead we do not restore the\n          // history entry and trigger a new navigation as requested by the\n          // navigation guard.\n          // the error is already handled by router.push we just want to avoid\n          // logging the error\n          pushWithRedirect(error.to, toLocation // avoid an uncaught rejection, let push call triggerError\n          ).then(failure => {\n            // manual change in hash history #916 ending up in the URL not\n            // changing but it was changed by the manual url change, so we\n            // need to manually change it ourselves\n            if (isNavigationFailure(failure, 4\n            /* NAVIGATION_ABORTED */\n            | 16\n            /* NAVIGATION_DUPLICATED */\n            ) && !info.delta && info.type === NavigationType.pop) {\n              routerHistory.go(-1, false);\n            }\n          }).catch(noop); // avoid the then branch\n\n          return Promise.reject();\n        } // do not restore history on unknown direction\n\n\n        if (info.delta) routerHistory.go(-info.delta, false); // unrecognized error, transfer to the global handler\n\n        return triggerError(error, toLocation, from);\n      }).then(failure => {\n        failure = failure || finalizeNavigation( // after navigation, all matched components are resolved\n        toLocation, from, false); // revert the navigation\n\n        if (failure) {\n          if (info.delta) {\n            routerHistory.go(-info.delta, false);\n          } else if (info.type === NavigationType.pop && isNavigationFailure(failure, 4\n          /* NAVIGATION_ABORTED */\n          | 16\n          /* NAVIGATION_DUPLICATED */\n          )) {\n            // manual change in hash history #916\n            // it's like a push but lacks the information of the direction\n            routerHistory.go(-1, false);\n          }\n        }\n\n        triggerAfterEach(toLocation, from, failure);\n      }).catch(noop);\n    });\n  } // Initialization and Errors\n\n\n  let readyHandlers = useCallbacks();\n  let errorHandlers = useCallbacks();\n  let ready;\n  /**\r\n   * Trigger errorHandlers added via onError and throws the error as well\r\n   *\r\n   * @param error - error to throw\r\n   * @param to - location we were navigating to when the error happened\r\n   * @param from - location we were navigating from when the error happened\r\n   * @returns the error as a rejected promise\r\n   */\n\n  function triggerError(error, to, from) {\n    markAsReady(error);\n    const list = errorHandlers.list();\n\n    if (list.length) {\n      list.forEach(handler => handler(error, to, from));\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('uncaught error during route navigation:');\n      }\n\n      console.error(error);\n    }\n\n    return Promise.reject(error);\n  }\n\n  function isReady() {\n    if (ready && currentRoute.value !== START_LOCATION_NORMALIZED) return Promise.resolve();\n    return new Promise((resolve, reject) => {\n      readyHandlers.add([resolve, reject]);\n    });\n  }\n\n  function markAsReady(err) {\n    if (!ready) {\n      // still not ready if an error happened\n      ready = !err;\n      setupListeners();\n      readyHandlers.list().forEach(([resolve, reject]) => err ? reject(err) : resolve());\n      readyHandlers.reset();\n    }\n\n    return err;\n  } // Scroll behavior\n\n\n  function handleScroll(to, from, isPush, isFirstNavigation) {\n    const {\n      scrollBehavior\n    } = options;\n    if (!isBrowser || !scrollBehavior) return Promise.resolve();\n    const scrollPosition = !isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0)) || (isFirstNavigation || !isPush) && history.state && history.state.scroll || null;\n    return nextTick().then(() => scrollBehavior(to, from, scrollPosition)).then(position => position && scrollToPosition(position)).catch(err => triggerError(err, to, from));\n  }\n\n  const go = delta => routerHistory.go(delta);\n\n  let started;\n  const installedApps = new Set();\n  const router = {\n    currentRoute,\n    addRoute,\n    removeRoute,\n    hasRoute,\n    getRoutes,\n    resolve,\n    options,\n    push,\n    replace,\n    go,\n    back: () => go(-1),\n    forward: () => go(1),\n    beforeEach: beforeGuards.add,\n    beforeResolve: beforeResolveGuards.add,\n    afterEach: afterGuards.add,\n    onError: errorHandlers.add,\n    isReady,\n\n    install(app) {\n      const router = this;\n      app.component('RouterLink', RouterLink);\n      app.component('RouterView', RouterView);\n      app.config.globalProperties.$router = router;\n      Object.defineProperty(app.config.globalProperties, '$route', {\n        enumerable: true,\n        get: () => unref(currentRoute)\n      }); // this initial navigation is only necessary on client, on server it doesn't\n      // make sense because it will create an extra unnecessary navigation and could\n      // lead to problems\n\n      if (isBrowser && // used for the initial navigation client side to avoid pushing\n      // multiple times when the router is used in multiple apps\n      !started && currentRoute.value === START_LOCATION_NORMALIZED) {\n        // see above\n        started = true;\n        push(routerHistory.location).catch(err => {\n          if (process.env.NODE_ENV !== 'production') warn('Unexpected error when starting the router:', err);\n        });\n      }\n\n      const reactiveRoute = {};\n\n      for (const key in START_LOCATION_NORMALIZED) {\n        // @ts-expect-error: the key matches\n        reactiveRoute[key] = computed(() => currentRoute.value[key]);\n      }\n\n      app.provide(routerKey, router);\n      app.provide(routeLocationKey, reactive(reactiveRoute));\n      app.provide(routerViewLocationKey, currentRoute);\n      const unmountApp = app.unmount;\n      installedApps.add(app);\n\n      app.unmount = function () {\n        installedApps.delete(app); // the router is not attached to an app anymore\n\n        if (installedApps.size < 1) {\n          // invalidate the current navigation\n          pendingLocation = START_LOCATION_NORMALIZED;\n          removeHistoryListener && removeHistoryListener();\n          currentRoute.value = START_LOCATION_NORMALIZED;\n          started = false;\n          ready = false;\n        }\n\n        unmountApp();\n      };\n\n      if ((process.env.NODE_ENV !== 'production' || __VUE_PROD_DEVTOOLS__) && isBrowser) {\n        addDevtools(app, router, matcher);\n      }\n    }\n\n  };\n  return router;\n}\n\nfunction runGuardQueue(guards) {\n  return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\n}\n\nfunction extractChangingRecords(to, from) {\n  const leavingRecords = [];\n  const updatingRecords = [];\n  const enteringRecords = [];\n  const len = Math.max(from.matched.length, to.matched.length);\n\n  for (let i = 0; i < len; i++) {\n    const recordFrom = from.matched[i];\n\n    if (recordFrom) {\n      if (to.matched.find(record => isSameRouteRecord(record, recordFrom))) updatingRecords.push(recordFrom);else leavingRecords.push(recordFrom);\n    }\n\n    const recordTo = to.matched[i];\n\n    if (recordTo) {\n      // the type doesn't matter because we are comparing per reference\n      if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\n        enteringRecords.push(recordTo);\n      }\n    }\n  }\n\n  return [leavingRecords, updatingRecords, enteringRecords];\n}\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\n\n\nfunction useRouter() {\n  return inject(routerKey);\n}\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\n\n\nfunction useRoute() {\n  return inject(routeLocationKey);\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };","map":{"version":3,"sources":["G:/springboot+vue/crm_vue/node_modules/vue-router/dist/vue-router.esm-bundler.js"],"names":["getCurrentInstance","inject","onUnmounted","onDeactivated","onActivated","computed","unref","watchEffect","defineComponent","reactive","h","provide","ref","watch","shallowRef","nextTick","setupDevtoolsPlugin","hasSymbol","Symbol","toStringTag","PolySymbol","name","process","env","NODE_ENV","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","window","isESModule","obj","__esModule","assign","Object","applyToParams","fn","params","newParams","key","value","Array","isArray","map","noop","warn","msg","args","from","arguments","slice","console","apply","concat","TRAILING_SLASH_RE","removeTrailingSlash","path","replace","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","indexOf","hashPos","length","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","toLowerCase","startsWith","isSameRouteLocation","a","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","keys","isSameRouteLocationParamsValue","isEquivalentArray","every","i","to","fromSegments","split","toSegments","position","toPosition","segment","join","NavigationType","NavigationDirection","START","normalizeBase","baseEl","document","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","el","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","foundEl","err","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","set","getSavedScrollPosition","scroll","get","delete","createBaseLocation","protocol","host","createCurrentLocation","search","slicePos","includes","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","forEach","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","callback","push","teardown","index","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","url","error","data","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","defineProperty","enumerable","createMemoryHistory","queue","setLocation","info","shouldTrigger","Math","max","min","createWebHashHistory","endsWith","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","undefined","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","ErrorTypeMessages","JSON","stringify","stringifyRoute","createRouterError","Error","isNavigationFailure","propertiesToLog","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","message","subPattern","parse","match","avoidDuplicatedSlash","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","test","createRouteRecordMatcher","record","parent","parser","existingKeys","Set","has","add","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","mergeOptions","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","checkMissingParamsInAbsolutePath","checkSameParams","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","isRecordChildOf","resolve","paramsFromLocation","filter","k","find","m","parentMatcher","unshift","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","default","component","propsObject","reduce","defaults","partialOptions","isSameParam","some","child","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","values","v","normalizeQuery","normalizedQuery","useCallbacks","handlers","handler","reset","list","registerGuard","guard","removeFromList","onBeforeRouteLeave","leaveGuard","activeRecord","onBeforeRouteUpdate","updateGuard","guardToPromiseFn","enterCallbackArray","Promise","reject","next","valid","guardReturn","call","canOnlyBeCalledOnce","guardCall","then","toString","resolvedValue","_called","catch","called","extractComponentsGuards","guardType","guards","rawComponent","String","promise","__asyncLoader","__warnedDefineAsync","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","e","guardEvent","__VUE_PROD_DEVTOOLS__","instance","linkContextDevtools","__vrl_devtools","flush","href","RouterLinkImpl","required","Boolean","activeClass","exactActiveClass","custom","ariaCurrentValue","setup","slots","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","target","preventDefault","outer","inner","innerValue","outerValue","propClass","globalClass","defaultClass","RouterViewImpl","inheritAttrs","attrs","warnDeprecatedUsage","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","oldInstance","oldName","size","matchedRoute","ViewComponent","currentName","normalizeSlot","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","internalInstances","r","__vrv_devtools","slot","slotContent","RouterView","parentName","formatRouteLocation","routeLocation","tooltip","copy","omit","_custom","readOnly","display","formatDisplay","routerId","addDevtools","app","__hasDevtools","id","label","packageName","homepage","logo","componentStateTypes","api","on","inspectComponent","payload","ctx","instanceData","editable","visitComponentTree","treeNode","node","componentInstance","tags","textColor","backgroundColor","PINK_500","__devtoolsApi","devtoolsData","ORANGE_400","LIME_500","BLUE_600","refreshRoutesView","notifyComponentUpdate","sendInspectorTree","routerInspectorId","sendInspectorState","navigationsLayerId","addTimelineLayer","color","onError","addTimelineEvent","layerId","event","title","subtitle","logType","time","now","groupId","__navigationId","navigationId","beforeEach","afterEach","failure","status","addInspector","icon","treeFilterPlaceholder","activeRoutesPayload","resetMatchStateOnRouteRecord","isRouteMatching","markRouteRecordActive","rootNodes","formatRouteRecordForInspector","getInspectorTree","inspectorId","getInspectorState","__vd_id","nodeId","formatRouteRecordMatcherForStateInspector","modifierForKey","fields","CYAN_400","DARK","__vd_match","__vd_exactActive","__vd_active","routeRecordId","EXTRACT_REGEXP_RE","childRoute","found","nonEndingRE","decodedPath","ret","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","targetParams","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","handleScroll","markAsReady","triggerError","_count","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","removeHistoryListener","setupListeners","_from","readyHandlers","errorHandlers","ready","isReady","started","installedApps","beforeResolve","install","config","globalProperties","$router","reactiveRoute","unmountApp","unmount","len","recordFrom","recordTo","useRouter","useRoute","START_LOCATION"],"mappings":"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","sourcesContent":["/*!\n  * vue-router v4.0.14\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/router/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/router/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    base = normalizeBase(base);\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\r\n            // Adding children with empty path should still appear before the parent\r\n            // https://github.com/vuejs/router/issues/1124\r\n            (matcher.record.path !== matchers[i].record.path ||\r\n                !isRecordChildOf(matcher, matchers[i])))\r\n            i++;\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\r\nfunction isRecordChildOf(record, parent) {\r\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside of a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\r\n                isBrowser &&\r\n                component.ref) {\r\n                // TODO: can display if it's an alias, its props\r\n                const info = {\r\n                    depth,\r\n                    name: matchedRoute.name,\r\n                    path: matchedRoute.path,\r\n                    meta: matchedRoute.meta,\r\n                };\r\n                const internalInstances = Array.isArray(component.ref)\r\n                    ? component.ref.map(r => r.i)\r\n                    : [component.ref.i];\r\n                internalInstances.forEach(instance => {\r\n                    // @ts-expect-error\r\n                    instance.__vrv_devtools = info;\r\n                });\r\n            }\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://router.vuejs.org',\r\n        logo: 'https://router.vuejs.org/logo.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active and display tags on router views\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (componentInstance.__vrv_devtools) {\r\n                const info = componentInstance.__vrv_devtools;\r\n                node.tags.push({\r\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\r\n                    textColor: 0,\r\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\r\n                    backgroundColor: PINK_500,\r\n                });\r\n            }\r\n            // if multiple useLink are used\r\n            if (Array.isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: api.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: api.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: api.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                // @ts-expect-error: the type is never\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${\r\n                // @ts-expect-error: the type is never\r\n                rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? // navigation redirects still mark the router as ready\r\n                isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)\r\n                    ? error\r\n                    : markAsReady(error) // also returns the error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ |\r\n                            16 /* NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ | 16 /* NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    function markAsReady(err) {\r\n        if (!ready) {\r\n            // still not ready if an error happened\r\n            ready = !err;\r\n            setupListeners();\r\n            readyHandlers\r\n                .list()\r\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n            readyHandlers.reset();\r\n        }\r\n        return err;\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"]},"metadata":{},"sourceType":"module"}