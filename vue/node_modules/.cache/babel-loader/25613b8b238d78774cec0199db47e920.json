{"ast":null,"code":"import { defineComponent, computed, ref, watch, nextTick, onMounted, resolveComponent, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, withKeys, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, toDisplayString, normalizeStyle, Fragment, createVNode } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { switchProps, switchEmits } from './switch.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useFormItem } from '../../../hooks/use-form-item/index.mjs';\nimport { useDisabled, useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn, throwError } from '../../../utils/error.mjs';\nimport { isBoolean } from '@vueuse/core';\nconst COMPONENT_NAME = \"ElSwitch\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElIcon,\n    Loading\n  },\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      formItem\n    } = useFormItem();\n    const switchDisabled = useDisabled(computed(() => props.loading));\n    const ns = useNamespace(\"switch\");\n    const switchSize = useSize();\n    const isModelValue = ref(props.modelValue !== false);\n    const input = ref();\n    const core = ref();\n    const switchKls = computed(() => [ns.b(), ns.m(switchSize.value), ns.is(\"disabled\", switchDisabled.value), ns.is(\"checked\", checked.value)]);\n    watch(() => props.modelValue, () => {\n      isModelValue.value = true;\n    });\n    watch(() => props.value, () => {\n      isModelValue.value = false;\n    });\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value;\n    });\n    const checked = computed(() => actualValue.value === props.activeValue);\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue);\n      emit(CHANGE_EVENT, props.inactiveValue);\n      emit(INPUT_EVENT, props.inactiveValue);\n    }\n\n    watch(checked, () => {\n      var _a;\n\n      input.value.checked = checked.value;\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor();\n      }\n\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\").catch(err => debugWarn(err));\n      }\n    });\n\n    const handleChange = () => {\n      const val = checked.value ? props.inactiveValue : props.activeValue;\n      emit(UPDATE_MODEL_EVENT, val);\n      emit(CHANGE_EVENT, val);\n      emit(INPUT_EVENT, val);\n      nextTick(() => {\n        input.value.checked = checked.value;\n      });\n    };\n\n    const switchValue = () => {\n      if (switchDisabled.value) return;\n      const {\n        beforeChange\n      } = props;\n\n      if (!beforeChange) {\n        handleChange();\n        return;\n      }\n\n      const shouldChange = beforeChange();\n      const isExpectType = [isPromise(shouldChange), isBoolean(shouldChange)].some(i => i);\n\n      if (!isExpectType) {\n        throwError(COMPONENT_NAME, \"beforeChange must return type `Promise<boolean>` or `boolean`\");\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange.then(result => {\n          if (result) {\n            handleChange();\n          }\n        }).catch(e => {\n          debugWarn(COMPONENT_NAME, `some error occurred: ${e}`);\n        });\n      } else if (shouldChange) {\n        handleChange();\n      }\n    };\n\n    const setBackgroundColor = () => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor;\n      const coreEl = core.value;\n      if (props.borderColor) coreEl.style.borderColor = props.borderColor;else if (!props.borderColor) coreEl.style.borderColor = newColor;\n      coreEl.style.backgroundColor = newColor;\n      coreEl.children[0].style.color = newColor;\n    };\n\n    const focus = () => {\n      var _a, _b;\n\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor();\n      }\n\n      input.value.checked = checked.value;\n    });\n    return {\n      ns,\n      input,\n      core,\n      switchDisabled,\n      checked,\n      switchKls,\n      handleChange,\n      switchValue,\n      focus\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"aria-checked\", \"aria-disabled\"];\nconst _hoisted_2 = [\"id\", \"name\", \"true-value\", \"false-value\", \"disabled\"];\nconst _hoisted_3 = [\"aria-hidden\"];\nconst _hoisted_4 = [\"aria-hidden\"];\nconst _hoisted_5 = [\"aria-hidden\"];\nconst _hoisted_6 = [\"aria-hidden\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_loading = resolveComponent(\"loading\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.switchKls),\n    role: \"switch\",\n    \"aria-checked\": _ctx.checked,\n    \"aria-disabled\": _ctx.switchDisabled,\n    onClick: _cache[2] || (_cache[2] = withModifiers((...args) => _ctx.switchValue && _ctx.switchValue(...args), [\"prevent\"]))\n  }, [createElementVNode(\"input\", {\n    id: _ctx.id,\n    ref: \"input\",\n    class: normalizeClass(_ctx.ns.e(\"input\")),\n    type: \"checkbox\",\n    name: _ctx.name,\n    \"true-value\": _ctx.activeValue,\n    \"false-value\": _ctx.inactiveValue,\n    disabled: _ctx.switchDisabled,\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onKeydown: _cache[1] || (_cache[1] = withKeys((...args) => _ctx.switchValue && _ctx.switchValue(...args), [\"enter\"]))\n  }, null, 42, _hoisted_2), !_ctx.inlinePrompt && (_ctx.inactiveIcon || _ctx.inactiveText) ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([_ctx.ns.e(\"label\"), _ctx.ns.em(\"label\", \"left\"), _ctx.ns.is(\"active\", !_ctx.checked)])\n  }, [_ctx.inactiveIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), !_ctx.inactiveIcon && _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    \"aria-hidden\": _ctx.checked\n  }, toDisplayString(_ctx.inactiveText), 9, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n    ref: \"core\",\n    class: normalizeClass(_ctx.ns.e(\"core\")),\n    style: normalizeStyle({\n      width: (_ctx.width || 40) + \"px\"\n    })\n  }, [_ctx.inlinePrompt ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"inner\"))\n  }, [_ctx.activeIcon || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [_ctx.activeIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass([_ctx.ns.is(\"icon\"), _ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), _ctx.inactiveIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1,\n    class: normalizeClass([_ctx.ns.is(\"icon\"), !_ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 64)) : _ctx.activeText || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [_ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([_ctx.ns.is(\"text\"), _ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")]),\n    \"aria-hidden\": !_ctx.checked\n  }, toDisplayString(_ctx.activeText.substring(0, 3)), 11, _hoisted_4)) : createCommentVNode(\"v-if\", true), _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([_ctx.ns.is(\"text\"), !_ctx.checked ? _ctx.ns.is(\"show\") : _ctx.ns.is(\"hide\")]),\n    \"aria-hidden\": _ctx.checked\n  }, toDisplayString(_ctx.inactiveText.substring(0, 3)), 11, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"action\"))\n  }, [_ctx.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass(_ctx.ns.is(\"loading\"))\n  }, {\n    default: withCtx(() => [createVNode(_component_loading)]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 6), !_ctx.inlinePrompt && (_ctx.activeIcon || _ctx.activeText) ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([_ctx.ns.e(\"label\"), _ctx.ns.em(\"label\", \"right\"), _ctx.ns.is(\"active\", _ctx.checked)])\n  }, [_ctx.activeIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), !_ctx.activeIcon && _ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    \"aria-hidden\": !_ctx.checked\n  }, toDisplayString(_ctx.activeText), 9, _hoisted_6)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\n\nvar Switch = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/switch/src/switch.vue\"]]);\n\nexport { Switch as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","components","ElIcon","Loading","props","emits","setup","emit","formItem","useFormItem","switchDisabled","useDisabled","loading","useNamespace","switchSize","useSize","isModelValue","input","ref","core","computed","ns","b","m","value","checked","watch","actualValue","activeValue","inactiveValue","includes","setBackgroundColor","UPDATE_MODEL_EVENT","val","CHANGE_EVENT","nextTick","switchValue","beforeChange","handleChange","shouldChange","isPromise","isBoolean","some","i","throwError","result","catch","e","debugWarn","newColor","coreEl","style","borderColor","backgroundColor","_a","_b","onMounted","switchKls","focus","_resolveComponent","_openBlock","class","role","onClick","_createElementVNode","id","type","_ctx","disabled","onChange","onKeydown","_withKeys","_hoisted_2","key","default","_","_createCommentVNode","_toDisplayString","_hoisted_3","width","_createElementBlock","_component_el_icon","_createBlock","createCommentVNode","_normalizeClass","_hoisted_4"],"sources":["../../../../../../packages/components/switch/src/switch.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"switchKls\"\n    role=\"switch\"\n    :aria-checked=\"checked\"\n    :aria-disabled=\"switchDisabled\"\n    @click.prevent=\"switchValue\"\n  >\n    <input\n      :id=\"id\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'left'),\n        ns.is('active', !checked),\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\"><component :is=\"inactiveIcon\" /></el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span\n      ref=\"core\"\n      :class=\"ns.e('core')\"\n      :style=\"{ width: (width || 40) + 'px' }\"\n    >\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon\n            v-if=\"activeIcon\"\n            :class=\"[ns.is('icon'), checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"activeIcon\" />\n          </el-icon>\n          <el-icon\n            v-if=\"inactiveIcon\"\n            :class=\"[ns.is('icon'), !checked ? ns.is('show') : ns.is('hide')]\"\n          >\n            <component :is=\"inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveIcon\">\n          <span\n            v-if=\"activeText\"\n            :class=\"[ns.is('text'), checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"!checked\"\n          >\n            {{ activeText.substring(0, 3) }}\n          </span>\n          <span\n            v-if=\"inactiveText\"\n            :class=\"[ns.is('text'), !checked ? ns.is('show') : ns.is('hide')]\"\n            :aria-hidden=\"checked\"\n          >\n            {{ inactiveText.substring(0, 3) }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\"><loading /></el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'right'),\n        ns.is('active', checked),\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\"><component :is=\"activeIcon\" /></el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, onMounted, ref, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { debugWarn, isBoolean, throwError } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useDisabled,\n  useFormItem,\n  useNamespace,\n  useSize,\n} from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\n\nconst COMPONENT_NAME = 'ElSwitch'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: { ElIcon, Loading },\n\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, { emit }) {\n    const { formItem } = useFormItem()\n    const switchDisabled = useDisabled(computed(() => props.loading))\n    const ns = useNamespace('switch')\n\n    const switchSize = useSize()\n    const isModelValue = ref(props.modelValue !== false)\n    const input = ref<HTMLInputElement>()\n    const core = ref<HTMLSpanElement>()\n\n    const switchKls = computed(() => [\n      ns.b(),\n      ns.m(switchSize.value),\n      ns.is('disabled', switchDisabled.value),\n      ns.is('checked', checked.value),\n    ])\n\n    watch(\n      () => props.modelValue,\n      () => {\n        isModelValue.value = true\n      }\n    )\n\n    watch(\n      () => props.value,\n      () => {\n        isModelValue.value = false\n      }\n    )\n\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value\n    })\n\n    const checked = computed(() => actualValue.value === props.activeValue)\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n      emit(CHANGE_EVENT, props.inactiveValue)\n      emit(INPUT_EVENT, props.inactiveValue)\n    }\n\n    watch(checked, () => {\n      input.value!.checked = checked.value\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor()\n      }\n\n      if (props.validateEvent) {\n        formItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    })\n\n    const handleChange = (): void => {\n      const val = checked.value ? props.inactiveValue : props.activeValue\n      emit(UPDATE_MODEL_EVENT, val)\n      emit(CHANGE_EVENT, val)\n      emit(INPUT_EVENT, val)\n      nextTick(() => {\n        input.value!.checked = checked.value\n      })\n    }\n\n    const switchValue = (): void => {\n      if (switchDisabled.value) return\n\n      const { beforeChange } = props\n      if (!beforeChange) {\n        handleChange()\n        return\n      }\n\n      const shouldChange = beforeChange()\n\n      const isExpectType = [\n        isPromise(shouldChange),\n        isBoolean(shouldChange),\n      ].some((i) => i)\n      if (!isExpectType) {\n        throwError(\n          COMPONENT_NAME,\n          'beforeChange must return type `Promise<boolean>` or `boolean`'\n        )\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange\n          .then((result) => {\n            if (result) {\n              handleChange()\n            }\n          })\n          .catch((e) => {\n            debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n          })\n      } else if (shouldChange) {\n        handleChange()\n      }\n    }\n\n    const setBackgroundColor = (): void => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor\n      const coreEl = core.value\n      if (props.borderColor) coreEl!.style.borderColor = props.borderColor\n      else if (!props.borderColor) coreEl!.style.borderColor = newColor\n      coreEl!.style.backgroundColor = newColor\n      ;(coreEl!.children[0] as HTMLDivElement).style.color = newColor\n    }\n\n    const focus = (): void => {\n      input.value?.focus?.()\n    }\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor()\n      }\n\n      input.value!.checked = checked.value\n    })\n\n    return {\n      ns,\n      input,\n      core,\n      switchDisabled,\n      checked,\n      switchKls,\n      handleChange,\n      switchValue,\n      focus,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}