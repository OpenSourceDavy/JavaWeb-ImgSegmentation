{"ast":null,"code":"import { computed } from 'vue';\n\nconst useComputedData = props => {\n  const propsKey = computed(() => props.props.key);\n  const dataObj = computed(() => {\n    return props.data.reduce((o, cur) => (o[cur[propsKey.value]] = cur) && o, {});\n  });\n  const sourceData = computed(() => {\n    return props.data.filter(item => !props.modelValue.includes(item[propsKey.value]));\n  });\n  const targetData = computed(() => {\n    if (props.targetOrder === \"original\") {\n      return props.data.filter(item => props.modelValue.includes(item[propsKey.value]));\n    } else {\n      return props.modelValue.reduce((arr, cur) => {\n        const val = dataObj.value[cur];\n\n        if (val) {\n          arr.push(val);\n        }\n\n        return arr;\n      }, []);\n    }\n  });\n  return {\n    propsKey,\n    sourceData,\n    targetData\n  };\n};\n\nexport { useComputedData };","map":{"version":3,"mappings":";;AACY,MAACA,eAAe,GAAIC,KAAD,IAAW;AACxC,QAAMC,QAAQ,GAAGC,QAAQ,CAAC,MAAMF,KAAK,CAACA,KAAN,CAAYG,GAAnB,CAAzB;AACA,QAAMC,OAAO,GAAGF,QAAQ,CAAC,MAAM;AAC7B,WAAOF,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkB,CAACC,CAAD,EAAIC,GAAJ,KAAY,CAACD,CAAC,CAACC,GAAG,CAACP,QAAQ,CAACQ,KAAV,CAAJ,CAAD,GAAyBD,GAA1B,KAAkCD,CAAhE,EAAmE,EAAnE,CAAP;AACD,GAFuB,CAAxB;AAGA,QAAMG,UAAU,GAAGR,QAAQ,CAAC,MAAM;AAChC,WAAOF,KAAK,CAACK,IAAN,CAAWM,MAAX,CAAmBC,IAAD,IAAU,CAACZ,KAAK,CAACa,UAAN,CAAiBC,QAAjB,CAA0BF,IAAI,CAACX,QAAQ,CAACQ,KAAV,CAA9B,CAA7B,CAAP;AACD,GAF0B,CAA3B;AAGA,QAAMM,UAAU,GAAGb,QAAQ,CAAC,MAAM;AAChC,QAAIF,KAAK,CAACgB,WAAN,KAAsB,UAA1B,EAAsC;AACpC,aAAOhB,KAAK,CAACK,IAAN,CAAWM,MAAX,CAAmBC,IAAD,IAAUZ,KAAK,CAACa,UAAN,CAAiBC,QAAjB,CAA0BF,IAAI,CAACX,QAAQ,CAACQ,KAAV,CAA9B,CAA5B,CAAP;AACD,KAFD,MAEO;AACL,aAAOT,KAAK,CAACa,UAAN,CAAiBP,MAAjB,CAAwB,CAACW,GAAD,EAAMT,GAAN,KAAc;AAC3C,cAAMU,GAAG,GAAGd,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAZ;;AACA,YAAIU,GAAJ,EAAS;AACPD,aAAG,CAACE,IAAJ,CAASD,GAAT;AACD;;AACD,eAAOD,GAAP;AACD,OANM,EAMJ,EANI,CAAP;AAOD;AACF,GAZ0B,CAA3B;AAaA,SAAO;AACLhB,YADK;AAELS,cAFK;AAGLK;AAHK,GAAP;AAKF,CA1BY","names":["useComputedData","props","propsKey","computed","key","dataObj","data","reduce","o","cur","value","sourceData","filter","item","modelValue","includes","targetData","targetOrder","arr","val","push"],"sources":["../../../../../../packages/components/transfer/src/useComputedData.ts"],"sourcesContent":["import { computed } from 'vue'\n\nimport type { TransferProps } from './transfer'\n\nexport const useComputedData = (props: TransferProps) => {\n  const propsKey = computed(() => props.props.key)\n\n  const dataObj = computed(() => {\n    return props.data.reduce(\n      (o, cur) => (o[cur[propsKey.value]] = cur) && o,\n      {}\n    )\n  })\n\n  const sourceData = computed(() => {\n    return props.data.filter(\n      (item) => !props.modelValue.includes(item[propsKey.value])\n    )\n  })\n\n  const targetData = computed(() => {\n    if (props.targetOrder === 'original') {\n      return props.data.filter((item) =>\n        props.modelValue.includes(item[propsKey.value])\n      )\n    } else {\n      return props.modelValue.reduce((arr, cur) => {\n        const val = dataObj.value[cur]\n        if (val) {\n          arr.push(val)\n        }\n        return arr\n      }, [])\n    }\n  })\n\n  return {\n    propsKey,\n    sourceData,\n    targetData,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}