{"ast":null,"code":"import { defineComponent, ref, provide, h } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport { DEFAULT_FORMATS_TIME } from './common/constant.mjs';\nimport CommonPicker from './common/picker.mjs';\nimport TimePickPanel from './time-picker-com/panel-time-pick.mjs';\nimport TimeRangePanel from './time-picker-com/panel-time-range.mjs';\nimport { timePickerDefaultProps } from './common/props.mjs';\ndayjs.extend(customParseFormat);\nvar TimePicker = defineComponent({\n  name: \"ElTimePicker\",\n  install: null,\n  props: { ...timePickerDefaultProps,\n    isRange: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"update:modelValue\"],\n\n  setup(props, ctx) {\n    const commonPicker = ref(null);\n    const type = props.isRange ? \"timerange\" : \"time\";\n    const panel = props.isRange ? TimeRangePanel : TimePickPanel;\n    const refProps = { ...props,\n      focus: () => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleFocus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleBlur();\n      }\n    };\n    provide(\"ElPopperOptions\", props.popperOptions);\n    ctx.expose(refProps);\n    return () => {\n      var _a;\n\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_TIME;\n      return h(CommonPicker, { ...props,\n        format,\n        type,\n        ref: commonPicker,\n        \"onUpdate:modelValue\": value => ctx.emit(\"update:modelValue\", value)\n      }, {\n        default: scopedProps => h(panel, scopedProps)\n      });\n    };\n  }\n\n});\nexport { TimePicker as default };","map":{"version":3,"mappings":";;;;;;;;AAQAA,KAAK,CAACC,MAAN,CAAaC,iBAAb;AACA,iBAAeC,eAAe,CAAC;AAC7BC,MAAI,EAAE,cADuB;AAE7BC,SAAO,EAAE,IAFoB;AAG7BC,OAAK,EAAE,EACL,GAAGC,sBADE;AAELC,WAAO,EAAE;AACPC,UAAI,EAAEC,OADC;AAEPC,aAAO,EAAE;AAFF;AAFJ,GAHsB;AAU7BC,OAAK,EAAE,CAAC,mBAAD,CAVsB;;AAW7BC,OAAK,CAACP,KAAD,EAAQQ,GAAR,EAAa;AAChB,UAAMC,YAAY,GAAGC,GAAG,CAAC,IAAD,CAAxB;AACA,UAAMP,IAAI,GAAGH,KAAK,CAACE,OAAN,GAAgB,WAAhB,GAA8B,MAA3C;AACA,UAAMS,KAAK,GAAGX,KAAK,CAACE,OAAN,GAAgBU,cAAhB,GAAiCC,aAA/C;AACA,UAAMC,QAAQ,GAAG,EACf,GAAGd,KADY;AAEfe,WAAK,EAAE,MAAM;AACX,YAAIC,EAAJ;;AACA,SAACA,EAAE,GAAGP,YAAY,CAACQ,KAAnB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CD,EAAE,CAACE,WAAH,EAA7C;AACD,OALc;AAMfC,UAAI,EAAE,MAAM;AACV,YAAIH,EAAJ;;AACA,SAACA,EAAE,GAAGP,YAAY,CAACQ,KAAnB,KAA6B,IAA7B,GAAoC,KAAK,CAAzC,GAA6CD,EAAE,CAACI,UAAH,EAA7C;AACD;AATc,KAAjB;AAWAC,WAAO,CAAC,iBAAD,EAAoBrB,KAAK,CAACsB,aAA1B,CAAP;AACAd,OAAG,CAACe,MAAJ,CAAWT,QAAX;AACA,WAAO,MAAM;AACX,UAAIE,EAAJ;;AACA,YAAMQ,MAAM,GAAG,CAACR,EAAE,GAAGhB,KAAK,CAACwB,MAAZ,KAAuB,IAAvB,GAA8BR,EAA9B,GAAmCS,oBAAlD;AACA,aAAOC,CAAC,CAACC,YAAD,EAAS,EACf,GAAG3B,KADY;AAEfwB,cAFe;AAGfrB,YAHe;AAIfO,WAAG,EAAED,YAJU;AAKf,+BAAwBQ,KAAD,IAAWT,GAAG,CAACoB,IAAJ,CAAS,mBAAT,EAA8BX,KAA9B;AALnB,OAAT,EAML;AACDZ,eAAO,EAAGwB,WAAD,IAAiBH,CAAC,CAACf,KAAD,EAAQkB,WAAR;AAD1B,OANK,CAAR;AASD,KAZD;AAaD;;AAzC4B,CAAD,CAA9B","names":["dayjs","extend","customParseFormat","defineComponent","name","install","props","timePickerDefaultProps","isRange","type","Boolean","default","emits","setup","ctx","commonPicker","ref","panel","TimeRangePanel","TimePickPanel","refProps","focus","_a","value","handleFocus","blur","handleBlur","provide","popperOptions","expose","format","DEFAULT_FORMATS_TIME","h","Picker","emit","scopedProps"],"sources":["../../../../../../packages/components/time-picker/src/time-picker.ts"],"sourcesContent":["import { defineComponent, h, provide, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport { DEFAULT_FORMATS_TIME } from './common/constant'\nimport Picker from './common/picker.vue'\nimport TimePickPanel from './time-picker-com/panel-time-pick.vue'\nimport TimeRangePanel from './time-picker-com/panel-time-range.vue'\nimport { timePickerDefaultProps } from './common/props'\ndayjs.extend(customParseFormat)\n\nexport default defineComponent({\n  name: 'ElTimePicker',\n  install: null,\n  props: {\n    ...timePickerDefaultProps,\n    isRange: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, ctx) {\n    const commonPicker = ref(null)\n    const type = props.isRange ? 'timerange' : 'time'\n    const panel = props.isRange ? TimeRangePanel : TimePickPanel\n    const refProps = {\n      ...props,\n      focus: () => {\n        commonPicker.value?.handleFocus()\n      },\n      blur: () => {\n        commonPicker.value?.handleBlur()\n      },\n    }\n    provide('ElPopperOptions', props.popperOptions)\n    ctx.expose(refProps)\n    return () => {\n      const format = props.format ?? DEFAULT_FORMATS_TIME\n      return h(\n        Picker,\n        {\n          ...props, // allow format to be overwrite\n          format,\n          type,\n          ref: commonPicker,\n          'onUpdate:modelValue': (value) =>\n            ctx.emit('update:modelValue', value),\n        },\n        {\n          default: (scopedProps) => h(panel, scopedProps),\n        }\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}