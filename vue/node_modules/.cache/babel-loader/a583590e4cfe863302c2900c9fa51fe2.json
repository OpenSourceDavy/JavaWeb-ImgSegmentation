{"ast":null,"code":"import { isClient } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { off, on } from '../../../utils/dom/event.mjs';\nlet isDragging = false;\n\nfunction draggable(element, options) {\n  if (!isClient) return;\n\n  const moveFn = function (event) {\n    var _a;\n\n    (_a = options.drag) == null ? void 0 : _a.call(options, event);\n  };\n\n  const upFn = function (event) {\n    var _a;\n\n    off(document, \"mousemove\", moveFn);\n    off(document, \"mouseup\", upFn);\n    off(document, \"touchmove\", moveFn);\n    off(document, \"touchend\", upFn);\n    document.onselectstart = null;\n    document.ondragstart = null;\n    isDragging = false;\n    (_a = options.end) == null ? void 0 : _a.call(options, event);\n  };\n\n  const downFn = function (event) {\n    var _a;\n\n    if (isDragging) return;\n    event.preventDefault();\n\n    document.onselectstart = () => false;\n\n    document.ondragstart = () => false;\n\n    on(document, \"mousemove\", moveFn);\n    on(document, \"mouseup\", upFn);\n    on(document, \"touchmove\", moveFn);\n    on(document, \"touchend\", upFn);\n    isDragging = true;\n    (_a = options.start) == null ? void 0 : _a.call(options, event);\n  };\n\n  on(element, \"mousedown\", downFn);\n  on(element, \"touchstart\", downFn);\n}\n\nexport { draggable as default };","map":{"version":3,"mappings":";;;AAEA,IAAIA,UAAU,GAAG,KAAjB;;AACe,mBAASC,OAAT,EAAkBC,OAAlB,EAA2B;AACxC,MAAI,CAACC,QAAL,EACE;;AACF,QAAMC,MAAM,GAAG,UAASC,KAAT,EAAgB;AAC7B,QAAIC,EAAJ;;AACA,KAACA,EAAE,GAAGJ,OAAO,CAACK,IAAd,KAAuB,IAAvB,GAA8B,KAAK,CAAnC,GAAuCD,EAAE,CAACE,IAAH,CAAQN,OAAR,EAAiBG,KAAjB,CAAvC;AACD,GAHD;;AAIA,QAAMI,IAAI,GAAG,UAASJ,KAAT,EAAgB;AAC3B,QAAIC,EAAJ;;AACAI,OAAG,CAACC,QAAD,EAAW,WAAX,EAAwBP,MAAxB,CAAH;AACAM,OAAG,CAACC,QAAD,EAAW,SAAX,EAAsBF,IAAtB,CAAH;AACAC,OAAG,CAACC,QAAD,EAAW,WAAX,EAAwBP,MAAxB,CAAH;AACAM,OAAG,CAACC,QAAD,EAAW,UAAX,EAAuBF,IAAvB,CAAH;AACAE,YAAQ,CAACC,aAAT,GAAyB,IAAzB;AACAD,YAAQ,CAACE,WAAT,GAAuB,IAAvB;AACAb,cAAU,GAAG,KAAb;AACA,KAACM,EAAE,GAAGJ,OAAO,CAACY,GAAd,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsCR,EAAE,CAACE,IAAH,CAAQN,OAAR,EAAiBG,KAAjB,CAAtC;AACD,GAVD;;AAWA,QAAMU,MAAM,GAAG,UAASV,KAAT,EAAgB;AAC7B,QAAIC,EAAJ;;AACA,QAAIN,UAAJ,EACE;AACFK,SAAK,CAACW,cAAN;;AACAL,YAAQ,CAACC,aAAT,GAAyB,MAAM,KAA/B;;AACAD,YAAQ,CAACE,WAAT,GAAuB,MAAM,KAA7B;;AACAI,MAAE,CAACN,QAAD,EAAW,WAAX,EAAwBP,MAAxB,CAAF;AACAa,MAAE,CAACN,QAAD,EAAW,SAAX,EAAsBF,IAAtB,CAAF;AACAQ,MAAE,CAACN,QAAD,EAAW,WAAX,EAAwBP,MAAxB,CAAF;AACAa,MAAE,CAACN,QAAD,EAAW,UAAX,EAAuBF,IAAvB,CAAF;AACAT,cAAU,GAAG,IAAb;AACA,KAACM,EAAE,GAAGJ,OAAO,CAACgB,KAAd,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCZ,EAAE,CAACE,IAAH,CAAQN,OAAR,EAAiBG,KAAjB,CAAxC;AACD,GAbD;;AAcAY,IAAE,CAAChB,OAAD,EAAU,WAAV,EAAuBc,MAAvB,CAAF;AACAE,IAAE,CAAChB,OAAD,EAAU,YAAV,EAAwBc,MAAxB,CAAF;AACF","names":["isDragging","element","options","isClient","moveFn","event","_a","drag","call","upFn","off","document","onselectstart","ondragstart","end","downFn","preventDefault","on","start"],"sources":["../../../../../../packages/components/color-picker/src/draggable.ts"],"sourcesContent":["import { isClient } from '@vueuse/core'\nimport { off, on } from '@element-plus/utils'\n\nlet isDragging = false\n\nexport declare interface IOptions {\n  drag?: (event: Event) => void\n  start?: (event: Event) => void\n  end?: (event: Event) => void\n}\n\nexport default function (element: HTMLElement, options: IOptions) {\n  if (!isClient) return\n\n  const moveFn = function (event: Event) {\n    options.drag?.(event)\n  }\n\n  const upFn = function (event: Event) {\n    off(document, 'mousemove', moveFn)\n    off(document, 'mouseup', upFn)\n    off(document, 'touchmove', moveFn)\n    off(document, 'touchend', upFn)\n    document.onselectstart = null\n    document.ondragstart = null\n\n    isDragging = false\n\n    options.end?.(event)\n  }\n\n  const downFn = function (event: Event) {\n    if (isDragging) return\n    event.preventDefault()\n    document.onselectstart = () => false\n    document.ondragstart = () => false\n    on(document, 'mousemove', moveFn)\n    on(document, 'mouseup', upFn)\n    on(document, 'touchmove', moveFn)\n    on(document, 'touchend', upFn)\n\n    isDragging = true\n\n    options.start?.(event)\n  }\n\n  on(element, 'mousedown', downFn)\n  on(element, 'touchstart', downFn)\n}\n"]},"metadata":{},"sourceType":"module"}