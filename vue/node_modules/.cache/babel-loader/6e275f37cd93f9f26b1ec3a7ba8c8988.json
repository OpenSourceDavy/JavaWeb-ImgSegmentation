{"ast":null,"code":"import { defineComponent, ref, watch, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, Fragment, renderList, createBlock } from 'vue';\nimport { isEqual } from 'lodash-unified';\nimport { ElSelect, ElOption } from '../../../select/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { usePagination } from '../usePagination.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { buildProps, definePropType } from '../../../../utils/vue/props.mjs';\nimport { mutable } from '../../../../utils/typescript.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nconst paginationSizesProps = buildProps({\n  pageSize: {\n    type: Number,\n    required: true\n  },\n  pageSizes: {\n    type: definePropType(Array),\n    default: () => mutable([10, 20, 30, 40, 50, 100])\n  },\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  disabled: Boolean,\n  size: {\n    type: String,\n    default: \"default\"\n  }\n});\n\nconst _sfc_main = defineComponent({\n  name: \"ElPaginationSizes\",\n  components: {\n    ElSelect,\n    ElOption\n  },\n  props: paginationSizesProps,\n  emits: [\"page-size-change\"],\n\n  setup(props, {\n    emit\n  }) {\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"pagination\");\n    const pagination = usePagination();\n    const innerPageSize = ref(props.pageSize);\n    watch(() => props.pageSizes, (newVal, oldVal) => {\n      if (isEqual(newVal, oldVal)) return;\n\n      if (Array.isArray(newVal)) {\n        const pageSize = newVal.includes(props.pageSize) ? props.pageSize : props.pageSizes[0];\n        emit(\"page-size-change\", pageSize);\n      }\n    });\n    watch(() => props.pageSize, newVal => {\n      innerPageSize.value = newVal;\n    });\n    const innerPagesizes = computed(() => props.pageSizes);\n\n    function handleChange(val) {\n      var _a;\n\n      if (val !== innerPageSize.value) {\n        innerPageSize.value = val;\n        (_a = pagination.handleSizeChange) == null ? void 0 : _a.call(pagination, Number(val));\n      }\n    }\n\n    return {\n      ns,\n      innerPagesizes,\n      innerPageSize,\n      t,\n      handleChange\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = resolveComponent(\"el-option\");\n\n  const _component_el_select = resolveComponent(\"el-select\");\n\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass(_ctx.ns.e(\"sizes\"))\n  }, [createVNode(_component_el_select, {\n    \"model-value\": _ctx.innerPageSize,\n    disabled: _ctx.disabled,\n    \"popper-class\": _ctx.popperClass,\n    size: _ctx.size,\n    onChange: _ctx.handleChange\n  }, {\n    default: withCtx(() => [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.innerPagesizes, item => {\n      return openBlock(), createBlock(_component_el_option, {\n        key: item,\n        value: item,\n        label: item + _ctx.t(\"el.pagination.pagesize\")\n      }, null, 8, [\"value\", \"label\"]);\n    }), 128))]),\n    _: 1\n  }, 8, [\"model-value\", \"disabled\", \"popper-class\", \"size\", \"onChange\"])], 2);\n}\n\nvar Sizes = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/sizes.vue\"]]);\n\nexport { Sizes as default };","map":{"version":3,"mappings":";;;;;;;;;;;AA6BA,MAAMA,uBAAuBC,UAAW;AACtCC,UAAU;AACRC,QAAM,QADE;AAERC,YAAU;AAFF,GAD4B;AAKtCC,WAAW;AACTF,UAAMG,eAAyBC,KAAzB,CADG;AAETC,aAAS,MAAMC,QAAQ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,GAArB,CAAR;AAFN,GAL2B;AAStCC,aAAa;AACXP,QAAM,QADK;AAEXK,WAAS;AAFE,GATyB;AAatCG,UAAU,SAb4B;AActCC,MAAM;AACJT,QAAM,QADF;AAEJK,WAAS;AAFL;AAdgC,EAAxC;;AAoBA,MAAKK,YAAaC,eAAa;AAC7BC,MAAM,qBADuB;AAG7BC,YAAY;AACVC,YADU;AAEVC;AAFU,GAHiB;AAQ7BC,OAAO,sBARsB;AAS7BC,SAAO,CAAC,kBAAD,CATsB;;AAW7BC,QAAMF,KAAN,EAAa;AAAEG;AAAF,GAAb,EAAuB;AACf;AAAEC;AAAF,QAAQC,SAAU,EAAlB;AACA,eAAKC,aAAa,YAAb,CAAL;AACN,UAAMC,aAAaC,aAAc,EAAjC;AACM,0BAAgBC,GAAsB,OAAM1B,QAAN,CAAtC;AAEN2B,UACE,MAAMV,MAAMd,SADd,EAEE,CAACyB,MAAD,EAASC,MAAT,KAAoB;AACd,kBAAQD,MAAR,EAAgBC,MAAhB,GAAyB;;AACzB,gBAAMC,OAAN,CAAcF,MAAd,GAAuB;AACnB,yBAAWA,OAAOG,QAAP,CAAgBd,MAAMjB,QAAtB,IACbiB,MAAMjB,QADO,GAEbiB,MAAMd,SAAN,CAAgB,CAAhB,CAFE;AAGNiB,aAAK,kBAAL,EAAyBpB,QAAzB;AACF;AAEJ,KAXA;AAaA2B,UACE,MAAMV,MAAMjB,QADd,EAEG4B,MAAD,IAAY;AACVI,oBAAcC,KAAd,GAAsBL,MAAtB;AAEJ,KALA;AAOA,UAAMM,cAAiB,YAAS,MAAMjB,MAAMd,SAArB,CAAvB;;AAEA,0BAAsBgC,GAAtB,EAAmC;AAC7B;;AACF,+BAAsB,MAAtB,EAAsB;AACXH;AACb;AACF;AAEO;;AACL;AACAI,QADA;AAEAF,oBAFA;AAIAF,mBAJA;AAKAX,OALA;AAMFgB;AANE;AAQL;;AAvD8B,EAA/B;;;;;4BAjCS;;AAfA,kBAAO,sBAAI;AAAAC;AAAA,KAcJ,YAZI;AACb,mBAAUC,kBADG;AAEb9B,YAAc,eAFD;AAGb,oBAAM8B,gBAHO;AAIb7B,QAAQ,WAJK;AAIL8B;AAJK;AAOkBlC,2BAI9B;AAAA,aAHMmC;AACLC,WAAO,MADF;AAELT,eAAOU,IAFF;AAEUC;AAFV,qCAGN;KAAA,SAJ8B;;GAPlB,qEAYJ,CAdI,IAAX","names":["paginationSizesProps","buildProps","pageSize","type","required","pageSizes","definePropType","Array","default","mutable","popperClass","disabled","size","_sfc_main","defineComponent","name","components","ElSelect","ElOption","props","emits","setup","emit","t","useLocale","useNamespace","pagination","usePagination","ref","watch","newVal","oldVal","isArray","includes","innerPageSize","value","innerPagesizes","val","ns","handleChange","class","_ctx","onChange","_openBlock","key","item","label"],"sources":["../../../../../../../packages/components/pagination/src/components/sizes.vue"],"sourcesContent":["<template>\n  <span :class=\"ns.e('sizes')\">\n    <el-select\n      :model-value=\"innerPageSize\"\n      :disabled=\"disabled\"\n      :popper-class=\"popperClass\"\n      :size=\"size\"\n      @change=\"handleChange\"\n    >\n      <el-option\n        v-for=\"item in innerPagesizes\"\n        :key=\"item\"\n        :value=\"item\"\n        :label=\"item + t('el.pagination.pagesize')\"\n      />\n    </el-select>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, watch } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { ElOption, ElSelect } from '@element-plus/components/select'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { usePagination } from '../usePagination'\n\nimport type { Nullable } from '@element-plus/utils'\n\nconst paginationSizesProps = buildProps({\n  pageSize: {\n    type: Number,\n    required: true,\n  },\n  pageSizes: {\n    type: definePropType<number[]>(Array),\n    default: () => mutable([10, 20, 30, 40, 50, 100] as const),\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  disabled: Boolean,\n  size: {\n    type: String,\n    default: 'default',\n  },\n} as const)\n\nexport default defineComponent({\n  name: 'ElPaginationSizes',\n\n  components: {\n    ElSelect,\n    ElOption,\n  },\n\n  props: paginationSizesProps,\n  emits: ['page-size-change'],\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const ns = useNamespace('pagination')\n    const pagination = usePagination()\n    const innerPageSize = ref<Nullable<number>>(props.pageSize)\n\n    watch(\n      () => props.pageSizes,\n      (newVal, oldVal) => {\n        if (isEqual(newVal, oldVal)) return\n        if (Array.isArray(newVal)) {\n          const pageSize = newVal.includes(props.pageSize)\n            ? props.pageSize\n            : props.pageSizes[0]\n          emit('page-size-change', pageSize)\n        }\n      }\n    )\n\n    watch(\n      () => props.pageSize,\n      (newVal) => {\n        innerPageSize.value = newVal\n      }\n    )\n\n    const innerPagesizes = computed(() => props.pageSizes)\n\n    function handleChange(val: number) {\n      if (val !== innerPageSize.value) {\n        innerPageSize.value = val\n        pagination.handleSizeChange?.(Number(val))\n      }\n    }\n\n    return {\n      ns,\n      innerPagesizes,\n      innerPageSize,\n\n      t,\n      handleChange,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}