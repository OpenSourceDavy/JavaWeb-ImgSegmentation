{"ast":null,"code":"import { defineComponent, ref, computed, inject, resolveComponent, openBlock, createBlock, Transition, withCtx, createElementBlock, normalizeClass, createElementVNode, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nconst _sfc_main = defineComponent({\n  components: {\n    TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: void 0\n    },\n    datetimeRole: {\n      type: String\n    },\n    parsedValue: {\n      type: [Object, String]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n\n  setup(props, ctx) {\n    const ns = useNamespace(\"time\");\n    const {\n      t,\n      lang\n    } = useLocale();\n    const selectionRange = ref([0, 2]);\n    const oldValue = useOldValue(props);\n    const transitionName = computed(() => {\n      return isUndefined(props.actualVisible) ? `${ns.namespace.value}-zoom-in-top` : \"\";\n    });\n    const showSeconds = computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    const isValidValue = _date => {\n      const parsedDate = dayjs(_date).locale(lang.value);\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate.isSame(result);\n    };\n\n    const handleCancel = () => {\n      ctx.emit(\"pick\", oldValue.value, false);\n    };\n\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return;\n      ctx.emit(\"pick\", props.parsedValue, visible);\n    };\n\n    const handleChange = _date => {\n      if (!props.visible) {\n        return;\n      }\n\n      const result = getRangeAvailableTime(_date).millisecond(0);\n      ctx.emit(\"pick\", result, true);\n    };\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end);\n      selectionRange.value = [start, end];\n    };\n\n    const changeSelectionRange = step => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : []);\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1;\n        timePickerOptions[\"start_scrollDown\"](step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    const getRangeAvailableTime = date => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      let result = date;\n      [\"hour\", \"minute\", \"second\"].forEach(_ => {\n        if (availableMap[_]) {\n          let availableArr;\n          const method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), props.datetimeRole);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), props.datetimeRole);\n          } else {\n            availableArr = method(props.datetimeRole);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            result = result[_](availableArr[0]);\n          }\n        }\n      });\n      return result;\n    };\n\n    const parseUserInput = value => {\n      if (!value) return null;\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const formatToString = value => {\n      if (!value) return null;\n      return value.format(props.format);\n    };\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value);\n    };\n\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    const timePickerOptions = {};\n\n    const onSetOption = e => {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds);\n    return {\n      ns,\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.transitionName\n  }, {\n    default: withCtx(() => [_ctx.actualVisible || _ctx.visible ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.b(\"panel\"))\n    }, [createElementVNode(\"div\", {\n      class: normalizeClass([_ctx.ns.be(\"panel\", \"content\"), {\n        \"has-seconds\": _ctx.showSeconds\n      }])\n    }, [createVNode(_component_time_spinner, {\n      ref: \"spinner\",\n      role: _ctx.datetimeRole || \"start\",\n      \"arrow-control\": _ctx.arrowControl,\n      \"show-seconds\": _ctx.showSeconds,\n      \"am-pm-mode\": _ctx.amPmMode,\n      \"spinner-date\": _ctx.parsedValue,\n      \"disabled-hours\": _ctx.disabledHours,\n      \"disabled-minutes\": _ctx.disabledMinutes,\n      \"disabled-seconds\": _ctx.disabledSeconds,\n      onChange: _ctx.handleChange,\n      onSetOption: _ctx.onSetOption,\n      onSelectRange: _ctx.setSelectionRange\n    }, null, 8, [\"role\", \"arrow-control\", \"show-seconds\", \"am-pm-mode\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2), createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.be(\"panel\", \"footer\"))\n    }, [createElementVNode(\"button\", {\n      type: \"button\",\n      class: normalizeClass([_ctx.ns.be(\"panel\", \"btn\"), \"cancel\"]),\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleCancel && _ctx.handleCancel(...args))\n    }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 3), createElementVNode(\"button\", {\n      type: \"button\",\n      class: normalizeClass([_ctx.ns.be(\"panel\", \"btn\"), \"confirm\"]),\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.handleConfirm())\n    }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 3)], 2)], 2)) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"name\"]);\n}\n\nvar TimePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-picker/src/time-picker-com/panel-time-pick.vue\"]]);\n\nexport { TimePickPanel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","TimeSpinner","props","visible","actualVisible","type","default","datetimeRole","parsedValue","Object","String","format","emits","setup","ctx","useNamespace","t","lang","useLocale","selectionRange","useOldValue","computed","isUndefined","namespace","value","includes","_date","parsedDate","dayjs","locale","getRangeAvailableTime","isSame","result","handleCancel","emit","oldValue","handleConfirm","first","millisecond","start","end","step","list","concat","showSeconds","mapping","index","indexOf","next","length","timePickerOptions","event","code","left","EVENT_CODE","right","changeSelectionRange","preventDefault","up","down","date","availableMap","hour","minute","second","forEach","_","method","availableArr","getDefaultValue","isValidValue","formatToString","parseUserInput","handleKeydown","e","inject","arrowControl","disabledHours","disabledMinutes","disabledSeconds","defaultValue","pickerBase","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableArrs","ns","transitionName","onSetOption","handleChange","setSelectionRange","amPmMode","_createBlock","name","_ctx","openBlock","_createElementBlock","key","class","b","_createElementVNode","be","_createVNode","ref","role","onChange","onSelectRange","_normalizeClass","onClick","_cache","_toDisplayString"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" :class=\"ns.b('panel')\">\n      <div :class=\"[ns.be('panel', 'content'), { 'has-seconds': showSeconds }]\">\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"parsedValue\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div :class=\"ns.be('panel', 'footer')\">\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'cancel']\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'confirm']\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isUndefined } from '@element-plus/utils'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: {\n    TimeSpinner,\n  },\n\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: undefined,\n    },\n    datetimeRole: {\n      type: String,\n    },\n    parsedValue: {\n      type: [Object, String] as PropType<string | Dayjs>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const ns = useNamespace('time')\n    const { t, lang } = useLocale()\n    // data\n    const selectionRange = ref([0, 2])\n    const oldValue = useOldValue(props)\n    // computed\n    const transitionName = computed(() => {\n      return isUndefined(props.actualVisible)\n        ? `${ns.namespace.value}-zoom-in-top`\n        : ''\n    })\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n    // method\n    const isValidValue = (_date: Dayjs) => {\n      const parsedDate = dayjs(_date).locale(lang.value)\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate.isSame(result)\n    }\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return\n      ctx.emit('pick', props.parsedValue, visible)\n    }\n    const handleChange = (_date: Dayjs) => {\n      // visible avoids edge cases, when use scrolls during panel closing animation\n      if (!props.visible) {\n        return\n      }\n      const result = getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', result, true)\n    }\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end)\n      selectionRange.value = [start, end]\n    }\n\n    const changeSelectionRange = (step: number) => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : [])\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      timePickerOptions['start_emitSelectRange'](mapping[next])\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        timePickerOptions['start_scrollDown'](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const getRangeAvailableTime = (date: Dayjs) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      let result = date\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), props.datetimeRole)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              props.datetimeRole\n            )\n          } else {\n            availableArr = method(props.datetimeRole)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            result = result[_](availableArr[0])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs) => {\n      if (!value) return null\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs) => {\n      if (!value) return null\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value)\n    }\n\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds)\n\n    return {\n      ns,\n\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}