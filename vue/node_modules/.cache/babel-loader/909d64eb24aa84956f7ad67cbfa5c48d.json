{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n\n  setup(props) {\n    const ns = useNamespace(\"tree\");\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const {\n        data,\n        store\n      } = node;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node,\n        data,\n        store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node,\n        data\n      }) : h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [node.label]);\n    };\n  }\n\n});\n\nvar NodeContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue\"]]);\n\nexport { NodeContent as default };","map":{"version":3,"mappings":";;;;;AAOA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,qBADuB;AAE7BC,OAAO;AACLC,QAAM;AACJC,UAAM,QADF;AAEJC,cAAU;AAFN,KADD;AAKLC,iBAAe;AALV,GAFsB;;AAS7BC,QAAML,KAAN,EAAa;AACL,eAAKM,aAAa,MAAb,CAAL;AACA,yBAAeC,OAAkC,cAAlC,CAAf;AACA,iBAAOA,OAAqB,UAArB,CAAP;AACN,WAAO,MAAM;AACX,YAAMN,OAAOD,KAAM,KAAnB;AACM;AAAEQ,YAAF;AAAQC;AAAR,UAAkBR,IAAlB;AACN,aAAOD,MAAMI,aAAN,GACHJ,MAAMI,aAAN,CAAoBM,CAApB,EAAuB;AAAEC,aAAO,cAAT;AAAuBV,YAAvB;AAA6BO,YAA7B;AAAmCC;AAAnC,OAAvB,CADG,GAEHG,KAAKC,GAAL,CAASC,KAAT,CAAeC,OAAf,GACAH,IAAK,IAAL,CAASE,KAAT,CAAeC,OAAf,CAAuB;AAAEd,YAAF;AAAQO;AAAR,OAAvB,CADA,GAEAE,EAAE,MAAF,EAAU;AAAEM,eAAOC,EAAG,GAAH,CAAM,MAAN,EAAc,OAAd;AAAT,OAAV,EAA6C,CAAChB,KAAKiB,KAAN,CAA7C,CAJJ;AAKF,KARA;AASF;;AAtB6B,EAA/B","names":["_sfc_main","defineComponent","name","props","node","type","required","renderContent","setup","useNamespace","inject","data","store","h","_self","tree","ctx","slots","default","class","ns","label"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}