{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { VERTICAL } from './defaults.mjs';\nimport { buildProp, definePropType, buildProps } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nconst itemSize = buildProp({\n  type: definePropType([Number, Function]),\n  required: true\n});\nconst estimatedItemSize = buildProp({\n  type: Number\n});\nconst cache = buildProp({\n  type: Number,\n  default: 2\n});\nconst direction = buildProp({\n  type: String,\n  values: [\"ltr\", \"rtl\"],\n  default: \"ltr\"\n});\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0\n});\nconst total = buildProp({\n  type: Number,\n  required: true\n});\nconst layout = buildProp({\n  type: String,\n  values: [\"horizontal\", \"vertical\"],\n  default: VERTICAL\n});\nconst virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: \"\"\n  },\n  containerElement: {\n    type: definePropType([String, Object]),\n    default: \"div\"\n  },\n  data: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  direction,\n  height: {\n    type: [String, Number],\n    required: true\n  },\n  innerElement: {\n    type: [String, Object],\n    default: \"div\"\n  },\n  style: {\n    type: definePropType([Object, String, Array])\n  },\n  useIsScrolling: {\n    type: Boolean,\n    default: false\n  },\n  width: {\n    type: [Number, String],\n    required: false\n  },\n  perfMode: {\n    type: Boolean,\n    default: true\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false\n  }\n});\nconst virtualizedListProps = buildProps({\n  cache,\n  estimatedItemSize,\n  layout,\n  initScrollOffset,\n  total,\n  itemSize,\n  ...virtualizedProps\n});\nconst virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  ...virtualizedProps\n});\nconst virtualizedScrollbarProps = buildProps({\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true\n  },\n  clientSize: {\n    type: Number,\n    required: true\n  },\n  scrollFrom: {\n    type: Number,\n    required: true\n  },\n  visible: Boolean\n});\nexport { virtualizedGridProps, virtualizedListProps, virtualizedProps, virtualizedScrollbarProps };","map":{"version":3,"mappings":"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","names":["itemSize","buildProp","type","definePropType","Number","Function","required","estimatedItemSize","cache","default","direction","String","values","initScrollOffset","total","layout","VERTICAL","virtualizedProps","buildProps","className","containerElement","Object","data","Array","mutable","height","innerElement","style","useIsScrolling","Boolean","width","perfMode","scrollbarAlwaysOn","virtualizedListProps","virtualizedGridProps","columnCache","columnWidth","estimatedColumnWidth","estimatedRowHeight","initScrollLeft","initScrollTop","rowCache","rowHeight","totalColumn","totalRow","virtualizedScrollbarProps","ratio","clientSize","scrollFrom","visible"],"sources":["../../../../../../packages/components/virtual-list/src/props.ts"],"sourcesContent":["import {\n  buildProp,\n  buildProps,\n  definePropType,\n  mutable,\n} from '@element-plus/utils'\nimport { VERTICAL } from './defaults'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { ItemSize } from './types'\n\nconst itemSize = buildProp({\n  type: definePropType<number | ItemSize>([Number, Function]),\n  required: true,\n} as const)\n\nconst estimatedItemSize = buildProp({\n  type: Number,\n} as const)\n\nconst cache = buildProp({\n  type: Number,\n  default: 2,\n} as const)\n\nconst direction = buildProp({\n  type: String,\n  values: ['ltr', 'rtl'],\n  default: 'ltr',\n} as const)\n\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0,\n} as const)\n\nconst total = buildProp({\n  type: Number,\n  required: true,\n} as const)\n\nconst layout = buildProp({\n  type: String,\n  values: ['horizontal', 'vertical'],\n  default: VERTICAL,\n} as const)\n\nexport const virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: '',\n  },\n\n  containerElement: {\n    type: definePropType<string | Element>([String, Object]),\n    default: 'div',\n  },\n\n  data: {\n    type: definePropType<any[]>(Array),\n    default: () => mutable([] as const),\n  },\n\n  /**\n   * @description controls the horizontal direction.\n   */\n  direction,\n\n  height: {\n    type: [String, Number],\n    required: true,\n  },\n\n  innerElement: {\n    type: [String, Object],\n    default: 'div',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([Object, String, Array]),\n  },\n\n  useIsScrolling: {\n    type: Boolean,\n    default: false,\n  },\n\n  width: {\n    type: [Number, String],\n    required: false,\n  },\n\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport const virtualizedListProps = buildProps({\n  /**\n   * @description describes how many items should be pre rendered to the head\n   * and the tail of the window\n   */\n  cache,\n\n  estimatedItemSize,\n\n  /**\n   * @description controls the list's orientation\n   */\n  layout,\n\n  initScrollOffset,\n\n  /**\n   * @description describes the total number of the list.\n   */\n  total,\n\n  itemSize,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedScrollbarProps = buildProps({\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true,\n  },\n  clientSize: {\n    type: Number,\n    required: true,\n  },\n  scrollFrom: {\n    type: Number,\n    required: true,\n  },\n  visible: Boolean,\n} as const)\n\nexport type VirtualizedProps = ExtractPropTypes<typeof virtualizedProps>\nexport type VirtualizedListProps = ExtractPropTypes<typeof virtualizedListProps>\nexport type VirtualizedGridProps = ExtractPropTypes<typeof virtualizedGridProps>\n\nexport type VirtualizedScrollbarProps = ExtractPropTypes<\n  typeof virtualizedScrollbarProps\n>\n"]},"metadata":{},"sourceType":"module"}