{"ast":null,"code":"var defaultProps = {\n  data: {\n    type: Array,\n    default: () => {\n      return [];\n    }\n  },\n  size: String,\n  width: [String, Number],\n  height: [String, Number],\n  maxHeight: [String, Number],\n  fit: {\n    type: Boolean,\n    default: true\n  },\n  stripe: Boolean,\n  border: Boolean,\n  rowKey: [String, Function],\n  showHeader: {\n    type: Boolean,\n    default: true\n  },\n  showSummary: Boolean,\n  sumText: String,\n  summaryMethod: Function,\n  rowClassName: [String, Function],\n  rowStyle: [Object, Function],\n  cellClassName: [String, Function],\n  cellStyle: [Object, Function],\n  headerRowClassName: [String, Function],\n  headerRowStyle: [Object, Function],\n  headerCellClassName: [String, Function],\n  headerCellStyle: [Object, Function],\n  highlightCurrentRow: Boolean,\n  currentRowKey: [String, Number],\n  emptyText: String,\n  expandRowKeys: Array,\n  defaultExpandAll: Boolean,\n  defaultSort: Object,\n  tooltipEffect: String,\n  spanMethod: Function,\n  selectOnIndeterminate: {\n    type: Boolean,\n    default: true\n  },\n  indent: {\n    type: Number,\n    default: 16\n  },\n  treeProps: {\n    type: Object,\n    default: () => {\n      return {\n        hasChildren: \"hasChildren\",\n        children: \"children\"\n      };\n    }\n  },\n  lazy: Boolean,\n  load: Function,\n  style: {\n    type: Object,\n    default: () => ({})\n  },\n  className: {\n    type: String,\n    default: \"\"\n  },\n  tableLayout: {\n    type: String,\n    default: \"fixed\"\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false\n  }\n};\nexport { defaultProps as default };","map":{"version":3,"mappings":"AAAA,mBAAe;AACbA,MAAI,EAAE;AACJC,QAAI,EAAEC,KADF;AAEJC,WAAO,EAAE,MAAM;AACb,aAAO,EAAP;AACD;AAJG,GADO;AAObC,MAAI,EAAEC,MAPO;AAQbC,OAAK,EAAE,CAACD,MAAD,EAASE,MAAT,CARM;AASbC,QAAM,EAAE,CAACH,MAAD,EAASE,MAAT,CATK;AAUbE,WAAS,EAAE,CAACJ,MAAD,EAASE,MAAT,CAVE;AAWbG,KAAG,EAAE;AACHT,QAAI,EAAEU,OADH;AAEHR,WAAO,EAAE;AAFN,GAXQ;AAebS,QAAM,EAAED,OAfK;AAgBbE,QAAM,EAAEF,OAhBK;AAiBbG,QAAM,EAAE,CAACT,MAAD,EAASU,QAAT,CAjBK;AAkBbC,YAAU,EAAE;AACVf,QAAI,EAAEU,OADI;AAEVR,WAAO,EAAE;AAFC,GAlBC;AAsBbc,aAAW,EAAEN,OAtBA;AAuBbO,SAAO,EAAEb,MAvBI;AAwBbc,eAAa,EAAEJ,QAxBF;AAyBbK,cAAY,EAAE,CAACf,MAAD,EAASU,QAAT,CAzBD;AA0BbM,UAAQ,EAAE,CAACC,MAAD,EAASP,QAAT,CA1BG;AA2BbQ,eAAa,EAAE,CAAClB,MAAD,EAASU,QAAT,CA3BF;AA4BbS,WAAS,EAAE,CAACF,MAAD,EAASP,QAAT,CA5BE;AA6BbU,oBAAkB,EAAE,CAACpB,MAAD,EAASU,QAAT,CA7BP;AA8BbW,gBAAc,EAAE,CAACJ,MAAD,EAASP,QAAT,CA9BH;AA+BbY,qBAAmB,EAAE,CAACtB,MAAD,EAASU,QAAT,CA/BR;AAgCba,iBAAe,EAAE,CAACN,MAAD,EAASP,QAAT,CAhCJ;AAiCbc,qBAAmB,EAAElB,OAjCR;AAkCbmB,eAAa,EAAE,CAACzB,MAAD,EAASE,MAAT,CAlCF;AAmCbwB,WAAS,EAAE1B,MAnCE;AAoCb2B,eAAa,EAAE9B,KApCF;AAqCb+B,kBAAgB,EAAEtB,OArCL;AAsCbuB,aAAW,EAAEZ,MAtCA;AAuCba,eAAa,EAAE9B,MAvCF;AAwCb+B,YAAU,EAAErB,QAxCC;AAyCbsB,uBAAqB,EAAE;AACrBpC,QAAI,EAAEU,OADe;AAErBR,WAAO,EAAE;AAFY,GAzCV;AA6CbmC,QAAM,EAAE;AACNrC,QAAI,EAAEM,MADA;AAENJ,WAAO,EAAE;AAFH,GA7CK;AAiDboC,WAAS,EAAE;AACTtC,QAAI,EAAEqB,MADG;AAETnB,WAAO,EAAE,MAAM;AACb,aAAO;AACLqC,mBAAW,EAAE,aADR;AAELC,gBAAQ,EAAE;AAFL,OAAP;AAID;AAPQ,GAjDE;AA0DbC,MAAI,EAAE/B,OA1DO;AA2DbgC,MAAI,EAAE5B,QA3DO;AA4Db6B,OAAK,EAAE;AACL3C,QAAI,EAAEqB,MADD;AAELnB,WAAO,EAAE,OAAO,EAAP;AAFJ,GA5DM;AAgEb0C,WAAS,EAAE;AACT5C,QAAI,EAAEI,MADG;AAETF,WAAO,EAAE;AAFA,GAhEE;AAoEb2C,aAAW,EAAE;AACX7C,QAAI,EAAEI,MADK;AAEXF,WAAO,EAAE;AAFE,GApEA;AAwEb4C,mBAAiB,EAAE;AACjB9C,QAAI,EAAEU,OADW;AAEjBR,WAAO,EAAE;AAFQ;AAxEN,CAAf","names":["data","type","Array","default","size","String","width","Number","height","maxHeight","fit","Boolean","stripe","border","rowKey","Function","showHeader","showSummary","sumText","summaryMethod","rowClassName","rowStyle","Object","cellClassName","cellStyle","headerRowClassName","headerRowStyle","headerCellClassName","headerCellStyle","highlightCurrentRow","currentRowKey","emptyText","expandRowKeys","defaultExpandAll","defaultSort","tooltipEffect","spanMethod","selectOnIndeterminate","indent","treeProps","hasChildren","children","lazy","load","style","className","tableLayout","scrollbarAlwaysOn"],"sources":["../../../../../../../packages/components/table/src/table/defaults.ts"],"sourcesContent":["import type {\n  CSSProperties,\n  ComponentInternalInstance,\n  PropType,\n  Ref,\n  VNode,\n} from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { Store } from '../store'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type TableLayout from '../table-layout'\n\nexport type DefaultRow = any\n\ninterface TableRefs {\n  headerWrapper: HTMLElement\n  footerWrapper: HTMLElement\n  fixedBodyWrapper: HTMLElement\n  rightFixedBodyWrapper: HTMLElement\n  bodyWrapper: HTMLElement\n  [key: string]: any\n}\n\ninterface TableState {\n  isGroup: Ref<boolean>\n  resizeState: Ref<{\n    width: any\n    height: any\n  }>\n  doLayout: () => void\n  debouncedUpdateLayout: () => void\n}\n\ntype HoverState<T> = Nullable<{\n  cell: HTMLElement\n  column: TableColumnCtx<T>\n  row: T\n}>\n\ntype RIS<T> = { row: T; $index: number; store: Store<T>; expanded: boolean }\n\ntype RenderExpanded<T> = ({\n  row,\n  $index,\n  store,\n  expanded: boolean,\n}: RIS<T>) => VNode\n\ntype SummaryMethod<T> = (data: {\n  columns: TableColumnCtx<T>\n  data: T[]\n}) => string[]\n\ninterface Table<T> extends ComponentInternalInstance {\n  $ready: boolean\n  hoverState?: HoverState<T>\n  renderExpanded: RenderExpanded<T>\n  store: Store<T>\n  layout: TableLayout<T>\n  refs: TableRefs\n  tableId: string\n  state: TableState\n}\n\ntype ColumnCls<T> = string | ((data: { row: T; rowIndex: number }) => string)\ntype ColumnStyle<T> =\n  | CSSProperties\n  | ((data: { row: T; rowIndex: number }) => CSSProperties)\ntype CellCls<T> =\n  | string\n  | ((data: {\n      row: T\n      rowIndex: number\n      column: TableColumnCtx<T>\n      columnIndex: number\n    }) => string)\ntype CellStyle<T> =\n  | CSSProperties\n  | ((data: {\n      row: T\n      rowIndex: number\n      column: TableColumnCtx<T>\n      columnIndex: number\n    }) => CSSProperties)\ntype Layout = 'fixed' | 'auto'\ninterface TableProps<T> {\n  data: T[]\n  size?: string\n  width?: string | number\n  height?: string | number\n  maxHeight?: string | number\n  fit?: boolean\n  stripe?: boolean\n  border?: boolean\n  rowKey?: string | ((row: T) => string)\n  context?: Table<T>\n  showHeader?: boolean\n  showSummary?: boolean\n  sumText?: string\n  summaryMethod?: SummaryMethod<T>\n  rowClassName?: ColumnCls<T>\n  rowStyle?: ColumnStyle<T>\n  cellClassName?: CellCls<T>\n  cellStyle?: CellStyle<T>\n  headerRowClassName?: ColumnCls<T>\n  headerRowStyle?: ColumnStyle<T>\n  headerCellClassName?: CellCls<T>\n  headerCellStyle?: CellStyle<T>\n  highlightCurrentRow?: boolean\n  currentRowKey?: string | number\n  emptyText?: string\n  expandRowKeys?: any[]\n  defaultExpandAll?: boolean\n  defaultSort?: Sort\n  tooltipEffect?: string\n  spanMethod?: (data: {\n    row: T\n    rowIndex: number\n    column: TableColumnCtx<T>\n    columnIndex: number\n  }) =>\n    | number[]\n    | {\n        rowspan: number\n        colspan: number\n      }\n  selectOnIndeterminate?: boolean\n  indent?: number\n  treeProps?: {\n    hasChildren?: string\n    children?: string\n  }\n  lazy?: boolean\n  load?: (row: T, treeNode: TreeNode, resolve: (data: T[]) => void) => void\n  className?: string\n  style?: CSSProperties\n  tableLayout: Layout\n}\n\ninterface Sort {\n  prop: string\n  order: 'ascending' | 'descending'\n  init?: any\n  silent?: any\n}\n\ninterface Filter<T> {\n  column: TableColumnCtx<T>\n  values: string[]\n  silent: any\n}\n\ninterface TreeNode {\n  expanded?: boolean\n  loading?: boolean\n  noLazyChildren?: boolean\n  indent?: number\n  level?: number\n  display?: boolean\n}\n\ninterface RenderRowData<T> {\n  store: Store<T>\n  _self: Table<T>\n  column: TableColumnCtx<T>\n  row: T\n  $index: number\n  treeNode?: TreeNode\n  expanded: boolean\n}\n\nexport default {\n  data: {\n    type: Array as PropType<DefaultRow[]>,\n    default: () => {\n      return []\n    },\n  },\n  size: String,\n  width: [String, Number],\n  height: [String, Number],\n  maxHeight: [String, Number],\n  fit: {\n    type: Boolean,\n    default: true,\n  },\n  stripe: Boolean,\n  border: Boolean,\n  rowKey: [String, Function] as PropType<TableProps<DefaultRow>['rowKey']>,\n  showHeader: {\n    type: Boolean,\n    default: true,\n  },\n  showSummary: Boolean,\n  sumText: String,\n  summaryMethod: Function as PropType<TableProps<DefaultRow>['summaryMethod']>,\n  rowClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['rowClassName']\n  >,\n  rowStyle: [Object, Function] as PropType<TableProps<DefaultRow>['rowStyle']>,\n  cellClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['cellClassName']\n  >,\n  cellStyle: [Object, Function] as PropType<\n    TableProps<DefaultRow>['cellStyle']\n  >,\n  headerRowClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['headerRowClassName']\n  >,\n  headerRowStyle: [Object, Function] as PropType<\n    TableProps<DefaultRow>['headerRowStyle']\n  >,\n  headerCellClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['headerCellClassName']\n  >,\n  headerCellStyle: [Object, Function] as PropType<\n    TableProps<DefaultRow>['headerCellStyle']\n  >,\n  highlightCurrentRow: Boolean,\n  currentRowKey: [String, Number],\n  emptyText: String,\n  expandRowKeys: Array as PropType<TableProps<DefaultRow>['expandRowKeys']>,\n  defaultExpandAll: Boolean,\n  defaultSort: Object as PropType<TableProps<DefaultRow>['defaultSort']>,\n  tooltipEffect: String,\n  spanMethod: Function as PropType<TableProps<DefaultRow>['spanMethod']>,\n  selectOnIndeterminate: {\n    type: Boolean,\n    default: true,\n  },\n  indent: {\n    type: Number,\n    default: 16,\n  },\n  treeProps: {\n    type: Object as PropType<TableProps<DefaultRow>['treeProps']>,\n    default: () => {\n      return {\n        hasChildren: 'hasChildren',\n        children: 'children',\n      }\n    },\n  },\n  lazy: Boolean,\n  load: Function as PropType<TableProps<DefaultRow>['load']>,\n  style: {\n    type: Object as PropType<CSSProperties>,\n    default: () => ({}),\n  },\n  className: {\n    type: String,\n    default: '',\n  },\n  tableLayout: {\n    type: String as PropType<Layout>,\n    default: 'fixed',\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n}\nexport type {\n  SummaryMethod,\n  Table,\n  TableProps,\n  TableRefs,\n  ColumnCls,\n  ColumnStyle,\n  TreeNode,\n  RenderRowData,\n  Sort,\n  Filter,\n}\n"]},"metadata":{},"sourceType":"module"}