{"ast":null,"code":"import { defineComponent, computed, provide, createVNode } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { buildProps } from '../../../utils/vue/props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { rowContextKey } from '../../../tokens/row.mjs';\nconst rowProps = buildProps({\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  gutter: {\n    type: Number,\n    default: 0\n  },\n  justify: {\n    type: String,\n    values: [\"start\", \"center\", \"end\", \"space-around\", \"space-between\", \"space-evenly\"],\n    default: \"start\"\n  },\n  align: {\n    type: String,\n    values: [\"top\", \"middle\", \"bottom\"],\n    default: \"top\"\n  }\n});\nconst Row = defineComponent({\n  name: \"ElRow\",\n  props: rowProps,\n\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"row\");\n    const gutter = computed(() => props.gutter);\n    provide(rowContextKey, {\n      gutter\n    });\n    const style = computed(() => {\n      const styles = {\n        marginLeft: \"\",\n        marginRight: \"\"\n      };\n\n      if (props.gutter) {\n        styles.marginLeft = `-${props.gutter / 2}px`;\n        styles.marginRight = styles.marginLeft;\n      }\n\n      return styles;\n    });\n    return () => createVNode(props.tag, {\n      \"class\": [ns.b(), ns.is(`justify-${props.justify}`, props.justify !== \"start\"), ns.is(`align-${props.align}`, props.align !== \"top\")],\n      \"style\": style.value\n    }, {\n      default: () => {\n        var _a;\n\n        return [(_a = slots.default) == null ? void 0 : _a.call(slots)];\n      }\n    });\n  }\n\n});\nexport { Row as default, rowProps };","map":{"version":3,"mappings":";;;;;;;AAMaA,cAAQ,GAAGC,UAAU,CAAC;AACjCC,KAAG,EAAE;AACHC,QAAI,EAAEC,MADH;AAEHC,WAAO,EAAE;AAFN,GAD4B;AAKjCC,QAAM,EAAE;AACNH,QAAI,EAAEI,MADA;AAENF,WAAO,EAAE;AAFH,GALyB;AASjCG,SAAO,EAAE;AACPL,QAAI,EAAEC,MADC;AAEPK,UAAM,EAAE,CACN,OADM,EAEN,QAFM,EAGN,KAHM,EAIN,cAJM,EAKN,eALM,EAMN,cANM,CAFD;AAUPJ,WAAO,EAAE;AAVF,GATwB;AAqBjCK,OAAK,EAAE;AACLP,QAAI,EAAEC,MADD;AAELK,UAAM,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CAFH;AAGLJ,WAAO,EAAE;AAHJ;AArB0B,CAAD,CAArBL;AA6BPW,SAAG,GAAGC,eAAe,CAAC;AAC1BC,MAAI,EAAE,OADoB;AAE1BC,OAAK,EAAEd,QAFmB;;;AAI1Be;KAAeC;AAAS;AACtB,UAAMC,MAAiB,YAAC,MAAxBH,YAAuB,CAAvB;AAEMR,2BAAiB;AACvBY;AADuB,KAAjBZ;AACiB,UAAvBa;AAIA,YAAWC,MAAGC,GAAQ;AACpBC,kBAA2B,EAAG,EADV;AAElBA,qBAD4B;AADV,OAAtB;;AACE;;AAIIR,eAAKS,WAALT,GAAcM,iBAAdN;AACFM;;AACAA;AACD,KAZH,CAAuB;;AAarB;AATF;OAYO;AAAAf,eAEI,MACL;AAHC;;AAAA;AASFW;AATE;AAYR;;AApCyB,CAAD,CAArBL","names":["rowProps","buildProps","tag","type","String","default","gutter","Number","justify","values","align","Row","defineComponent","name","props","setup","slots","ns","provide","style","styles","computed","marginLeft","marginRight"],"sources":["../../../../../../packages/components/row/src/row.tsx"],"sourcesContent":["import { computed, defineComponent, provide } from 'vue'\nimport { buildProps } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from '@element-plus/tokens'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\n\nexport const rowProps = buildProps({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  gutter: {\n    type: Number,\n    default: 0,\n  },\n  justify: {\n    type: String,\n    values: [\n      'start',\n      'center',\n      'end',\n      'space-around',\n      'space-between',\n      'space-evenly',\n    ],\n    default: 'start',\n  },\n  align: {\n    type: String,\n    values: ['top', 'middle', 'bottom'],\n    default: 'top',\n  },\n} as const)\nexport type RowProps = ExtractPropTypes<typeof rowProps>\n\nconst Row = defineComponent({\n  name: 'ElRow',\n  props: rowProps,\n\n  setup(props, { slots }) {\n    const ns = useNamespace('row')\n\n    const gutter = computed(() => props.gutter)\n    provide(rowContextKey, {\n      gutter,\n    })\n\n    const style = computed(() => {\n      const styles: CSSProperties = {\n        marginLeft: '',\n        marginRight: '',\n      }\n      if (props.gutter) {\n        styles.marginLeft = `-${props.gutter / 2}px`\n        styles.marginRight = styles.marginLeft\n      }\n      return styles\n    })\n\n    return () => (\n      <props.tag\n        class={[\n          ns.b(),\n          ns.is(`justify-${props.justify}`, props.justify !== 'start'),\n          ns.is(`align-${props.align}`, props.align !== 'top'),\n        ]}\n        style={style.value}\n      >\n        {slots.default?.()}\n      </props.tag>\n    )\n  },\n})\n\nexport default Row\nexport type RowInstance = InstanceType<typeof Row>\n"]},"metadata":{},"sourceType":"module"}