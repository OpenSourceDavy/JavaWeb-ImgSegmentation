{"ast":null,"code":"import '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nimport { triggerEvent } from '../../../../utils/dom/aria.mjs';\n\nclass SubMenu {\n  constructor(parent, domNode) {\n    this.parent = parent;\n    this.domNode = domNode;\n    this.subIndex = 0;\n    this.subIndex = 0;\n    this.init();\n  }\n\n  init() {\n    this.subMenuItems = this.domNode.querySelectorAll(\"li\");\n    this.addListeners();\n  }\n\n  gotoSubIndex(idx) {\n    if (idx === this.subMenuItems.length) {\n      idx = 0;\n    } else if (idx < 0) {\n      idx = this.subMenuItems.length - 1;\n    }\n\n    ;\n    this.subMenuItems[idx].focus();\n    this.subIndex = idx;\n  }\n\n  addListeners() {\n    const parentNode = this.parent.domNode;\n    Array.prototype.forEach.call(this.subMenuItems, el => {\n      el.addEventListener(\"keydown\", event => {\n        let prevDef = false;\n\n        switch (event.code) {\n          case EVENT_CODE.down:\n            {\n              this.gotoSubIndex(this.subIndex + 1);\n              prevDef = true;\n              break;\n            }\n\n          case EVENT_CODE.up:\n            {\n              this.gotoSubIndex(this.subIndex - 1);\n              prevDef = true;\n              break;\n            }\n\n          case EVENT_CODE.tab:\n            {\n              triggerEvent(parentNode, \"mouseleave\");\n              break;\n            }\n\n          case EVENT_CODE.enter:\n          case EVENT_CODE.space:\n            {\n              prevDef = true;\n              event.currentTarget.click();\n              break;\n            }\n        }\n\n        if (prevDef) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        return false;\n      });\n    });\n  }\n\n}\n\nexport { SubMenu as default };","map":{"version":3,"mappings":";;;;;AAEA,MAAMA,OAAN,CAAc;AACZC,aAAW,CAACC,MAAD,EAASC,OAAT,EAAkB;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKA,QAAL,GAAgB,CAAhB;AACA,SAAKC,IAAL;AACD;;AACDA,MAAI,GAAG;AACL,SAAKC,YAAL,GAAoB,KAAKH,OAAL,CAAaI,gBAAb,CAA8B,IAA9B,CAApB;AACA,SAAKC,YAAL;AACD;;AACDC,cAAY,CAACC,GAAD,EAAM;AAChB,QAAIA,GAAG,KAAK,KAAKJ,YAAL,CAAkBK,MAA9B,EAAsC;AACpCD,SAAG,GAAG,CAAN;AACD,KAFD,MAEO,IAAIA,GAAG,GAAG,CAAV,EAAa;AAClBA,SAAG,GAAG,KAAKJ,YAAL,CAAkBK,MAAlB,GAA2B,CAAjC;AACD;;AACD;AACA,SAAKL,YAAL,CAAkBI,GAAlB,EAAuBE,KAAvB;AACA,SAAKR,QAAL,GAAgBM,GAAhB;AACD;;AACDF,cAAY,GAAG;AACb,UAAMK,UAAU,GAAG,KAAKX,MAAL,CAAYC,OAA/B;AACAW,SAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6B,KAAKX,YAAlC,EAAiDY,EAAD,IAAQ;AACtDA,QAAE,CAACC,gBAAH,CAAoB,SAApB,EAAgCC,KAAD,IAAW;AACxC,YAAIC,OAAO,GAAG,KAAd;;AACA,gBAAQD,KAAK,CAACE,IAAd;AACE,eAAKC,UAAU,CAACC,IAAhB;AAAsB;AACpB,mBAAKf,YAAL,CAAkB,KAAKL,QAAL,GAAgB,CAAlC;AACAiB,qBAAO,GAAG,IAAV;AACA;AACD;;AACD,eAAKE,UAAU,CAACE,EAAhB;AAAoB;AAClB,mBAAKhB,YAAL,CAAkB,KAAKL,QAAL,GAAgB,CAAlC;AACAiB,qBAAO,GAAG,IAAV;AACA;AACD;;AACD,eAAKE,UAAU,CAACG,GAAhB;AAAqB;AACnBC,0BAAY,CAACd,UAAD,EAAa,YAAb,CAAZ;AACA;AACD;;AACD,eAAKU,UAAU,CAACK,KAAhB;AACA,eAAKL,UAAU,CAACM,KAAhB;AAAuB;AACrBR,qBAAO,GAAG,IAAV;AACAD,mBAAK,CAACU,aAAN,CAAoBC,KAApB;AACA;AACD;AApBH;;AAsBA,YAAIV,OAAJ,EAAa;AACXD,eAAK,CAACY,cAAN;AACAZ,eAAK,CAACa,eAAN;AACD;;AACD,eAAO,KAAP;AACD,OA7BD;AA8BD,KA/BD;AAgCD;;AAxDW","names":["SubMenu","constructor","parent","domNode","subIndex","init","subMenuItems","querySelectorAll","addListeners","gotoSubIndex","idx","length","focus","parentNode","Array","prototype","forEach","call","el","addEventListener","event","prevDef","code","EVENT_CODE","down","up","tab","triggerEvent","enter","space","currentTarget","click","preventDefault","stopPropagation"],"sources":["../../../../../../../packages/components/menu/src/utils/submenu.ts"],"sourcesContent":["import { triggerEvent } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport type MenuItem from './menu-item'\n\nclass SubMenu {\n  public subMenuItems: NodeList\n  public subIndex = 0\n  constructor(public parent: MenuItem, public domNode: ParentNode) {\n    this.subIndex = 0\n    this.init()\n  }\n\n  init(): void {\n    this.subMenuItems = this.domNode.querySelectorAll('li')\n    this.addListeners()\n  }\n\n  gotoSubIndex(idx: number): void {\n    if (idx === this.subMenuItems.length) {\n      idx = 0\n    } else if (idx < 0) {\n      idx = this.subMenuItems.length - 1\n    }\n    ;(this.subMenuItems[idx] as HTMLElement).focus()\n    this.subIndex = idx\n  }\n\n  addListeners(): void {\n    const parentNode = this.parent.domNode\n    Array.prototype.forEach.call(this.subMenuItems, (el: Element) => {\n      el.addEventListener('keydown', (event: KeyboardEvent) => {\n        let prevDef = false\n        switch (event.code) {\n          case EVENT_CODE.down: {\n            this.gotoSubIndex(this.subIndex + 1)\n            prevDef = true\n            break\n          }\n          case EVENT_CODE.up: {\n            this.gotoSubIndex(this.subIndex - 1)\n            prevDef = true\n            break\n          }\n          case EVENT_CODE.tab: {\n            triggerEvent(parentNode as HTMLElement, 'mouseleave')\n            break\n          }\n          case EVENT_CODE.enter:\n          case EVENT_CODE.space: {\n            prevDef = true\n            ;(event.currentTarget as HTMLElement).click()\n            break\n          }\n        }\n        if (prevDef) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n        return false\n      })\n    })\n  }\n}\n\nexport default SubMenu\n"]},"metadata":{},"sourceType":"module"}