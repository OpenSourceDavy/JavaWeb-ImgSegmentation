{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { getCurrentInstance, onBeforeMount, onMounted, onUpdated, onUnmounted, computed } from 'vue';\n\nfunction useLayoutObserver(root) {\n  const instance = getCurrentInstance();\n  onBeforeMount(() => {\n    tableLayout.value.addObserver(instance);\n  });\n  onMounted(() => {\n    onColumnsChange(tableLayout.value);\n    onScrollableChange(tableLayout.value);\n  });\n  onUpdated(() => {\n    onColumnsChange(tableLayout.value);\n    onScrollableChange(tableLayout.value);\n  });\n  onUnmounted(() => {\n    tableLayout.value.removeObserver(instance);\n  });\n  const tableLayout = computed(() => {\n    const layout = root.layout;\n\n    if (!layout) {\n      throw new Error(\"Can not find table layout.\");\n    }\n\n    return layout;\n  });\n\n  const onColumnsChange = layout => {\n    var _a;\n\n    const cols = ((_a = root.vnode.el) == null ? void 0 : _a.querySelectorAll(\"colgroup > col\")) || [];\n    if (!cols.length) return;\n    const flattenColumns = layout.getFlattenColumns();\n    const columnsMap = {};\n    flattenColumns.forEach(column => {\n      columnsMap[column.id] = column;\n    });\n\n    for (let i = 0, j = cols.length; i < j; i++) {\n      const col = cols[i];\n      const name = col.getAttribute(\"name\");\n      const column = columnsMap[name];\n\n      if (column) {\n        col.setAttribute(\"width\", column.realWidth || column.width);\n      }\n    }\n  };\n\n  const onScrollableChange = layout => {\n    var _a, _b;\n\n    const cols = ((_a = root.vnode.el) == null ? void 0 : _a.querySelectorAll(\"colgroup > col[name=gutter]\")) || [];\n\n    for (let i = 0, j = cols.length; i < j; i++) {\n      const col = cols[i];\n      col.setAttribute(\"width\", layout.scrollY.value ? layout.gutterWidth : \"0\");\n    }\n\n    const ths = ((_b = root.vnode.el) == null ? void 0 : _b.querySelectorAll(\"th.gutter\")) || [];\n\n    for (let i = 0, j = ths.length; i < j; i++) {\n      const th = ths[i];\n      th.style.width = layout.scrollY.value ? `${layout.gutterWidth}px` : \"0\";\n      th.style.display = layout.scrollY.value ? \"\" : \"none\";\n    }\n  };\n\n  return {\n    tableLayout: tableLayout.value,\n    onColumnsChange,\n    onScrollableChange\n  };\n}\n\nexport { useLayoutObserver as default };","map":{"version":3,"mappings":"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","names":["useLayoutObserver","root","instance","getCurrentInstance","onBeforeMount","tableLayout","value","addObserver","onMounted","onColumnsChange","onScrollableChange","onUpdated","onUnmounted","removeObserver","computed","layout","Error","_a","cols","vnode","el","querySelectorAll","length","flattenColumns","getFlattenColumns","columnsMap","forEach","column","id","i","j","col","name","getAttribute","setAttribute","realWidth","width","_b","scrollY","gutterWidth","ths","th","style","display"],"sources":["../../../../../../packages/components/table/src/layout-observer.ts"],"sourcesContent":["import {\n  computed,\n  getCurrentInstance,\n  onBeforeMount,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n} from 'vue'\n\nimport type { TableHeader } from './table-header'\nimport type TableLayout from './table-layout'\nimport type { Table } from './table/defaults'\n\nfunction useLayoutObserver<T>(root: Table<T>) {\n  const instance = getCurrentInstance() as TableHeader\n  onBeforeMount(() => {\n    tableLayout.value.addObserver(instance)\n  })\n  onMounted(() => {\n    onColumnsChange(tableLayout.value)\n    onScrollableChange(tableLayout.value)\n  })\n  onUpdated(() => {\n    onColumnsChange(tableLayout.value)\n    onScrollableChange(tableLayout.value)\n  })\n  onUnmounted(() => {\n    tableLayout.value.removeObserver(instance)\n  })\n  const tableLayout = computed(() => {\n    const layout = root.layout as TableLayout<T>\n    if (!layout) {\n      throw new Error('Can not find table layout.')\n    }\n    return layout\n  })\n  const onColumnsChange = (layout: TableLayout<T>) => {\n    const cols = root.vnode.el?.querySelectorAll('colgroup > col') || []\n    if (!cols.length) return\n    const flattenColumns = layout.getFlattenColumns()\n    const columnsMap = {}\n    flattenColumns.forEach((column) => {\n      columnsMap[column.id] = column\n    })\n    for (let i = 0, j = cols.length; i < j; i++) {\n      const col = cols[i]\n      const name = col.getAttribute('name')\n      const column = columnsMap[name]\n      if (column) {\n        col.setAttribute('width', column.realWidth || column.width)\n      }\n    }\n  }\n\n  const onScrollableChange = (layout: TableLayout<T>) => {\n    const cols =\n      root.vnode.el?.querySelectorAll('colgroup > col[name=gutter]') || []\n    for (let i = 0, j = cols.length; i < j; i++) {\n      const col = cols[i]\n      col.setAttribute('width', layout.scrollY.value ? layout.gutterWidth : '0')\n    }\n    const ths = root.vnode.el?.querySelectorAll('th.gutter') || []\n    for (let i = 0, j = ths.length; i < j; i++) {\n      const th = ths[i]\n      th.style.width = layout.scrollY.value ? `${layout.gutterWidth}px` : '0'\n      th.style.display = layout.scrollY.value ? '' : 'none'\n    }\n  }\n\n  return {\n    tableLayout: tableLayout.value,\n    onColumnsChange,\n    onScrollableChange,\n  }\n}\n\nexport default useLayoutObserver\n"]},"metadata":{},"sourceType":"module"}