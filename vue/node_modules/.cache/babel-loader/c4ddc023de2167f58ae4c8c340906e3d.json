{"ast":null,"code":"import { ref, watchEffect, watch, unref, computed, onMounted, nextTick, onBeforeUnmount } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { parseHeight } from '../util.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../../utils/dom/resize-event.mjs';\nimport { on, off } from '../../../../utils/dom/event.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\n\nfunction useStyle(props, layout, store, table) {\n  const isHidden = ref(false);\n  const renderExpanded = ref(null);\n  const resizeProxyVisible = ref(false);\n\n  const setDragVisible = visible => {\n    resizeProxyVisible.value = visible;\n  };\n\n  const resizeState = ref({\n    width: null,\n    height: null\n  });\n  const isGroup = ref(false);\n  const scrollbarViewStyle = {\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  };\n  const tableWidth = ref();\n  watchEffect(() => {\n    layout.setHeight(props.height);\n  });\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight);\n  });\n  watch(() => [props.currentRowKey, store.states.rowKey], ([currentRowKey, rowKey]) => {\n    if (!unref(rowKey)) return;\n    store.setCurrentRowKey(`${currentRowKey}`);\n  }, {\n    immediate: true\n  });\n  watch(() => props.data, data => {\n    table.store.commit(\"setData\", data);\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys);\n    }\n  });\n\n  const handleMouseLeave = () => {\n    table.store.commit(\"setHoverRow\", null);\n    if (table.hoverState) table.hoverState = null;\n  };\n\n  const handleHeaderFooterMousewheel = (event, data) => {\n    const {\n      pixelX,\n      pixelY\n    } = data;\n\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;\n    }\n  };\n\n  const shouldUpdateHeight = computed(() => {\n    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;\n  });\n  const tableBodyStyles = computed(() => {\n    return {\n      width: layout.bodyWidth.value ? `${layout.bodyWidth.value}px` : \"\"\n    };\n  });\n\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight();\n    }\n\n    layout.updateColumnsWidth();\n    requestAnimationFrame(syncPostion);\n  };\n\n  onMounted(async () => {\n    await nextTick();\n    store.updateColumns();\n    bindEvents();\n    requestAnimationFrame(doLayout);\n    resizeState.value = {\n      width: tableWidth.value = table.vnode.el.offsetWidth,\n      height: table.vnode.el.offsetHeight\n    };\n    store.states.columns.value.forEach(column => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit(\"filterChange\", {\n          column,\n          values: column.filteredValue,\n          silent: true\n        });\n      }\n    });\n    table.$ready = true;\n  });\n\n  const setScrollClassByEl = (el, className) => {\n    if (!el) return;\n    const classList = Array.from(el.classList).filter(item => !item.startsWith(\"is-scrolling-\"));\n    classList.push(layout.scrollX.value ? className : \"is-scrolling-none\");\n    el.className = classList.join(\" \");\n  };\n\n  const setScrollClass = className => {\n    const {\n      tableWrapper\n    } = table.refs;\n    setScrollClassByEl(tableWrapper, className);\n  };\n\n  const hasScrollClass = className => {\n    const {\n      tableWrapper\n    } = table.refs;\n\n    if (tableWrapper && tableWrapper.classList.contains(className)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const syncPostion = function () {\n    if (!table.refs.scrollBarRef) return;\n\n    if (!layout.scrollX.value) {\n      const scrollingNoneClass = \"is-scrolling-none\";\n\n      if (!hasScrollClass(scrollingNoneClass)) {\n        setScrollClass(scrollingNoneClass);\n      }\n\n      return;\n    }\n\n    const scrollContainer = table.refs.scrollBarRef.wrap$;\n    if (!scrollContainer) return;\n    const {\n      scrollLeft,\n      offsetWidth,\n      scrollWidth\n    } = scrollContainer;\n    const {\n      headerWrapper,\n      footerWrapper\n    } = table.refs;\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1;\n\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass(\"is-scrolling-right\");\n    } else if (scrollLeft === 0) {\n      setScrollClass(\"is-scrolling-left\");\n    } else {\n      setScrollClass(\"is-scrolling-middle\");\n    }\n  };\n\n  const bindEvents = () => {\n    var _a;\n\n    if (!table.refs.scrollBarRef) return;\n    (_a = table.refs.scrollBarRef.wrap$) == null ? void 0 : _a.addEventListener(\"scroll\", syncPostion, {\n      passive: true\n    });\n\n    if (props.fit) {\n      addResizeListener(table.vnode.el, resizeListener);\n    } else {\n      on(window, \"resize\", doLayout);\n    }\n  };\n\n  onBeforeUnmount(() => {\n    unbindEvents();\n  });\n\n  const unbindEvents = () => {\n    var _a;\n\n    (_a = table.refs.scrollBarRef.wrap$) == null ? void 0 : _a.removeEventListener(\"scroll\", syncPostion, true);\n\n    if (props.fit) {\n      removeResizeListener(table.vnode.el, resizeListener);\n    } else {\n      off(window, \"resize\", doLayout);\n    }\n  };\n\n  const resizeListener = () => {\n    if (!table.$ready) return;\n    let shouldUpdateLayout = false;\n    const el = table.vnode.el;\n    const {\n      width: oldWidth,\n      height: oldHeight\n    } = resizeState.value;\n    const width = tableWidth.value = el.offsetWidth;\n\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true;\n    }\n\n    const height2 = el.offsetHeight;\n\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height2) {\n      shouldUpdateLayout = true;\n    }\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height: height2\n      };\n      doLayout();\n    }\n  };\n\n  const tableSize = useSize();\n  const bodyWidth = computed(() => {\n    const {\n      bodyWidth: bodyWidth_,\n      scrollY,\n      gutterWidth\n    } = layout;\n    return bodyWidth_.value ? `${bodyWidth_.value - (scrollY.value ? gutterWidth : 0)}px` : \"\";\n  });\n  const tableLayout = computed(() => {\n    if (props.maxHeight) return \"fixed\";\n    return props.tableLayout;\n  });\n\n  function calcMaxHeight(maxHeight, footerHeight, headerHeight) {\n    const parsedMaxHeight = parseHeight(maxHeight);\n    const tableHeaderHeight = props.showHeader ? headerHeight : 0;\n    if (parsedMaxHeight === null) return;\n\n    if (isString(parsedMaxHeight)) {\n      return `calc(${parsedMaxHeight} - ${footerHeight}px - ${tableHeaderHeight}px)`;\n    }\n\n    return parsedMaxHeight - footerHeight - tableHeaderHeight;\n  }\n\n  const height = computed(() => {\n    const headerHeight = layout.headerHeight.value || 0;\n    const bodyHeight2 = layout.bodyHeight.value;\n    const footerHeight = layout.footerHeight.value || 0;\n\n    if (props.height) {\n      return bodyHeight2 ? bodyHeight2 : void 0;\n    } else if (props.maxHeight) {\n      return calcMaxHeight(props.maxHeight, footerHeight, headerHeight);\n    }\n\n    return void 0;\n  });\n  const bodyHeight = computed(() => {\n    const headerHeight = layout.headerHeight.value || 0;\n    const bodyHeight2 = layout.bodyHeight.value;\n    const footerHeight = layout.footerHeight.value || 0;\n\n    if (props.height) {\n      return {\n        height: bodyHeight2 ? `${bodyHeight2}px` : \"\"\n      };\n    } else if (props.maxHeight) {\n      const maxHeight = calcMaxHeight(props.maxHeight, footerHeight, headerHeight);\n\n      if (maxHeight !== null) {\n        return {\n          \"max-height\": `${maxHeight}${isNumber(maxHeight) ? \"px\" : \"\"}`\n        };\n      }\n    }\n\n    return {};\n  });\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return null;\n    let height2 = \"100%\";\n\n    if (layout.appendHeight.value) {\n      height2 = `calc(100% - ${layout.appendHeight.value}px)`;\n    }\n\n    return {\n      width: tableWidth.value ? `${tableWidth.value}px` : \"\",\n      height: height2\n    };\n  });\n\n  const handleFixedMousewheel = (event, data) => {\n    const bodyWrapper = table.refs.bodyWrapper;\n\n    if (Math.abs(data.spinY) > 0) {\n      const currentScrollTop = bodyWrapper.scrollTop;\n\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault();\n      }\n\n      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n        event.preventDefault();\n      }\n\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n    }\n  };\n\n  const fixedHeight = computed(() => {\n    if (props.maxHeight) {\n      if (props.showSummary) {\n        return {\n          bottom: 0\n        };\n      }\n\n      return {\n        bottom: layout.scrollX.value && props.data.length ? `${layout.gutterWidth}px` : \"\"\n      };\n    } else {\n      if (props.showSummary) {\n        return {\n          height: layout.tableHeight.value ? `${layout.tableHeight.value}px` : \"\"\n        };\n      }\n\n      return {\n        height: layout.viewportHeight.value ? `${layout.viewportHeight.value}px` : \"\"\n      };\n    }\n  });\n  const fixedBodyHeight = computed(() => {\n    if (props.height) {\n      return {\n        height: layout.fixedBodyHeight.value ? `${layout.fixedBodyHeight.value}px` : \"\"\n      };\n    } else if (props.maxHeight) {\n      let maxHeight = parseHeight(props.maxHeight);\n\n      if (typeof maxHeight === \"number\") {\n        maxHeight = layout.scrollX.value ? maxHeight - layout.gutterWidth : maxHeight;\n\n        if (props.showHeader) {\n          maxHeight -= layout.headerHeight.value;\n        }\n\n        maxHeight -= layout.footerHeight.value;\n        return {\n          \"max-height\": `${maxHeight}px`\n        };\n      }\n    }\n\n    return {};\n  });\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    bodyHeight,\n    height,\n    emptyBlockStyle,\n    handleFixedMousewheel,\n    fixedHeight,\n    fixedBodyHeight,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout,\n    tableBodyStyles,\n    tableLayout,\n    scrollbarViewStyle\n  };\n}\n\nexport { useStyle as default };","map":{"version":3,"mappings":"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","names":["useStyle","props","layout","store","table","isHidden","ref","renderExpanded","resizeProxyVisible","setDragVisible","visible","value","resizeState","width","height","isGroup","scrollbarViewStyle","display","verticalAlign","tableWidth","watchEffect","setHeight","setMaxHeight","maxHeight","watch","currentRowKey","states","rowKey","unref","setCurrentRowKey","immediate","data","commit","deep","expandRowKeys","setExpandRowKeysAdapter","handleMouseLeave","hoverState","handleHeaderFooterMousewheel","event","pixelX","pixelY","Math","abs","refs","bodyWrapper","scrollLeft","shouldUpdateHeight","computed","fixedColumns","length","rightFixedColumns","tableBodyStyles","bodyWidth","doLayout","updateElsHeight","updateColumnsWidth","requestAnimationFrame","syncPostion","onMounted","nextTick","updateColumns","bindEvents","vnode","el","offsetWidth","offsetHeight","columns","forEach","column","filteredValue","values","silent","$ready","setScrollClassByEl","className","classList","Array","from","filter","item","startsWith","push","scrollX","join","setScrollClass","tableWrapper","hasScrollClass","contains","scrollBarRef","scrollingNoneClass","scrollContainer","wrap$","scrollWidth","headerWrapper","footerWrapper","maxScrollLeftPosition","_a","addEventListener","passive","fit","addResizeListener","resizeListener","on","window","onBeforeUnmount","unbindEvents","removeEventListener","removeResizeListener","off","shouldUpdateLayout","oldWidth","oldHeight","height2","tableSize","useSize","bodyWidth_","scrollY","gutterWidth","tableLayout","calcMaxHeight","footerHeight","headerHeight","parsedMaxHeight","parseHeight","tableHeaderHeight","showHeader","isString","bodyHeight2","bodyHeight","isNumber","emptyBlockStyle","appendHeight","handleFixedMousewheel","spinY","currentScrollTop","scrollTop","preventDefault","scrollHeight","clientHeight","ceil","fixedHeight","showSummary","bottom","tableHeight","viewportHeight","fixedBodyHeight"],"sources":["../../../../../../../packages/components/table/src/table/style-helper.ts"],"sourcesContent":["import {\n  computed,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  unref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  addResizeListener,\n  isNumber,\n  isString,\n  off,\n  on,\n  removeResizeListener,\n} from '@element-plus/utils'\nimport { useSize } from '@element-plus/hooks'\nimport { parseHeight } from '../util'\n\nimport type { ResizableElement } from '@element-plus/utils'\nimport type { Table, TableProps } from './defaults'\nimport type { Store } from '../store'\nimport type TableLayout from '../table-layout'\nimport type { TableColumnCtx } from '../table-column/defaults'\n\nfunction useStyle<T>(\n  props: TableProps<T>,\n  layout: TableLayout<T>,\n  store: Store<T>,\n  table: Table<T>\n) {\n  const isHidden = ref(false)\n  const renderExpanded = ref(null)\n  const resizeProxyVisible = ref(false)\n  const setDragVisible = (visible: boolean) => {\n    resizeProxyVisible.value = visible\n  }\n  const resizeState = ref({\n    width: null,\n    height: null,\n  })\n  const isGroup = ref(false)\n  const scrollbarViewStyle = {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  }\n  const tableWidth = ref()\n\n  watchEffect(() => {\n    layout.setHeight(props.height)\n  })\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight)\n  })\n  watch(\n    () => [props.currentRowKey, store.states.rowKey],\n    ([currentRowKey, rowKey]) => {\n      if (!unref(rowKey)) return\n      store.setCurrentRowKey(`${currentRowKey}`)\n    },\n    {\n      immediate: true,\n    }\n  )\n  watch(\n    () => props.data,\n    (data) => {\n      table.store.commit('setData', data)\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys)\n    }\n  })\n\n  const handleMouseLeave = () => {\n    table.store.commit('setHoverRow', null)\n    if (table.hoverState) table.hoverState = null\n  }\n\n  const handleHeaderFooterMousewheel = (event, data) => {\n    const { pixelX, pixelY } = data\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5\n    }\n  }\n\n  const shouldUpdateHeight = computed(() => {\n    return (\n      props.height ||\n      props.maxHeight ||\n      store.states.fixedColumns.value.length > 0 ||\n      store.states.rightFixedColumns.value.length > 0\n    )\n  })\n\n  const tableBodyStyles = computed(() => {\n    return {\n      width: layout.bodyWidth.value ? `${layout.bodyWidth.value}px` : '',\n    }\n  })\n\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight()\n    }\n    layout.updateColumnsWidth()\n    requestAnimationFrame(syncPostion)\n  }\n  onMounted(async () => {\n    await nextTick()\n    store.updateColumns()\n    bindEvents()\n    requestAnimationFrame(doLayout)\n\n    resizeState.value = {\n      width: (tableWidth.value = table.vnode.el.offsetWidth),\n      height: table.vnode.el.offsetHeight,\n    }\n\n    // init filters\n    store.states.columns.value.forEach((column: TableColumnCtx<T>) => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit('filterChange', {\n          column,\n          values: column.filteredValue,\n          silent: true,\n        })\n      }\n    })\n    table.$ready = true\n  })\n  const setScrollClassByEl = (el: HTMLElement, className: string) => {\n    if (!el) return\n    const classList = Array.from(el.classList).filter(\n      (item) => !item.startsWith('is-scrolling-')\n    )\n    classList.push(layout.scrollX.value ? className : 'is-scrolling-none')\n    el.className = classList.join(' ')\n  }\n  const setScrollClass = (className: string) => {\n    const { tableWrapper } = table.refs\n    setScrollClassByEl(tableWrapper, className)\n  }\n  const hasScrollClass = (className: string) => {\n    const { tableWrapper } = table.refs\n    if (tableWrapper && tableWrapper.classList.contains(className)) {\n      return true\n    }\n    return false\n  }\n  const syncPostion = function () {\n    if (!table.refs.scrollBarRef) return\n    if (!layout.scrollX.value) {\n      const scrollingNoneClass = 'is-scrolling-none'\n      if (!hasScrollClass(scrollingNoneClass)) {\n        setScrollClass(scrollingNoneClass)\n      }\n      return\n    }\n    const scrollContainer = table.refs.scrollBarRef.wrap$\n    if (!scrollContainer) return\n    const { scrollLeft, offsetWidth, scrollWidth } = scrollContainer\n    const { headerWrapper, footerWrapper } = table.refs\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass('is-scrolling-right')\n    } else if (scrollLeft === 0) {\n      setScrollClass('is-scrolling-left')\n    } else {\n      setScrollClass('is-scrolling-middle')\n    }\n  }\n\n  const bindEvents = () => {\n    if (!table.refs.scrollBarRef) return\n    table.refs.scrollBarRef.wrap$?.addEventListener('scroll', syncPostion, {\n      passive: true,\n    })\n    if (props.fit) {\n      addResizeListener(table.vnode.el as ResizableElement, resizeListener)\n    } else {\n      on(window, 'resize', doLayout)\n    }\n  }\n  onBeforeUnmount(() => {\n    unbindEvents()\n  })\n  const unbindEvents = () => {\n    table.refs.scrollBarRef.wrap$?.removeEventListener(\n      'scroll',\n      syncPostion,\n      true\n    )\n    if (props.fit) {\n      removeResizeListener(table.vnode.el as ResizableElement, resizeListener)\n    } else {\n      off(window, 'resize', doLayout)\n    }\n  }\n  const resizeListener = () => {\n    if (!table.$ready) return\n    let shouldUpdateLayout = false\n    const el = table.vnode.el\n    const { width: oldWidth, height: oldHeight } = resizeState.value\n\n    const width = (tableWidth.value = el.offsetWidth)\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true\n    }\n\n    const height = el.offsetHeight\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true\n    }\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height,\n      }\n      doLayout()\n    }\n  }\n  const tableSize = useSize()\n  const bodyWidth = computed(() => {\n    const { bodyWidth: bodyWidth_, scrollY, gutterWidth } = layout\n    return bodyWidth_.value\n      ? `${(bodyWidth_.value as number) - (scrollY.value ? gutterWidth : 0)}px`\n      : ''\n  })\n\n  const tableLayout = computed(() => {\n    if (props.maxHeight) return 'fixed'\n    return props.tableLayout\n  })\n\n  function calcMaxHeight(\n    maxHeight: string | number,\n    footerHeight: number,\n    headerHeight: number\n  ) {\n    const parsedMaxHeight = parseHeight(maxHeight)\n    const tableHeaderHeight = props.showHeader ? headerHeight : 0\n    if (parsedMaxHeight === null) return\n    if (isString(parsedMaxHeight)) {\n      return `calc(${parsedMaxHeight} - ${footerHeight}px - ${tableHeaderHeight}px)`\n    }\n    return parsedMaxHeight - footerHeight - tableHeaderHeight\n  }\n\n  const height = computed(() => {\n    const headerHeight = layout.headerHeight.value || 0\n    const bodyHeight = layout.bodyHeight.value\n    const footerHeight = layout.footerHeight.value || 0\n    if (props.height) {\n      return bodyHeight ? bodyHeight : undefined\n    } else if (props.maxHeight) {\n      return calcMaxHeight(props.maxHeight, footerHeight, headerHeight)\n    }\n    return undefined\n  })\n\n  const bodyHeight = computed(() => {\n    const headerHeight = layout.headerHeight.value || 0\n    const bodyHeight = layout.bodyHeight.value\n    const footerHeight = layout.footerHeight.value || 0\n    if (props.height) {\n      return {\n        height: bodyHeight ? `${bodyHeight}px` : '',\n      }\n    } else if (props.maxHeight) {\n      const maxHeight = calcMaxHeight(\n        props.maxHeight,\n        footerHeight,\n        headerHeight\n      )\n      if (maxHeight !== null) {\n        return {\n          'max-height': `${maxHeight}${isNumber(maxHeight) ? 'px' : ''}`,\n        }\n      }\n    }\n    return {}\n  })\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return null\n    let height = '100%'\n    if (layout.appendHeight.value) {\n      height = `calc(100% - ${layout.appendHeight.value}px)`\n    }\n    return {\n      width: tableWidth.value ? `${tableWidth.value}px` : '',\n      height,\n    }\n  })\n  /**\n   * fix layout\n   */\n  const handleFixedMousewheel = (event, data) => {\n    const bodyWrapper = table.refs.bodyWrapper\n    if (Math.abs(data.spinY) > 0) {\n      const currentScrollTop = bodyWrapper.scrollTop\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault()\n      }\n      if (\n        data.pixelY > 0 &&\n        bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop\n      ) {\n        event.preventDefault()\n      }\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5)\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5)\n    }\n  }\n  const fixedHeight = computed(() => {\n    if (props.maxHeight) {\n      if (props.showSummary) {\n        return {\n          bottom: 0,\n        }\n      }\n      return {\n        bottom:\n          layout.scrollX.value && props.data.length\n            ? `${layout.gutterWidth}px`\n            : '',\n      }\n    } else {\n      if (props.showSummary) {\n        return {\n          height: layout.tableHeight.value\n            ? `${layout.tableHeight.value}px`\n            : '',\n        }\n      }\n      return {\n        height: layout.viewportHeight.value\n          ? `${layout.viewportHeight.value}px`\n          : '',\n      }\n    }\n  })\n  const fixedBodyHeight = computed(() => {\n    if (props.height) {\n      return {\n        height: layout.fixedBodyHeight.value\n          ? `${layout.fixedBodyHeight.value}px`\n          : '',\n      }\n    } else if (props.maxHeight) {\n      let maxHeight = parseHeight(props.maxHeight)\n      if (typeof maxHeight === 'number') {\n        maxHeight = layout.scrollX.value\n          ? maxHeight - layout.gutterWidth\n          : maxHeight\n        if (props.showHeader) {\n          maxHeight -= layout.headerHeight.value\n        }\n        maxHeight -= layout.footerHeight.value\n        return {\n          'max-height': `${maxHeight}px`,\n        }\n      }\n    }\n    return {}\n  })\n\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    bodyHeight,\n    height,\n    emptyBlockStyle,\n    handleFixedMousewheel,\n    fixedHeight,\n    fixedBodyHeight,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout,\n    tableBodyStyles,\n    tableLayout,\n    scrollbarViewStyle,\n  }\n}\n\nexport default useStyle\n"]},"metadata":{},"sourceType":"module"}