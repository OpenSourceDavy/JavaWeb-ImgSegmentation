{"ast":null,"code":"import { watch, unref } from 'vue';\nimport '../../utils/index.mjs';\nimport { debugWarn } from '../../utils/error.mjs';\n\nconst useDeprecated = ({\n  from,\n  replacement,\n  scope,\n  version,\n  ref,\n  type = \"API\"\n}, condition) => {\n  watch(() => unref(condition), val => {\n    if (val) {\n      debugWarn(scope, `${type} ${from} is about to be deprecated in version ${version}, please use ${replacement} instead.\nFor more detail, please visit: ${ref}\n`);\n    }\n  }, {\n    immediate: true\n  });\n};\n\nexport { useDeprecated };","map":{"version":3,"mappings":";;;;AAEY,MAACA,aAAa,GAAG,CAAC;AAAEC,MAAF;AAAQC,aAAR;AAAqBC,OAArB;AAA4BC,SAA5B;AAAqCC,KAArC;AAA0CC,MAAI,GAAG;AAAjD,CAAD,EAA2DC,SAA3D,KAAyE;AACpGC,OAAK,CAAC,MAAMC,KAAK,CAACF,SAAD,CAAZ,EAA0BG,GAAD,IAAS;AACrC,QAAIA,GAAJ,EAAS;AACPC,eAAS,CAACR,KAAD,EAAS,GAAEG,IAAK,IAAGL,IAAK,yCAAwCG,OAAQ,gBAAeF,WAAY;AAClH,iCAAiCG,GAAI;AACrC,CAFe,CAAT;AAGD;AACF,GANI,EAMF;AACDO,aAAS,EAAE;AADV,GANE,CAAL;AASF,CAVY","names":["useDeprecated","from","replacement","scope","version","ref","type","condition","watch","unref","val","debugWarn","immediate"],"sources":["../../../../../packages/hooks/use-deprecated/index.ts"],"sourcesContent":["import { unref, watch } from 'vue'\nimport { debugWarn } from '@element-plus/utils'\n\nimport type { MaybeRef } from '@vueuse/core'\n\ntype DeprecationParam = {\n  from: string\n  replacement: string\n  scope: string\n  version: string\n  ref: string\n  type?: 'API' | 'Slot' | 'Event'\n}\n\nexport const useDeprecated = (\n  { from, replacement, scope, version, ref, type = 'API' }: DeprecationParam,\n  condition: MaybeRef<boolean>\n) => {\n  watch(\n    () => unref(condition),\n    (val) => {\n      if (val) {\n        debugWarn(\n          scope,\n          `${type} ${from} is about to be deprecated in version ${version}, please use ${replacement} instead.\nFor more detail, please visit: ${ref}\n`\n        )\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}