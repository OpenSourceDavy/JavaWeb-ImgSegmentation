{"ast":null,"code":"import { NOOP } from '@vue/shared';\n\nconst useSameTarget = handleClick => {\n  if (!handleClick) {\n    return {\n      onClick: NOOP,\n      onMousedown: NOOP,\n      onMouseup: NOOP\n    };\n  }\n\n  let mousedownTarget = false;\n  let mouseupTarget = false;\n\n  const onClick = e => {\n    if (mousedownTarget && mouseupTarget) {\n      handleClick(e);\n    }\n\n    mousedownTarget = mouseupTarget = false;\n  };\n\n  const onMousedown = e => {\n    mousedownTarget = e.target === e.currentTarget;\n  };\n\n  const onMouseup = e => {\n    mouseupTarget = e.target === e.currentTarget;\n  };\n\n  return {\n    onClick,\n    onMousedown,\n    onMouseup\n  };\n};\n\nexport { useSameTarget };","map":{"version":3,"mappings":";;AACY,MAACA,aAAa,GAAIC,WAAD,IAAiB;AAC5C,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO;AAAEC,aAAO,EAAEC,IAAX;AAAiBC,iBAAW,EAAED,IAA9B;AAAoCE,eAAS,EAAEF;AAA/C,KAAP;AACD;;AACD,MAAIG,eAAe,GAAG,KAAtB;AACA,MAAIC,aAAa,GAAG,KAApB;;AACA,QAAML,OAAO,GAAIM,CAAD,IAAO;AACrB,QAAIF,eAAe,IAAIC,aAAvB,EAAsC;AACpCN,iBAAW,CAACO,CAAD,CAAX;AACD;;AACDF,mBAAe,GAAGC,aAAa,GAAG,KAAlC;AACD,GALD;;AAMA,QAAMH,WAAW,GAAII,CAAD,IAAO;AACzBF,mBAAe,GAAGE,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAjC;AACD,GAFD;;AAGA,QAAML,SAAS,GAAIG,CAAD,IAAO;AACvBD,iBAAa,GAAGC,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAA/B;AACD,GAFD;;AAGA,SAAO;AAAER,WAAF;AAAWE,eAAX;AAAwBC;AAAxB,GAAP;AACF,CAnBY","names":["useSameTarget","handleClick","onClick","NOOP","onMousedown","onMouseup","mousedownTarget","mouseupTarget","e","target","currentTarget"],"sources":["../../../../../packages/hooks/use-same-target/index.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\n\nexport const useSameTarget = (handleClick?: (e: MouseEvent) => void) => {\n  if (!handleClick) {\n    return { onClick: NOOP, onMousedown: NOOP, onMouseup: NOOP }\n  }\n\n  let mousedownTarget = false\n  let mouseupTarget = false\n  // refer to this https://javascript.info/mouse-events-basics\n  // events fired in the order: mousedown -> mouseup -> click\n  // we need to set the mousedown handle to false after click fired.\n  const onClick = (e: MouseEvent) => {\n    // if and only if\n    if (mousedownTarget && mouseupTarget) {\n      handleClick(e)\n    }\n    mousedownTarget = mouseupTarget = false\n  }\n\n  const onMousedown = (e: MouseEvent) => {\n    // marking current mousedown target.\n    mousedownTarget = e.target === e.currentTarget\n  }\n  const onMouseup = (e: MouseEvent) => {\n    // marking current mouseup target.\n    mouseupTarget = e.target === e.currentTarget\n  }\n\n  return { onClick, onMousedown, onMouseup }\n}\n"]},"metadata":{},"sourceType":"module"}