{"ast":null,"code":"import { ref, watch } from 'vue';\n\nconst makeList = (total, method, methodFunc) => {\n  const arr = [];\n  const disabledArr = method && methodFunc();\n\n  for (let i = 0; i < total; i++) {\n    arr[i] = disabledArr ? disabledArr.includes(i) : false;\n  }\n\n  return arr;\n};\n\nconst makeAvailableArr = list => {\n  return list.map((_, index) => !_ ? index : _).filter(_ => _ !== true);\n};\n\nconst getTimeLists = (disabledHours, disabledMinutes, disabledSeconds) => {\n  const getHoursList = (role, compare) => {\n    return makeList(24, disabledHours, () => disabledHours(role, compare));\n  };\n\n  const getMinutesList = (hour, role, compare) => {\n    return makeList(60, disabledMinutes, () => disabledMinutes(hour, role, compare));\n  };\n\n  const getSecondsList = (hour, minute, role, compare) => {\n    return makeList(60, disabledSeconds, () => disabledSeconds(hour, minute, role, compare));\n  };\n\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList\n  };\n};\n\nconst getAvailableArrs = (disabledHours, disabledMinutes, disabledSeconds) => {\n  const {\n    getHoursList,\n    getMinutesList,\n    getSecondsList\n  } = getTimeLists(disabledHours, disabledMinutes, disabledSeconds);\n\n  const getAvailableHours = (role, compare) => {\n    return makeAvailableArr(getHoursList(role, compare));\n  };\n\n  const getAvailableMinutes = (hour, role, compare) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare));\n  };\n\n  const getAvailableSeconds = (hour, minute, role, compare) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare));\n  };\n\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds\n  };\n};\n\nconst useOldValue = props => {\n  const oldValue = ref(props.parsedValue);\n  watch(() => props.visible, val => {\n    if (!val) {\n      oldValue.value = props.parsedValue;\n    }\n  });\n  return oldValue;\n};\n\nexport { getAvailableArrs, getTimeLists, useOldValue };","map":{"version":3,"mappings":"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","names":["makeList","total","method","methodFunc","arr","disabledArr","i","includes","makeAvailableArr","list","map","_","index","filter","getTimeLists","disabledHours","disabledMinutes","disabledSeconds","getHoursList","role","compare","getMinutesList","hour","getSecondsList","minute","getAvailableArrs","getAvailableHours","getAvailableMinutes","getAvailableSeconds","useOldValue","props","oldValue","ref","parsedValue","watch","visible","val","value"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/useTimePicker.ts"],"sourcesContent":["import { ref, watch } from 'vue'\n\nimport type { Dayjs } from 'dayjs'\n\nconst makeList = (total, method, methodFunc) => {\n  const arr = []\n  const disabledArr = method && methodFunc()\n  for (let i = 0; i < total; i++) {\n    arr[i] = disabledArr ? disabledArr.includes(i) : false\n  }\n  return arr\n}\n\nconst makeAvailableArr = (list) => {\n  return list.map((_, index) => (!_ ? index : _)).filter((_) => _ !== true)\n}\n\nexport const getTimeLists = (\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds\n) => {\n  const getHoursList = (role, compare?) => {\n    return makeList(24, disabledHours, () => disabledHours(role, compare))\n  }\n\n  const getMinutesList = (hour, role, compare?) => {\n    return makeList(60, disabledMinutes, () =>\n      disabledMinutes(hour, role, compare)\n    )\n  }\n\n  const getSecondsList = (hour, minute, role, compare?) => {\n    return makeList(60, disabledSeconds, () =>\n      disabledSeconds(hour, minute, role, compare)\n    )\n  }\n\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList,\n  }\n}\n\nexport const getAvailableArrs = (\n  disabledHours,\n  disabledMinutes,\n  disabledSeconds\n) => {\n  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(\n    disabledHours,\n    disabledMinutes,\n    disabledSeconds\n  )\n\n  const getAvailableHours = (role, compare?) => {\n    return makeAvailableArr(getHoursList(role, compare))\n  }\n\n  const getAvailableMinutes = (hour, role, compare?) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare))\n  }\n\n  const getAvailableSeconds = (hour, minute, role, compare?) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare))\n  }\n\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds,\n  }\n}\n\nexport const useOldValue = (props: {\n  parsedValue?: string | Dayjs | Dayjs[]\n  visible: boolean\n}) => {\n  const oldValue = ref(props.parsedValue)\n\n  watch(\n    () => props.visible,\n    (val) => {\n      if (!val) {\n        oldValue.value = props.parsedValue\n      }\n    }\n  )\n\n  return oldValue\n}\n"]},"metadata":{},"sourceType":"module"}