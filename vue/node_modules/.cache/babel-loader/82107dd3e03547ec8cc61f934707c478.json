{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nconst imageViewerProps = buildProps({\n  urlList: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  zIndex: {\n    type: Number\n  },\n  initialIndex: {\n    type: Number,\n    default: 0\n  },\n  infinite: {\n    type: Boolean,\n    default: true\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false\n  },\n  teleported: {\n    type: Boolean,\n    default: false\n  }\n});\nconst imageViewerEmits = {\n  close: () => true,\n  switch: index => typeof index === \"number\"\n};\nexport { imageViewerEmits, imageViewerProps };","map":{"version":3,"mappings":";;;AACY,MAACA,gBAAgB,GAAGC,UAAU,CAAC;AACzCC,SAAO,EAAE;AACPC,QAAI,EAAEC,cAAc,CAACC,KAAD,CADb;AAEPC,WAAO,EAAE,MAAMC,OAAO,CAAC,EAAD;AAFf,GADgC;AAKzCC,QAAM,EAAE;AACNL,QAAI,EAAEM;AADA,GALiC;AAQzCC,cAAY,EAAE;AACZP,QAAI,EAAEM,MADM;AAEZH,WAAO,EAAE;AAFG,GAR2B;AAYzCK,UAAQ,EAAE;AACRR,QAAI,EAAES,OADE;AAERN,WAAO,EAAE;AAFD,GAZ+B;AAgBzCO,kBAAgB,EAAE;AAChBV,QAAI,EAAES,OADU;AAEhBN,WAAO,EAAE;AAFO,GAhBuB;AAoBzCQ,YAAU,EAAE;AACVX,QAAI,EAAES,OADI;AAEVN,WAAO,EAAE;AAFC;AApB6B,CAAD,CAA9B;AAyBA,MAACS,gBAAgB,GAAG;AAC9BC,OAAK,EAAE,MAAM,IADiB;AAE9BC,QAAM,EAAGC,KAAD,IAAW,OAAOA,KAAP,KAAiB;AAFN,CAApB","names":["imageViewerProps","buildProps","urlList","type","definePropType","Array","default","mutable","zIndex","Number","initialIndex","infinite","Boolean","hideOnClickModal","teleported","imageViewerEmits","close","switch","index"],"sources":["../../../../../../packages/components/image-viewer/src/image-viewer.ts"],"sourcesContent":["import { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\n\nexport type ImageViewerAction =\n  | 'zoomIn'\n  | 'zoomOut'\n  | 'clockwise'\n  | 'anticlockwise'\n\nexport const imageViewerProps = buildProps({\n  urlList: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  zIndex: {\n    type: Number,\n  },\n  initialIndex: {\n    type: Number,\n    default: 0,\n  },\n  infinite: {\n    type: Boolean,\n    default: true,\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false,\n  },\n  teleported: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\nexport type ImageViewerProps = ExtractPropTypes<typeof imageViewerProps>\n\nexport const imageViewerEmits = {\n  close: () => true,\n  switch: (index: number) => typeof index === 'number',\n}\nexport type ImageViewerEmits = typeof imageViewerEmits\n"]},"metadata":{},"sourceType":"module"}