{"ast":null,"code":"import { provide } from 'vue';\nconst FORWARD_REF_INJECTION_KEY = Symbol(\"elForwardRef\");\n\nconst useForwardRef = forwardRef => {\n  const setForwardRef = el => {\n    forwardRef.value = el;\n  };\n\n  provide(FORWARD_REF_INJECTION_KEY, {\n    setForwardRef\n  });\n};\n\nconst useForwardRefDirective = setForwardRef => {\n  return {\n    mounted(el) {\n      setForwardRef(el);\n    },\n\n    updated(el) {\n      setForwardRef(el);\n    },\n\n    unmounted() {\n      setForwardRef(null);\n    }\n\n  };\n};\n\nexport { FORWARD_REF_INJECTION_KEY, useForwardRef, useForwardRefDirective };","map":{"version":3,"mappings":";AACY,MAACA,yBAAyB,GAAGC,MAAM,CAAC,cAAD,CAAnC;;AACA,MAACC,aAAa,GAAIC,UAAD,IAAgB;AAC3C,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5BF,cAAU,CAACG,KAAX,GAAmBD,EAAnB;AACD,GAFD;;AAGAE,SAAO,CAACP,yBAAD,EAA4B;AACjCI;AADiC,GAA5B,CAAP;AAGF,CAPY;;AAQA,MAACI,sBAAsB,GAAIJ,aAAD,IAAmB;AACvD,SAAO;AACLK,WAAO,CAACJ,EAAD,EAAK;AACVD,mBAAa,CAACC,EAAD,CAAb;AACD,KAHI;;AAILK,WAAO,CAACL,EAAD,EAAK;AACVD,mBAAa,CAACC,EAAD,CAAb;AACD,KANI;;AAOLM,aAAS,GAAG;AACVP,mBAAa,CAAC,IAAD,CAAb;AACD;;AATI,GAAP;AAWF,CAZY","names":["FORWARD_REF_INJECTION_KEY","Symbol","useForwardRef","forwardRef","setForwardRef","el","value","provide","useForwardRefDirective","mounted","updated","unmounted"],"sources":["../../../../../packages/hooks/use-forward-ref/index.ts"],"sourcesContent":["import { provide } from 'vue'\n\nimport type { InjectionKey, Ref } from 'vue'\n\ntype ForwardRefSetter = <T>(el: T) => void\n\nexport type ForwardRefInjectionContext = {\n  setForwardRef: ForwardRefSetter\n}\n\nexport const FORWARD_REF_INJECTION_KEY: InjectionKey<ForwardRefInjectionContext> =\n  Symbol('elForwardRef')\n\nexport const useForwardRef = <T>(forwardRef: Ref<T | null>) => {\n  const setForwardRef = (el: T) => {\n    forwardRef.value = el\n  }\n\n  provide(FORWARD_REF_INJECTION_KEY, {\n    setForwardRef,\n  })\n}\n\nexport const useForwardRefDirective = (setForwardRef: ForwardRefSetter) => {\n  return {\n    mounted(el) {\n      setForwardRef(el)\n    },\n    updated(el) {\n      setForwardRef(el)\n    },\n    unmounted() {\n      setForwardRef(null)\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}