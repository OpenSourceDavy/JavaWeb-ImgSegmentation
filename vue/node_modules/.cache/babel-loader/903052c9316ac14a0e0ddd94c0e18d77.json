{"ast":null,"code":"import { ref } from 'vue';\nimport '../../../../utils/index.mjs';\nimport { isNumber } from '@vueuse/core';\n\nconst useScrollbar = () => {\n  const scrollBarRef = ref();\n\n  const scrollTo = (options, yCoord) => {\n    const scrollbar = scrollBarRef.value;\n\n    if (scrollbar) {\n      scrollbar.scrollTo(options, yCoord);\n    }\n  };\n\n  const setScrollPosition = (position, offset) => {\n    const scrollbar = scrollBarRef.value;\n\n    if (scrollbar && isNumber(offset) && [\"Top\", \"Left\"].includes(position)) {\n      scrollbar[`setScroll${position}`](offset);\n    }\n  };\n\n  const setScrollTop = top => setScrollPosition(\"Top\", top);\n\n  const setScrollLeft = left => setScrollPosition(\"Left\", left);\n\n  return {\n    scrollBarRef,\n    scrollTo,\n    setScrollTop,\n    setScrollLeft\n  };\n};\n\nexport { useScrollbar };","map":{"version":3,"mappings":";;;;AAEY,MAACA,YAAY,GAAG,MAAM;AAChC,QAAMC,YAAY,GAAGC,GAAG,EAAxB;;AACA,QAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,SAAS,GAAGL,YAAY,CAACM,KAA/B;;AACA,QAAID,SAAJ,EAAe;AACbA,eAAS,CAACH,QAAV,CAAmBC,OAAnB,EAA4BC,MAA5B;AACD;AACF,GALD;;AAMA,QAAMG,iBAAiB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9C,UAAMJ,SAAS,GAAGL,YAAY,CAACM,KAA/B;;AACA,QAAID,SAAS,IAAIK,QAAQ,CAACD,MAAD,CAArB,IAAiC,CAAC,KAAD,EAAQ,MAAR,EAAgBE,QAAhB,CAAyBH,QAAzB,CAArC,EAAyE;AACvEH,eAAS,CAAE,YAAWG,QAAS,EAAtB,CAAT,CAAkCC,MAAlC;AACD;AACF,GALD;;AAMA,QAAMG,YAAY,GAAIC,GAAD,IAASN,iBAAiB,CAAC,KAAD,EAAQM,GAAR,CAA/C;;AACA,QAAMC,aAAa,GAAIC,IAAD,IAAUR,iBAAiB,CAAC,MAAD,EAASQ,IAAT,CAAjD;;AACA,SAAO;AACLf,gBADK;AAELE,YAFK;AAGLU,gBAHK;AAILE;AAJK,GAAP;AAMF,CAtBY","names":["useScrollbar","scrollBarRef","ref","scrollTo","options","yCoord","scrollbar","value","setScrollPosition","position","offset","isNumber","includes","setScrollTop","top","setScrollLeft","left"],"sources":["../../../../../../../packages/components/table/src/composables/use-scrollbar.ts"],"sourcesContent":["import { ref } from 'vue'\nimport { isNumber } from '@element-plus/utils'\n\nexport const useScrollbar = () => {\n  const scrollBarRef = ref()\n\n  const scrollTo = (options: ScrollToOptions | number, yCoord?: number) => {\n    const scrollbar = scrollBarRef.value\n    if (scrollbar) {\n      scrollbar.scrollTo(options, yCoord)\n    }\n  }\n\n  const setScrollPosition = (position: 'Top' | 'Left', offset?: number) => {\n    const scrollbar = scrollBarRef.value\n    if (scrollbar && isNumber(offset) && ['Top', 'Left'].includes(position)) {\n      scrollbar[`setScroll${position}`](offset)\n    }\n  }\n\n  const setScrollTop = (top?: number) => setScrollPosition('Top', top)\n  const setScrollLeft = (left?: number) => setScrollPosition('Left', left)\n\n  return {\n    scrollBarRef,\n    scrollTo,\n    setScrollTop,\n    setScrollLeft,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}