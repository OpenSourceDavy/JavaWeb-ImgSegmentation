{"ast":null,"code":"import { inject, computed, ref } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { generateId } from '../../../utils/rand.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { addClass } from '../../../utils/dom/style.mjs';\nimport { on } from '../../../utils/dom/event.mjs';\n\nconst useDropdown = () => {\n  const elDropdown = inject(\"elDropdown\", {});\n\n  const _elDropdownSize = computed(() => elDropdown == null ? void 0 : elDropdown.dropdownSize);\n\n  return {\n    elDropdown,\n    _elDropdownSize\n  };\n};\n\nconst initDropdownDomEvent = (dropdownChildren, triggerElm, _instance) => {\n  const ns = useNamespace(\"dropdown\");\n  const menuItems = ref(null);\n  const menuItemsArray = ref(null);\n  const dropdownElm = ref(null);\n  const listId = ref(`dropdown-menu-${generateId()}`);\n  dropdownElm.value = dropdownChildren == null ? void 0 : dropdownChildren.subTree.el;\n\n  function removeTabindex() {\n    var _a;\n\n    triggerElm.setAttribute(\"tabindex\", \"-1\");\n    (_a = menuItemsArray.value) == null ? void 0 : _a.forEach(item => {\n      item.setAttribute(\"tabindex\", \"-1\");\n    });\n  }\n\n  function resetTabindex(ele) {\n    removeTabindex();\n    ele == null ? void 0 : ele.setAttribute(\"tabindex\", \"0\");\n  }\n\n  function handleTriggerKeyDown(ev) {\n    const code = ev.code;\n\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      removeTabindex();\n      resetTabindex(menuItems.value[0]);\n      menuItems.value[0].focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (code === EVENT_CODE.enter) {\n      _instance.handleClick();\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide();\n    }\n  }\n\n  function handleItemKeyDown(ev) {\n    const code = ev.code;\n    const target = ev.target;\n    const currentIndex = menuItemsArray.value.indexOf(target);\n    const max = menuItemsArray.value.length - 1;\n    let nextIndex;\n\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0;\n      } else {\n        nextIndex = currentIndex < max ? currentIndex + 1 : max;\n      }\n\n      removeTabindex();\n      resetTabindex(menuItems.value[nextIndex]);\n      menuItems.value[nextIndex].focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (code === EVENT_CODE.enter) {\n      triggerElmFocus();\n      target.click();\n\n      if (_instance.props.hideOnClick) {\n        _instance.hide();\n      }\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide();\n\n      triggerElmFocus();\n    }\n  }\n\n  function initAria() {\n    dropdownElm.value.setAttribute(\"id\", listId.value);\n    triggerElm.setAttribute(\"aria-haspopup\", \"list\");\n    triggerElm.setAttribute(\"aria-controls\", listId.value);\n\n    if (!_instance.props.splitButton) {\n      triggerElm.setAttribute(\"role\", \"button\");\n      triggerElm.setAttribute(\"tabindex\", _instance.props.tabindex);\n      addClass(triggerElm, ns.b(\"selfdefine\"));\n    }\n  }\n\n  function initEvent() {\n    on(triggerElm, \"keydown\", handleTriggerKeyDown);\n    on(dropdownElm.value, \"keydown\", handleItemKeyDown, true);\n  }\n\n  function initDomOperation() {\n    menuItems.value = dropdownElm.value.querySelectorAll(\"[tabindex='-1']\");\n    menuItemsArray.value = Array.from(menuItems.value);\n    initEvent();\n    initAria();\n  }\n\n  function triggerElmFocus() {\n    triggerElm.focus();\n  }\n\n  initDomOperation();\n};\n\nexport { initDropdownDomEvent, useDropdown };","map":{"version":3,"mappings":";;;;;;;;;;AAIY,MAACA,WAAW,GAAG,MAAM;AAC/B,QAAMC,UAAU,GAAGC,MAAM,CAAC,YAAD,EAAe,EAAf,CAAzB;;AACA,QAAMC,eAAe,GAAGC,QAAQ,CAAC,MAAMH,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACI,YAAhD,CAAhC;;AACA,SAAO;AACLJ,cADK;AAELE;AAFK,GAAP;AAIF,CAPY;;AAQA,MAACG,oBAAoB,GAAG,CAACC,gBAAD,EAAmBC,UAAnB,EAA+BC,SAA/B,KAA6C;AAC/E,QAAMC,EAAE,GAAGC,YAAY,CAAC,UAAD,CAAvB;AACA,QAAMC,SAAS,GAAGC,GAAG,CAAC,IAAD,CAArB;AACA,QAAMC,cAAc,GAAGD,GAAG,CAAC,IAAD,CAA1B;AACA,QAAME,WAAW,GAAGF,GAAG,CAAC,IAAD,CAAvB;AACA,QAAMG,MAAM,GAAGH,GAAG,CAAE,iBAAgBI,UAAU,EAAG,EAA/B,CAAlB;AACAF,aAAW,CAACG,KAAZ,GAAoBX,gBAAgB,IAAI,IAApB,GAA2B,KAAK,CAAhC,GAAoCA,gBAAgB,CAACY,OAAjB,CAAyBC,EAAjF;;AACA,WAASC,cAAT,GAA0B;AACxB,QAAIC,EAAJ;;AACAd,cAAU,CAACe,YAAX,CAAwB,UAAxB,EAAoC,IAApC;AACA,KAACD,EAAE,GAAGR,cAAc,CAACI,KAArB,KAA+B,IAA/B,GAAsC,KAAK,CAA3C,GAA+CI,EAAE,CAACE,OAAH,CAAYC,IAAD,IAAU;AAClEA,UAAI,CAACF,YAAL,CAAkB,UAAlB,EAA8B,IAA9B;AACD,KAF8C,CAA/C;AAGD;;AACD,WAASG,aAAT,CAAuBC,GAAvB,EAA4B;AAC1BN,kBAAc;AACdM,OAAG,IAAI,IAAP,GAAc,KAAK,CAAnB,GAAuBA,GAAG,CAACJ,YAAJ,CAAiB,UAAjB,EAA6B,GAA7B,CAAvB;AACD;;AACD,WAASK,oBAAT,CAA8BC,EAA9B,EAAkC;AAChC,UAAMC,IAAI,GAAGD,EAAE,CAACC,IAAhB;;AACA,QAAI,CAACC,UAAU,CAACC,EAAZ,EAAgBD,UAAU,CAACE,IAA3B,EAAiCC,QAAjC,CAA0CJ,IAA1C,CAAJ,EAAqD;AACnDT,oBAAc;AACdK,mBAAa,CAACd,SAAS,CAACM,KAAV,CAAgB,CAAhB,CAAD,CAAb;AACAN,eAAS,CAACM,KAAV,CAAgB,CAAhB,EAAmBiB,KAAnB;AACAN,QAAE,CAACO,cAAH;AACAP,QAAE,CAACQ,eAAH;AACD,KAND,MAMO,IAAIP,IAAI,KAAKC,UAAU,CAACO,KAAxB,EAA+B;AACpC7B,eAAS,CAAC8B,WAAV;AACD,KAFM,MAEA,IAAI,CAACR,UAAU,CAACS,GAAZ,EAAiBT,UAAU,CAACU,GAA5B,EAAiCP,QAAjC,CAA0CJ,IAA1C,CAAJ,EAAqD;AAC1DrB,eAAS,CAACiC,IAAV;AACD;AACF;;AACD,WAASC,iBAAT,CAA2Bd,EAA3B,EAA+B;AAC7B,UAAMC,IAAI,GAAGD,EAAE,CAACC,IAAhB;AACA,UAAMc,MAAM,GAAGf,EAAE,CAACe,MAAlB;AACA,UAAMC,YAAY,GAAG/B,cAAc,CAACI,KAAf,CAAqB4B,OAArB,CAA6BF,MAA7B,CAArB;AACA,UAAMG,GAAG,GAAGjC,cAAc,CAACI,KAAf,CAAqB8B,MAArB,GAA8B,CAA1C;AACA,QAAIC,SAAJ;;AACA,QAAI,CAAClB,UAAU,CAACC,EAAZ,EAAgBD,UAAU,CAACE,IAA3B,EAAiCC,QAAjC,CAA0CJ,IAA1C,CAAJ,EAAqD;AACnD,UAAIA,IAAI,KAAKC,UAAU,CAACC,EAAxB,EAA4B;AAC1BiB,iBAAS,GAAGJ,YAAY,KAAK,CAAjB,GAAqBA,YAAY,GAAG,CAApC,GAAwC,CAApD;AACD,OAFD,MAEO;AACLI,iBAAS,GAAGJ,YAAY,GAAGE,GAAf,GAAqBF,YAAY,GAAG,CAApC,GAAwCE,GAApD;AACD;;AACD1B,oBAAc;AACdK,mBAAa,CAACd,SAAS,CAACM,KAAV,CAAgB+B,SAAhB,CAAD,CAAb;AACArC,eAAS,CAACM,KAAV,CAAgB+B,SAAhB,EAA2Bd,KAA3B;AACAN,QAAE,CAACO,cAAH;AACAP,QAAE,CAACQ,eAAH;AACD,KAXD,MAWO,IAAIP,IAAI,KAAKC,UAAU,CAACO,KAAxB,EAA+B;AACpCY,qBAAe;AACfN,YAAM,CAACO,KAAP;;AACA,UAAI1C,SAAS,CAAC2C,KAAV,CAAgBC,WAApB,EAAiC;AAC/B5C,iBAAS,CAACiC,IAAV;AACD;AACF,KANM,MAMA,IAAI,CAACX,UAAU,CAACS,GAAZ,EAAiBT,UAAU,CAACU,GAA5B,EAAiCP,QAAjC,CAA0CJ,IAA1C,CAAJ,EAAqD;AAC1DrB,eAAS,CAACiC,IAAV;;AACAQ,qBAAe;AAChB;AACF;;AACD,WAASI,QAAT,GAAoB;AAClBvC,eAAW,CAACG,KAAZ,CAAkBK,YAAlB,CAA+B,IAA/B,EAAqCP,MAAM,CAACE,KAA5C;AACAV,cAAU,CAACe,YAAX,CAAwB,eAAxB,EAAyC,MAAzC;AACAf,cAAU,CAACe,YAAX,CAAwB,eAAxB,EAAyCP,MAAM,CAACE,KAAhD;;AACA,QAAI,CAACT,SAAS,CAAC2C,KAAV,CAAgBG,WAArB,EAAkC;AAChC/C,gBAAU,CAACe,YAAX,CAAwB,MAAxB,EAAgC,QAAhC;AACAf,gBAAU,CAACe,YAAX,CAAwB,UAAxB,EAAoCd,SAAS,CAAC2C,KAAV,CAAgBI,QAApD;AACAC,cAAQ,CAACjD,UAAD,EAAaE,EAAE,CAACgD,CAAH,CAAK,YAAL,CAAb,CAAR;AACD;AACF;;AACD,WAASC,SAAT,GAAqB;AACnBC,MAAE,CAACpD,UAAD,EAAa,SAAb,EAAwBoB,oBAAxB,CAAF;AACAgC,MAAE,CAAC7C,WAAW,CAACG,KAAb,EAAoB,SAApB,EAA+ByB,iBAA/B,EAAkD,IAAlD,CAAF;AACD;;AACD,WAASkB,gBAAT,GAA4B;AAC1BjD,aAAS,CAACM,KAAV,GAAkBH,WAAW,CAACG,KAAZ,CAAkB4C,gBAAlB,CAAmC,iBAAnC,CAAlB;AACAhD,kBAAc,CAACI,KAAf,GAAuB6C,KAAK,CAACC,IAAN,CAAWpD,SAAS,CAACM,KAArB,CAAvB;AACAyC,aAAS;AACTL,YAAQ;AACT;;AACD,WAASJ,eAAT,GAA2B;AACzB1C,cAAU,CAAC2B,KAAX;AACD;;AACD0B,kBAAgB;AAClB,CApFY","names":["useDropdown","elDropdown","inject","_elDropdownSize","computed","dropdownSize","initDropdownDomEvent","dropdownChildren","triggerElm","_instance","ns","useNamespace","menuItems","ref","menuItemsArray","dropdownElm","listId","generateId","value","subTree","el","removeTabindex","_a","setAttribute","forEach","item","resetTabindex","ele","handleTriggerKeyDown","ev","code","EVENT_CODE","up","down","includes","focus","preventDefault","stopPropagation","enter","handleClick","tab","esc","hide","handleItemKeyDown","target","currentIndex","indexOf","max","length","nextIndex","triggerElmFocus","click","props","hideOnClick","initAria","splitButton","tabindex","addClass","b","initEvent","on","initDomOperation","querySelectorAll","Array","from"],"sources":["../../../../../../packages/components/dropdown/src/useDropdown.ts"],"sourcesContent":["import { computed, inject, ref } from 'vue'\nimport { addClass, generateId, on } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Nullable } from '@element-plus/utils'\nimport type { IElDropdownInstance } from './dropdown'\n\nexport const useDropdown = () => {\n  const elDropdown = inject<IElDropdownInstance>('elDropdown', {})\n  const _elDropdownSize = computed(() => elDropdown?.dropdownSize)\n\n  return {\n    elDropdown,\n    _elDropdownSize,\n  }\n}\n\nexport const initDropdownDomEvent = (\n  dropdownChildren,\n  triggerElm,\n  _instance\n) => {\n  const ns = useNamespace('dropdown')\n  const menuItems = ref<Nullable<HTMLButtonElement[]>>(null)\n  const menuItemsArray = ref<Nullable<HTMLElement[]>>(null)\n  const dropdownElm = ref<Nullable<HTMLElement>>(null)\n  const listId = ref(`dropdown-menu-${generateId()}`)\n  dropdownElm.value = dropdownChildren?.subTree.el\n\n  function removeTabindex() {\n    triggerElm.setAttribute('tabindex', '-1')\n    menuItemsArray.value?.forEach((item) => {\n      item.setAttribute('tabindex', '-1')\n    })\n  }\n\n  function resetTabindex(ele) {\n    removeTabindex()\n    ele?.setAttribute('tabindex', '0')\n  }\n\n  function handleTriggerKeyDown(ev: KeyboardEvent) {\n    const code = ev.code\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      removeTabindex()\n      resetTabindex(menuItems.value[0])\n      menuItems.value[0].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      _instance.handleClick()\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n    }\n  }\n\n  function handleItemKeyDown(ev) {\n    const code = ev.code\n    const target = ev.target\n    const currentIndex = menuItemsArray.value.indexOf(target)\n    const max = menuItemsArray.value.length - 1\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0\n      } else {\n        nextIndex = currentIndex < max ? currentIndex + 1 : max\n      }\n      removeTabindex()\n      resetTabindex(menuItems.value[nextIndex])\n      menuItems.value[nextIndex].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      triggerElmFocus()\n      target.click()\n      if (_instance.props.hideOnClick) {\n        _instance.hide()\n      }\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n      triggerElmFocus()\n    }\n  }\n\n  function initAria() {\n    dropdownElm.value.setAttribute('id', listId.value)\n    triggerElm.setAttribute('aria-haspopup', 'list')\n    triggerElm.setAttribute('aria-controls', listId.value)\n    if (!_instance.props.splitButton) {\n      triggerElm.setAttribute('role', 'button')\n      triggerElm.setAttribute('tabindex', _instance.props.tabindex)\n      addClass(triggerElm, ns.b('selfdefine'))\n    }\n  }\n\n  function initEvent() {\n    on(triggerElm, 'keydown', handleTriggerKeyDown)\n    on(dropdownElm.value, 'keydown', handleItemKeyDown, true)\n  }\n\n  function initDomOperation() {\n    menuItems.value = dropdownElm.value.querySelectorAll(\n      \"[tabindex='-1']\"\n    ) as unknown as HTMLButtonElement[]\n    menuItemsArray.value = Array.from(menuItems.value)\n\n    initEvent()\n    initAria()\n  }\n\n  function triggerElmFocus() {\n    triggerElm.focus()\n  }\n\n  initDomOperation()\n}\n"]},"metadata":{},"sourceType":"module"}