{"ast":null,"code":"import { defineComponent, computed, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElMarker\",\n  props: {\n    mark: {\n      type: [String, Object],\n      default: () => void 0\n    }\n  },\n\n  setup(props) {\n    const ns = useNamespace(\"slider\");\n    const label = computed(() => {\n      return typeof props.mark === \"string\" ? props.mark : props.mark.label;\n    });\n    return {\n      ns,\n      label\n    };\n  },\n\n  render() {\n    var _a;\n\n    return h(\"div\", {\n      class: this.ns.e(\"marks-text\"),\n      style: (_a = this.mark) == null ? void 0 : _a.style\n    }, this.label);\n  }\n\n});\n\nvar SliderMarker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/slider/src/marker.vue\"]]);\n\nexport { SliderMarker as default };","map":{"version":3,"mappings":";;;;;AAMA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,YADuB;AAE7BC,OAAO;AACLC,QAAM;AACJC,YAAM,CAACC,MAAD,EAASC,MAAT,CADF;AAEJC,eAAS,MAAM;AAFX;AADD,GAFsB;;AAQ7BC,QAAMN,KAAN,EAAa;AACL,eAAKO,aAAa,QAAb,CAAL;AACA,kBAAQC,SAAS,MAAM;AAC3B,aAAO,OAAOR,KAAM,KAAb,KAAsB,QAAtB,GAAiCA,KAAM,KAAvC,GAA8CA,MAAMC,IAAN,CAAWQ,KAAhE;AACD,KAFa,CAAR;AAIC;AACLC,QADK;AAELD;AAFK;AAIT,GAlB6B;;AAmB7BE,QAAS;AACP;;AAEE,WACSC,SAAQ;AACfC,aAAO,KAAKH,EAAL,CAAWI,CAAX,CAAW,YAAX,CADQ;AAEjBC,aAEF;AAJmB,KAAR,EAKb,UALa,CADT;AAOL;;AA7B8B,EAA/B","names":["_sfc_main","defineComponent","name","props","mark","type","String","Object","default","setup","useNamespace","computed","label","ns","render","h","class","e","style"],"sources":["../../../../../../packages/components/slider/src/marker.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { computed, defineComponent, h } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMarker',\n  props: {\n    mark: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      default: () => undefined,\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('slider')\n    const label = computed(() => {\n      return typeof props.mark === 'string' ? props.mark : props.mark.label\n    })\n\n    return {\n      ns,\n      label,\n    }\n  },\n  render() {\n    return h(\n      'div',\n      {\n        class: this.ns.e('marks-text'),\n        style: this.mark?.style,\n      },\n      this.label\n    )\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}