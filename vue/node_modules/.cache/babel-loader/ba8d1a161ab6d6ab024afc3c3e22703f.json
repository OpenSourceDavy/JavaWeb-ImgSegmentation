{"ast":null,"code":"import { defineComponent, toRefs, computed, unref, provide, reactive, onMounted, nextTick, onBeforeUnmount, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, normalizeStyle, toDisplayString, createBlock, Fragment, renderList, createCommentVNode, Transition, withKeys, vModelText, createSlots, resolveDynamicComponent, vShow, renderSlot } from 'vue';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { CircleClose, ArrowUp } from '@element-plus/icons-vue';\nimport Option from './option.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport { useSelectStates, useSelect } from './useSelect.mjs';\nimport { selectKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { tagProps } from '../../tag/src/tag.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useFocus } from '../../../hooks/use-focus/index.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nconst COMPONENT_NAME = \"ElSelect\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption: Option,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside\n  },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: void 0\n    },\n    autocomplete: {\n      type: String,\n      default: \"off\"\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    effect: {\n      type: String,\n      default: \"light\"\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0\n    },\n    placeholder: {\n      type: String\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true\n    },\n    valueKey: {\n      type: String,\n      default: \"value\"\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: {\n      type: Boolean,\n      default: false\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported,\n    persistent: {\n      type: Boolean,\n      default: true\n    },\n    clearIcon: {\n      type: [String, Object],\n      default: CircleClose\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false\n    },\n    suffixIcon: {\n      type: [String, Object],\n      default: ArrowUp\n    },\n    tagType: { ...tagProps.type,\n      default: \"info\"\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n\n  setup(props, ctx) {\n    const nsSelect = useNamespace(\"select\");\n    const nsInput = useNamespace(\"input\");\n    const {\n      t\n    } = useLocale();\n    const states = useSelectStates(props);\n    const {\n      optionsArray,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      reference,\n      input,\n      tooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange\n    } = useSelect(props, states, ctx);\n    const {\n      focus\n    } = useFocus(reference);\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n      tagInMultiLine\n    } = toRefs(states);\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()];\n\n      const _selectSize = unref(selectSize);\n\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize));\n      }\n\n      if (props.disabled) {\n        classList.push(nsSelect.m(\"disabled\"));\n      }\n\n      return classList;\n    });\n    const selectTagsStyle = computed(() => ({\n      maxWidth: `${unref(inputWidth) - 32}px`,\n      width: \"100%\"\n    }));\n    provide(selectKey, reactive({\n      props,\n      options,\n      optionsArray,\n      cachedOptions,\n      optionsCount,\n      filteredOptionsCount,\n      hoverIndex,\n      handleOptionSelect,\n      onOptionCreate,\n      onOptionDestroy,\n      selectWrapper,\n      selected,\n      setSelected,\n      queryChange,\n      groupQueryChange\n    }));\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value = props.placeholder || t(\"el.select.placeholder\");\n\n      if (props.multiple && Array.isArray(props.modelValue) && props.modelValue.length > 0) {\n        currentPlaceholder.value = \"\";\n      }\n\n      addResizeListener(selectWrapper.value, handleResize);\n\n      if (reference.value && reference.value.$el) {\n        const sizeMap = {\n          large: 36,\n          default: 32,\n          small: 28\n        };\n        const input2 = reference.value.input;\n        states.initialInputHeight = input2.getBoundingClientRect().height || sizeMap[selectSize.value];\n      }\n\n      if (props.remote && props.multiple) {\n        resetInputHeight();\n      }\n\n      nextTick(() => {\n        if (!reference.value) return;\n\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width;\n        }\n\n        if (ctx.slots.prefix) {\n          const inputChildNodes = reference.value.$el.childNodes;\n          const input2 = Array.from(inputChildNodes).find(item => item.tagName === \"INPUT\");\n          const prefix = reference.value.$el.querySelector(`.${nsInput.e(\"prefix\")}`);\n          prefixWidth.value = Math.max(prefix.getBoundingClientRect().width + 5, 30);\n\n          if (states.prefixWidth) {\n            input2.style.paddingLeft = `${Math.max(states.prefixWidth, 30)}px`;\n          }\n        }\n      });\n      setSelected();\n    });\n    onBeforeUnmount(() => {\n      removeResizeListener(selectWrapper.value, handleResize);\n    });\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, []);\n    }\n\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, \"\");\n    }\n\n    const popperPaneRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const {\n      compatTeleported\n    } = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\");\n    return {\n      tagInMultiLine,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      focus,\n      reference,\n      input,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      wrapperKls,\n      selectTagsStyle,\n      compatTeleported,\n      nsSelect\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"select-trigger\"\n};\nconst _hoisted_2 = [\"disabled\", \"autocomplete\"];\nconst _hoisted_3 = {\n  style: {\n    \"height\": \"100%\",\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_input = resolveComponent(\"el-input\");\n\n  const _component_el_option = resolveComponent(\"el-option\");\n\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectWrapper\",\n    class: normalizeClass(_ctx.wrapperKls),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"]))\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropMenuVisible,\n    \"onUpdate:visible\": _cache[23] || (_cache[23] = $event => _ctx.dropMenuVisible = $event),\n    placement: \"bottom-start\",\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    pure: \"\",\n    trigger: \"click\",\n    transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    persistent: _ctx.persistent,\n    onShow: _ctx.handleMenuEnter\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", _hoisted_1, [_ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"tags\",\n      class: normalizeClass(_ctx.nsSelect.e(\"tags\")),\n      style: normalizeStyle(_ctx.selectTagsStyle)\n    }, [_ctx.collapseTags && _ctx.selected.length ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      class: normalizeClass([_ctx.nsSelect.b(\"tags-wrapper\"), {\n        \"has-prefix\": _ctx.prefixWidth && _ctx.selected.length\n      }])\n    }, [createVNode(_component_el_tag, {\n      closable: !_ctx.selectDisabled && !_ctx.selected[0].isDisabled,\n      size: _ctx.collapseTagSize,\n      hit: _ctx.selected[0].hitState,\n      type: _ctx.tagType,\n      \"disable-transitions\": \"\",\n      onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.selected[0]))\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n        style: normalizeStyle({\n          maxWidth: _ctx.inputWidth - 123 + \"px\"\n        })\n      }, toDisplayString(_ctx.selected[0].currentLabel), 7)]),\n      _: 1\n    }, 8, [\"closable\", \"size\", \"hit\", \"type\"]), _ctx.selected.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n      key: 0,\n      closable: false,\n      size: _ctx.collapseTagSize,\n      type: _ctx.tagType,\n      \"disable-transitions\": \"\"\n    }, {\n      default: withCtx(() => [_ctx.collapseTagsTooltip ? (openBlock(), createBlock(_component_el_tooltip, {\n        key: 0,\n        disabled: _ctx.dropMenuVisible,\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        effect: _ctx.effect,\n        placement: \"bottom\",\n        teleported: false\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n        }, \"+ \" + toDisplayString(_ctx.selected.length - 1), 3)]),\n        content: withCtx(() => [createElementVNode(\"div\", {\n          class: normalizeClass(_ctx.nsSelect.e(\"collapse-tags\"))\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.selected, (item, idx) => {\n          return openBlock(), createElementBlock(\"div\", {\n            key: idx,\n            class: normalizeClass(_ctx.nsSelect.e(\"collapse-tag\"))\n          }, [(openBlock(), createBlock(_component_el_tag, {\n            key: _ctx.getValueKey(item),\n            class: \"in-tooltip\",\n            closable: !_ctx.selectDisabled && !item.isDisabled,\n            size: _ctx.collapseTagSize,\n            hit: item.hitState,\n            type: _ctx.tagType,\n            \"disable-transitions\": \"\",\n            style: {\n              margin: \"2px\"\n            },\n            onClose: $event => _ctx.deleteTag($event, item)\n          }, {\n            default: withCtx(() => [createElementVNode(\"span\", {\n              class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n              style: normalizeStyle({\n                maxWidth: _ctx.inputWidth - 75 + \"px\"\n              })\n            }, toDisplayString(item.currentLabel), 7)]),\n            _: 2\n          }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]))], 2);\n        }), 128))], 2)]),\n        _: 1\n      }, 8, [\"disabled\", \"effect\"])) : (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n      }, \"+ \" + toDisplayString(_ctx.selected.length - 1), 3))]),\n      _: 1\n    }, 8, [\"size\", \"type\"])) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" <div> \"), !_ctx.collapseTags ? (openBlock(), createBlock(Transition, {\n      key: 1,\n      onAfterLeave: _ctx.resetInputHeight\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        class: normalizeClass([_ctx.nsSelect.b(\"tags-wrapper\"), {\n          \"has-prefix\": _ctx.prefixWidth && _ctx.selected.length\n        }])\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.selected, item => {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(item),\n          closable: !_ctx.selectDisabled && !item.isDisabled,\n          size: _ctx.collapseTagSize,\n          hit: item.hitState,\n          type: _ctx.tagType,\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, item)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: _ctx.inputWidth - 75 + \"px\"\n            })\n          }, toDisplayString(item.currentLabel), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]);\n      }), 128))], 2)]),\n      _: 1\n    }, 8, [\"onAfterLeave\"])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" </div> \"), _ctx.filterable ? withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 2,\n      ref: \"input\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.query = $event),\n      type: \"text\",\n      class: normalizeClass([_ctx.nsSelect.e(\"input\"), _ctx.nsSelect.is(_ctx.selectSize)]),\n      disabled: _ctx.selectDisabled,\n      autocomplete: _ctx.autocomplete,\n      style: normalizeStyle({\n        marginLeft: _ctx.prefixWidth && !_ctx.selected.length || _ctx.tagInMultiLine ? `${_ctx.prefixWidth}px` : \"\",\n        flexGrow: 1,\n        width: `${_ctx.inputLength / (_ctx.inputWidth - 32)}%`,\n        maxWidth: `${_ctx.inputWidth - 42}px`\n      }),\n      onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onBlur: _cache[3] || (_cache[3] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n      onKeyup: _cache[4] || (_cache[4] = (...args) => _ctx.managePlaceholder && _ctx.managePlaceholder(...args)),\n      onKeydown: [_cache[5] || (_cache[5] = (...args) => _ctx.resetInputState && _ctx.resetInputState(...args)), _cache[6] || (_cache[6] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"prevent\"]), [\"down\"])), _cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.visible = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.selectOption && _ctx.selectOption(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys((...args) => _ctx.deletePrevTag && _ctx.deletePrevTag(...args), [\"delete\"])), _cache[11] || (_cache[11] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n      onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onInput: _cache[15] || (_cache[15] = (...args) => _ctx.debouncedQueryChange && _ctx.debouncedQueryChange(...args))\n    }, null, 46, _hoisted_2)), [[vModelText, _ctx.query]]) : createCommentVNode(\"v-if\", true)], 6)) : createCommentVNode(\"v-if\", true), createVNode(_component_el_input, {\n      id: _ctx.id,\n      ref: \"reference\",\n      modelValue: _ctx.selectedLabel,\n      \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.selectedLabel = $event),\n      type: \"text\",\n      placeholder: _ctx.currentPlaceholder,\n      name: _ctx.name,\n      autocomplete: _ctx.autocomplete,\n      size: _ctx.selectSize,\n      disabled: _ctx.selectDisabled,\n      readonly: _ctx.readonly,\n      \"validate-event\": false,\n      class: normalizeClass([_ctx.nsSelect.is(\"focus\", _ctx.visible)]),\n      tabindex: _ctx.multiple && _ctx.filterable ? -1 : void 0,\n      onFocus: _ctx.handleFocus,\n      onBlur: _ctx.handleBlur,\n      onInput: _ctx.debouncedOnInputChange,\n      onPaste: _ctx.debouncedOnInputChange,\n      onCompositionstart: _ctx.handleComposition,\n      onCompositionupdate: _ctx.handleComposition,\n      onCompositionend: _ctx.handleComposition,\n      onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"stop\", \"prevent\"]), [\"up\"])), withKeys(withModifiers(_ctx.selectOption, [\"stop\", \"prevent\"]), [\"enter\"]), _cache[19] || (_cache[19] = withKeys(withModifiers($event => _ctx.visible = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[20] || (_cache[20] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n      onMouseenter: _cache[21] || (_cache[21] = $event => _ctx.inputHovering = true),\n      onMouseleave: _cache[22] || (_cache[22] = $event => _ctx.inputHovering = false)\n    }, createSlots({\n      suffix: withCtx(() => [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClose]]) : createCommentVNode(\"v-if\", true), _ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\")]),\n        onClick: _ctx.handleClearClick\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 2\n    }, [_ctx.$slots.prefix ? {\n      name: \"prefix\",\n      fn: withCtx(() => [createElementVNode(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"prefix\")])])\n    } : void 0]), 1032, [\"id\", \"modelValue\", \"placeholder\", \"name\", \"autocomplete\", \"size\", \"disabled\", \"readonly\", \"class\", \"tabindex\", \"onFocus\", \"onBlur\", \"onInput\", \"onPaste\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\"])])]),\n    content: withCtx(() => [createVNode(_component_el_select_menu, null, {\n      default: withCtx(() => [withDirectives(createVNode(_component_el_scrollbar, {\n        ref: \"scrollbar\",\n        tag: \"ul\",\n        \"wrap-class\": _ctx.nsSelect.be(\"dropdown\", \"wrap\"),\n        \"view-class\": _ctx.nsSelect.be(\"dropdown\", \"list\"),\n        class: normalizeClass([_ctx.nsSelect.is(\"empty\", !_ctx.allowCreate && Boolean(_ctx.query) && _ctx.filteredOptionsCount === 0)])\n      }, {\n        default: withCtx(() => [_ctx.showNewOption ? (openBlock(), createBlock(_component_el_option, {\n          key: 0,\n          value: _ctx.query,\n          created: true\n        }, null, 8, [\"value\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"wrap-class\", \"view-class\", \"class\"]), [[vShow, _ctx.options.size > 0 && !_ctx.loading]]), _ctx.emptyText && (!_ctx.allowCreate || _ctx.loading || _ctx.allowCreate && _ctx.options.size === 0) ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [_ctx.$slots.empty ? renderSlot(_ctx.$slots, \"empty\", {\n        key: 0\n      }) : (openBlock(), createElementBlock(\"p\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n      }, toDisplayString(_ctx.emptyText), 3))], 2112)) : createCommentVNode(\"v-if\", true)]),\n      _: 3\n    })]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"effect\", \"transition\", \"persistent\", \"onShow\"])], 2)), [[_directive_click_outside, _ctx.handleClose, _ctx.popperPaneRef]]);\n}\n\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/select.vue\"]]);\n\nexport { Select as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","componentName","components","ElInput","ElSelectMenu","ElOption","ElTag","ElScrollbar","ElTooltip","ElIcon","directives","ClickOutside","props","id","modelValue","type","Array","String","Number","Boolean","Object","default","autocomplete","automaticDropdown","size","validator","effect","disabled","clearable","filterable","allowCreate","loading","popperClass","remote","loadingText","noMatchText","noDataText","remoteMethod","filterMethod","multiple","multipleLimit","placeholder","defaultFirstOption","reserveKeyword","valueKey","collapseTags","collapseTagsTooltip","popperAppendToBody","teleported","useTooltipContentProps","persistent","clearIcon","fitInputWidth","suffixIcon","tagType","tagProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","ctx","useNamespace","t","useLocale","useSelectStates","optionsArray","selectSize","readonly","handleResize","collapseTagSize","debouncedOnInputChange","debouncedQueryChange","deletePrevTag","deleteTag","deleteSelected","handleOptionSelect","scrollToOption","setSelected","resetInputHeight","managePlaceholder","showClose","selectDisabled","iconComponent","iconReverse","showNewOption","emptyText","toggleLastOptionHitState","resetInputState","handleComposition","onOptionCreate","onOptionDestroy","handleMenuEnter","handleFocus","blur","handleBlur","handleClearClick","handleClose","toggleMenu","selectOption","getValueKey","navigateOptions","dropMenuVisible","reference","input","tooltipRef","tags","selectWrapper","scrollbar","queryChange","groupQueryChange","useSelect","states","focus","useFocus","inputWidth","selected","inputLength","filteredOptionsCount","visible","softFocus","selectedLabel","hoverIndex","query","inputHovering","currentPlaceholder","menuVisibleOnFocus","isOnComposition","isSilentBlur","options","cachedOptions","optionsCount","prefixWidth","tagInMultiLine","toRefs","computed","classList","nsSelect","unref","_selectSize","push","m","maxWidth","width","provide","selectKey","reactive","onMounted","cachedPlaceHolder","isArray","length","value","addResizeListener","$el","sizeMap","large","small","initialInputHeight","input2","height","nextTick","getBoundingClientRect","slots","prefix","childNodes","inputChildNodes","find","item","querySelector","e","Math","max","style","paddingLeft","onBeforeUnmount","removeResizeListener","compatTeleported","popperPaneRef","wrapperKls","selectTagsStyle","_withDirectives","ref","class","onClick","_cache","placement","pure","trigger","transition","onShow","_createElementVNode","key","_normalizeClass","_ctx","_component_el_tag","closable","hit","onClose","_toDisplayString","content","_openBlock","margin","_createCommentVNode","onAfterLeave","_normalizeStyle","flexGrow","onFocus","onBlur","onKeyup","onKeydown","onCompositionstart","onCompositionupdate","onCompositionend","onInput","_createVNode","tabindex","onPaste","_withKeys","onMouseenter","onMouseleave","_createSlots","suffix","fn","tag","be","created","_renderSlot"],"sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectWrapper\"\n    v-click-outside:[popperPaneRef]=\"handleClose\"\n    :class=\"wrapperKls\"\n    @click.stop=\"toggleMenu\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      v-model:visible=\"dropMenuVisible\"\n      placement=\"bottom-start\"\n      :teleported=\"compatTeleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      @show=\"handleMenuEnter\"\n    >\n      <template #default>\n        <div class=\"select-trigger\">\n          <div\n            v-if=\"multiple\"\n            ref=\"tags\"\n            :class=\"nsSelect.e('tags')\"\n            :style=\"selectTagsStyle\"\n          >\n            <span\n              v-if=\"collapseTags && selected.length\"\n              :class=\"[\n                nsSelect.b('tags-wrapper'),\n                { 'has-prefix': prefixWidth && selected.length },\n              ]\"\n            >\n              <el-tag\n                :closable=\"!selectDisabled && !selected[0].isDisabled\"\n                :size=\"collapseTagSize\"\n                :hit=\"selected[0].hitState\"\n                :type=\"tagType\"\n                disable-transitions\n                @close=\"deleteTag($event, selected[0])\"\n              >\n                <span\n                  :class=\"nsSelect.e('tags-text')\"\n                  :style=\"{ maxWidth: inputWidth - 123 + 'px' }\"\n                  >{{ selected[0].currentLabel }}</span\n                >\n              </el-tag>\n              <el-tag\n                v-if=\"selected.length > 1\"\n                :closable=\"false\"\n                :size=\"collapseTagSize\"\n                :type=\"tagType\"\n                disable-transitions\n              >\n                <el-tooltip\n                  v-if=\"collapseTagsTooltip\"\n                  :disabled=\"dropMenuVisible\"\n                  :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                  :effect=\"effect\"\n                  placement=\"bottom\"\n                  :teleported=\"false\"\n                >\n                  <template #default>\n                    <span :class=\"nsSelect.e('tags-text')\"\n                      >+ {{ selected.length - 1 }}</span\n                    >\n                  </template>\n                  <template #content>\n                    <div :class=\"nsSelect.e('collapse-tags')\">\n                      <div\n                        v-for=\"(item, idx) in selected\"\n                        :key=\"idx\"\n                        :class=\"nsSelect.e('collapse-tag')\"\n                      >\n                        <el-tag\n                          :key=\"getValueKey(item)\"\n                          class=\"in-tooltip\"\n                          :closable=\"!selectDisabled && !item.isDisabled\"\n                          :size=\"collapseTagSize\"\n                          :hit=\"item.hitState\"\n                          :type=\"tagType\"\n                          disable-transitions\n                          :style=\"{ margin: '2px' }\"\n                          @close=\"deleteTag($event, item)\"\n                        >\n                          <span\n                            :class=\"nsSelect.e('tags-text')\"\n                            :style=\"{\n                              maxWidth: inputWidth - 75 + 'px',\n                            }\"\n                            >{{ item.currentLabel }}</span\n                          >\n                        </el-tag>\n                      </div>\n                    </div>\n                  </template>\n                </el-tooltip>\n                <span v-else :class=\"nsSelect.e('tags-text')\"\n                  >+ {{ selected.length - 1 }}</span\n                >\n              </el-tag>\n            </span>\n            <!-- <div> -->\n            <transition v-if=\"!collapseTags\" @after-leave=\"resetInputHeight\">\n              <span\n                :class=\"[\n                  nsSelect.b('tags-wrapper'),\n                  { 'has-prefix': prefixWidth && selected.length },\n                ]\"\n              >\n                <el-tag\n                  v-for=\"item in selected\"\n                  :key=\"getValueKey(item)\"\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :hit=\"item.hitState\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span\n                    :class=\"nsSelect.e('tags-text')\"\n                    :style=\"{ maxWidth: inputWidth - 75 + 'px' }\"\n                    >{{ item.currentLabel }}</span\n                  >\n                </el-tag>\n              </span>\n            </transition>\n            <!-- </div> -->\n            <input\n              v-if=\"filterable\"\n              ref=\"input\"\n              v-model=\"query\"\n              type=\"text\"\n              :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n              :disabled=\"selectDisabled\"\n              :autocomplete=\"autocomplete\"\n              :style=\"{\n                marginLeft:\n                  (prefixWidth && !selected.length) || tagInMultiLine\n                    ? `${prefixWidth}px`\n                    : '',\n                flexGrow: 1,\n                width: `${inputLength / (inputWidth - 32)}%`,\n                maxWidth: `${inputWidth - 42}px`,\n              }\"\n              @focus=\"handleFocus\"\n              @blur=\"handleBlur\"\n              @keyup=\"managePlaceholder\"\n              @keydown=\"resetInputState\"\n              @keydown.down.prevent=\"navigateOptions('next')\"\n              @keydown.up.prevent=\"navigateOptions('prev')\"\n              @keydown.esc.stop.prevent=\"visible = false\"\n              @keydown.enter.stop.prevent=\"selectOption\"\n              @keydown.delete=\"deletePrevTag\"\n              @keydown.tab=\"visible = false\"\n              @compositionstart=\"handleComposition\"\n              @compositionupdate=\"handleComposition\"\n              @compositionend=\"handleComposition\"\n              @input=\"debouncedQueryChange\"\n            />\n          </div>\n          <el-input\n            :id=\"id\"\n            ref=\"reference\"\n            v-model=\"selectedLabel\"\n            type=\"text\"\n            :placeholder=\"currentPlaceholder\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :size=\"selectSize\"\n            :disabled=\"selectDisabled\"\n            :readonly=\"readonly\"\n            :validate-event=\"false\"\n            :class=\"[nsSelect.is('focus', visible)]\"\n            :tabindex=\"multiple && filterable ? -1 : undefined\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            @input=\"debouncedOnInputChange\"\n            @paste=\"debouncedOnInputChange\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @keydown.down.stop.prevent=\"navigateOptions('next')\"\n            @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n            @keydown.enter.stop.prevent=\"selectOption\"\n            @keydown.esc.stop.prevent=\"visible = false\"\n            @keydown.tab=\"visible = false\"\n            @mouseenter=\"inputHovering = true\"\n            @mouseleave=\"inputHovering = false\"\n          >\n            <template v-if=\"$slots.prefix\" #prefix>\n              <div\n                style=\"\n                  height: 100%;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                \"\n              >\n                <slot name=\"prefix\" />\n              </div>\n            </template>\n            <template #suffix>\n              <el-icon\n                v-if=\"iconComponent\"\n                v-show=\"!showClose\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <el-icon\n                v-if=\"showClose && clearIcon\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon')]\"\n                @click=\"handleClearClick\"\n              >\n                <component :is=\"clearIcon\" />\n              </el-icon>\n            </template>\n          </el-input>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu>\n          <el-scrollbar\n            v-show=\"options.size > 0 && !loading\"\n            ref=\"scrollbar\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[\n              nsSelect.is(\n                'empty',\n                !allowCreate && Boolean(query) && filteredOptionsCount === 0\n              ),\n            ]\"\n          >\n            <el-option v-if=\"showNewOption\" :value=\"query\" :created=\"true\" />\n            <slot />\n          </el-scrollbar>\n          <template\n            v-if=\"\n              emptyText &&\n              (!allowCreate || loading || (allowCreate && options.size === 0))\n            \"\n          >\n            <slot v-if=\"$slots.empty\" name=\"empty\" />\n            <p v-else :class=\"nsSelect.be('dropdown', 'empty')\">\n              {{ emptyText }}\n            </p>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  toRefs,\n  unref,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useFocus, useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag, { tagProps } from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  addResizeListener,\n  isValidComponentSize,\n  removeResizeListener,\n} from '@element-plus/utils'\nimport { ArrowUp, CircleClose } from '@element-plus/icons-vue'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect, useSelectStates } from './useSelect'\nimport { selectKey } from './token'\n\nimport type { Component, PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { SelectContext } from './token'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: undefined,\n    },\n    autocomplete: {\n      type: String,\n      default: 'off',\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    effect: {\n      type: String as PropType<'light' | 'dark' | string>,\n      default: 'light',\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0,\n    },\n    placeholder: {\n      type: String,\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true,\n    },\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    collapseTags: Boolean,\n    collapseTagsTooltip: {\n      type: Boolean,\n      default: false,\n    },\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n    persistent: {\n      type: Boolean,\n      default: true,\n    },\n    clearIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: CircleClose,\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false,\n    },\n    suffixIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: ArrowUp,\n    },\n    // eslint-disable-next-line vue/require-prop-types\n    tagType: { ...tagProps.type, default: 'info' },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, ctx) {\n    const nsSelect = useNamespace('select')\n    const nsInput = useNamespace('input')\n    const { t } = useLocale()\n    const states = useSelectStates(props)\n    const {\n      optionsArray,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n\n      reference,\n      input,\n      tooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange,\n    } = useSelect(props, states, ctx)\n\n    const { focus } = useFocus(reference)\n\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n      tagInMultiLine,\n    } = toRefs(states)\n\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()]\n      const _selectSize = unref(selectSize)\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize))\n      }\n      if (props.disabled) {\n        classList.push(nsSelect.m('disabled'))\n      }\n      return classList\n    })\n\n    const selectTagsStyle = computed(() => ({\n      maxWidth: `${unref(inputWidth) - 32}px`,\n      width: '100%',\n    }))\n\n    provide(\n      selectKey,\n      reactive({\n        props,\n        options,\n        optionsArray,\n        cachedOptions,\n        optionsCount,\n        filteredOptionsCount,\n        hoverIndex,\n        handleOptionSelect,\n        onOptionCreate,\n        onOptionDestroy,\n        selectWrapper,\n        selected,\n        setSelected,\n        queryChange,\n        groupQueryChange,\n      }) as unknown as SelectContext\n    )\n\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value =\n        props.placeholder || t('el.select.placeholder')\n      if (\n        props.multiple &&\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0\n      ) {\n        currentPlaceholder.value = ''\n      }\n      addResizeListener(selectWrapper.value as any, handleResize)\n      if (reference.value && reference.value.$el) {\n        const sizeMap = {\n          large: 36,\n          default: 32,\n          small: 28,\n        }\n        const input = reference.value.input as HTMLInputElement\n        states.initialInputHeight =\n          input.getBoundingClientRect().height || sizeMap[selectSize.value]\n      }\n      if (props.remote && props.multiple) {\n        resetInputHeight()\n      }\n      nextTick(() => {\n        if (!reference.value) return\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width\n        }\n        if (ctx.slots.prefix) {\n          const inputChildNodes = reference.value.$el.childNodes\n          const input = (Array.from(inputChildNodes) as HTMLElement[]).find(\n            (item) => item.tagName === 'INPUT'\n          )\n          const prefix = reference.value.$el.querySelector(\n            `.${nsInput.e('prefix')}`\n          )\n          prefixWidth.value = Math.max(\n            prefix.getBoundingClientRect().width + 5,\n            30\n          )\n          if (states.prefixWidth) {\n            input.style.paddingLeft = `${Math.max(states.prefixWidth, 30)}px`\n          }\n        }\n      })\n      setSelected()\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(selectWrapper.value as any, handleResize)\n    })\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, [])\n    }\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n    }\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n\n    return {\n      tagInMultiLine,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      focus,\n\n      reference,\n      input,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n\n      wrapperKls,\n      selectTagsStyle,\n      compatTeleported,\n      nsSelect,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}