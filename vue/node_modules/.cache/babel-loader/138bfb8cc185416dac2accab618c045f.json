{"ast":null,"code":"let history = [];\n\nfunction Point(x, y, type) {\n  this.x = x;\n  this.y = y;\n  this.type = type; // 左击 1  右击 3\n}\n\nfunction windowToCanvas(e, mycanvas) {\n  // 返回元素的大小以及位置\n  var rect = mycanvas.getBoundingClientRect(); // rect 的宽度会加上 canvas 的 border 会影响精度\n\n  return new Point(e.clientX - rect.left * (mycanvas.width / rect.width), e.clientY - rect.top * (mycanvas.height / rect.height), e.which);\n}\n\nfunction showLastHistory(ctx, history) {\n  ctx.putImageData(history[history.length - 1].data, 0, 0);\n}\n\nfunction addHistoy(history, ctx, mycanvas) {\n  history.push({\n    data: ctx.getImageData(0, 0, mycanvas.width, mycanvas.height)\n  });\n}\n\nexport default {\n  name: \"Canvas\",\n\n  data() {\n    return {\n      ctx: null,\n      tool: '',\n      tempPos: [],\n      posArray: [],\n      tools: [{\n        value: \"1\",\n        label: \"矩形\"\n      }, {\n        value: \"2\",\n        label: \"圆形\"\n      }, {\n        value: \"3\",\n        label: \"直线\"\n      }, {\n        value: \"4\",\n        label: \"任意多边形\"\n      }, {\n        value: \"5\",\n        label: \"点\"\n      }]\n    };\n  },\n\n  mounted() {\n    //this.init();\n    let mycanvas = this.$refs.cont;\n    mycanvas.width = window.screen.width * 0.5;\n    mycanvas.height = window.screen.height * 0.75;\n    this.tool = '1';\n    this.drawer();\n  },\n\n  methods: {\n    handleEvent(e) {\n      //console.log(e)\n      this.drawer();\n    },\n\n    init() {\n      this.ctx = this.$refs.cont.getContext('2d');\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, 0);\n      this.ctx.lineTo(300, 100);\n      this.ctx.strokeStyle = 'red';\n      this.ctx.lineWidth = '2';\n      this.ctx.stroke();\n      this.ctx.closePath();\n    },\n\n    // 绘制矩形\n    drawerRect(ctx, left, top, w, h) {\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.lineWidth = '0.5'; // 画笔粗细\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(left, top, w, h);\n      ctx.stroke();\n      ctx.restore();\n      return {\n        data: [left, top, w, h]\n      };\n    },\n\n    // 绘制圆\n    drawerCircle(ctx, x, y, r) {\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.lineWidth = '0.5'; // 画笔粗细\n\n      ctx.beginPath(); // 开始路径\n\n      ctx.arc(x, y, r, 0, Math.PI * 2, true); // 参数依次为圆心坐标x,y，半径，开始结束角，绘制方向顺时针\n\n      ctx.stroke();\n      ctx.restore();\n      return {\n        data: [x, y, r]\n      };\n    },\n\n    // 绘制直线\n    drawerLine(ctx, x, y, z, n) {\n      console.log(\"各点坐标\");\n      console.log(x);\n      console.log(y);\n      console.log(z);\n      console.log(n);\n      ctx.save();\n      ctx.fillStyle = '#f00000';\n      ctx.lineWidth = '0.5'; // 画笔粗细\n\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(z, n);\n      ctx.stroke();\n      ctx.restore();\n      return {\n        data: [x, y, z, n]\n      };\n    },\n\n    // 绘制点\n    drawerPoint(ctx, x, y) {\n      ctx.save();\n      ctx.fillStyle = '#f00000';\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.beginPath();\n      ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n      this.posArray.push({\n        data: [x, y]\n      });\n    },\n\n    // 绘制的方法及事件，根据当前选择的工具进行不同的方法绘制图形\n    drawer() {\n      let mycanvas = this.$refs.cont;\n      console.log(mycanvas);\n      let ctx = mycanvas.getContext('2d');\n      console.log(ctx);\n      let that = this;\n\n      if (this.tool === '1') {\n        console.log(this.tool);\n        mycanvas.onclick = null;\n        console.log(mycanvas.onmousedown);\n\n        mycanvas.onmousedown = function (e) {\n          console.log(\"鼠标点击\");\n          console.log(e);\n          that.tempPos = [];\n          e.preventDefault();\n          let mousedown = windowToCanvas(e, mycanvas);\n\n          mycanvas.onmousemove = function (e) {\n            console.log(\"点击事件\");\n            console.log(e);\n            e.preventDefault();\n            showLastHistory(ctx, history); // 每次绘制先清除上一次\n\n            let point = windowToCanvas(e, mycanvas);\n            let w = Math.abs(point.x - mousedown.x);\n            let h = Math.abs(point.y - mousedown.y);\n            let left = point.x > mousedown.x ? mousedown.x : point.x;\n            let top = point.y > mousedown.y ? mousedown.y : point.y;\n            let pos = that.drawerRect(ctx, left, top, w, h);\n            that.tempPos.push(pos);\n          };\n\n          mycanvas.onmouseup = function (e) {\n            e.preventDefault();\n            addHistoy(history, ctx, mycanvas); // 保存上一次数据\n\n            mycanvas.onmousemove = null;\n            that.posArray.push(that.tempPos[that.tempPos.length - 1]);\n          };\n        };\n\n        addHistoy(history, ctx, mycanvas); // 添加一张默认的数据\n      } else if (this.tool === '2') {\n        // 清除事件\n        mycanvas.onmousedown = null;\n        mycanvas.onmousemove = null;\n        mycanvas.onmouseup = null;\n        mycanvas.onclick = null;\n\n        mycanvas.onmousedown = function (e) {\n          that.tempPos = [];\n          e.preventDefault();\n          let mousedown = windowToCanvas(e, mycanvas);\n\n          mycanvas.onmousemove = function (e) {\n            e.preventDefault();\n            showLastHistory(ctx, history); // 每次绘制先清除上一次\n\n            let point = windowToCanvas(e, mycanvas);\n            let rx = (point.x - mousedown.x) / 2;\n            let ry = (point.y - mousedown.y) / 2;\n            let r = Math.sqrt(rx * rx + ry * ry);\n            let pos = that.drawerCircle(ctx, rx + mousedown.x, ry + mousedown.y, r);\n            that.tempPos.push(pos);\n          };\n\n          mycanvas.onmouseup = function (e) {\n            e.preventDefault();\n            addHistoy(history, ctx, mycanvas); // 保存上一次数据\n\n            mycanvas.onmousemove = null;\n            that.posArray.push(that.tempPos[that.tempPos.length - 1]);\n          };\n        };\n\n        addHistoy(history, ctx, mycanvas); // 添加一张默认的数据\n      } else if (this.tool === '3') {\n        mycanvas.onmousedown = null;\n        mycanvas.onmousemove = null;\n        mycanvas.onmouseup = null;\n        mycanvas.onclick = null;\n\n        mycanvas.onmousedown = function (e) {\n          that.tempPos = [];\n          e.preventDefault();\n          let mousedown = windowToCanvas(e, mycanvas);\n\n          mycanvas.onmousemove = function (e) {\n            e.preventDefault();\n            showLastHistory(ctx, history); // 每次绘制先清除上一次\n\n            let point = windowToCanvas(e, mycanvas);\n            let pos = that.drawerLine(ctx, mousedown.x, mousedown.y, point.x, point.y);\n            console.log(mousedown.x, mousedown.y, point.x, point.y);\n            that.tempPos.push(pos);\n            console.log(that.tempPos);\n          };\n\n          mycanvas.onmouseup = function (e) {\n            e.preventDefault();\n            addHistoy(history, ctx, mycanvas); // 保存上一次数据\n\n            mycanvas.onmousemove = null;\n            that.posArray.push(that.tempPos[that.tempPos.length - 1]);\n          };\n        };\n\n        addHistoy(history, ctx, mycanvas); // 添加一张默认的数据\n      } else if (this.tool === '4') {} else if (this.tool === '5') {\n        mycanvas.onmousedown = null;\n        mycanvas.onmousemove = null;\n        mycanvas.onmouseup = null;\n\n        mycanvas.onclick = function (event) {\n          let rect = mycanvas.getBoundingClientRect();\n          let CanvasPos = {\n            x: event.clientX - rect.left * (mycanvas.width / rect.width),\n            y: event.clientY - rect.top * (mycanvas.height / rect.height)\n          };\n          that.drawerPoint(ctx, CanvasPos.x, CanvasPos.y);\n        };\n      }\n    },\n\n    // 重置\n    resetMap() {\n      // 标注的信息都放在这个数组中\n      this.posArray = [];\n      history = [history[0]];\n      let mycanvas = this.$refs.cont;\n      let ctx = mycanvas.getContext('2d');\n      ctx.clearRect(0, 0, mycanvas.width, mycanvas.height);\n      addHistoy(history, ctx, mycanvas);\n    },\n\n    // 取消上一步操作\n    cancel() {\n      if (history.length > 1) {\n        console.log(\"取消上一步\");\n        console.log(history);\n        this.posArray.pop();\n        history.pop();\n        let mycanvas = this.$refs.cont;\n        let ctx = mycanvas.getContext('2d');\n        showLastHistory(ctx, history);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["history","Point","x","y","type","windowToCanvas","e","mycanvas","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","which","showLastHistory","ctx","putImageData","length","data","addHistoy","push","getImageData","name","tool","tempPos","posArray","tools","value","label","mounted","$refs","cont","window","screen","drawer","methods","handleEvent","init","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","drawerRect","w","h","save","restore","drawerCircle","r","arc","Math","PI","drawerLine","z","n","console","log","fillStyle","drawerPoint","fill","that","onclick","onmousedown","preventDefault","mousedown","onmousemove","point","abs","pos","onmouseup","rx","ry","sqrt","event","CanvasPos","resetMap","clearRect","cancel","pop"],"sourceRoot":"","sources":["G:\\springboot+vue\\crm_vue\\vue\\src\\views\\Canvas.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--canvas居中：display设置为block-->\r\n    <canvas ref=\"cont\" style=\"border: 2px solid #aaaaaa;display: block;\"\r\n      @click=\"handleEvent\"\r\n    >\r\n    </canvas>\r\n  </div>\r\n  <div style=\"margin: 10px 0px;display: block\">\r\n    <el-button type=\"primary\" style=\"margin-left: 5px;text-align:right;\" @click=\"cancel\">撤销</el-button>\r\n    <el-button type=\"primary\" style=\"margin-left: 5px;text-align:right;\" @click=\"resetMap\">清空</el-button>\r\n    <span>选择绘制图案：</span>\r\n    <el-select v-model=\"tool\" clearable\r\n               size=\"small\">\r\n      <el-option\r\n          v-for=\"item in tools\"\r\n          :key=\"item.value\"\r\n          :label=\"item.label\"\r\n          :value=\"item.value\">\r\n      </el-option>\r\n    </el-select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nlet history = []\r\nfunction Point (x, y, type) {\r\n  this.x = x\r\n  this.y = y\r\n  this.type = type // 左击 1  右击 3\r\n}\r\nfunction windowToCanvas (e, mycanvas) {\r\n  // 返回元素的大小以及位置\r\n  var rect = mycanvas.getBoundingClientRect()\r\n  // rect 的宽度会加上 canvas 的 border 会影响精度\r\n  return new Point(e.clientX - rect.left * (mycanvas.width / rect.width),\r\n      e.clientY - rect.top * (mycanvas.height / rect.height), e.which)\r\n}\r\nfunction showLastHistory (ctx, history) {\r\n  ctx.putImageData(history[history.length -1].data, 0, 0)\r\n}\r\nfunction addHistoy (history, ctx, mycanvas) {\r\n  history.push({\r\n    data: ctx.getImageData(0, 0, mycanvas.width, mycanvas.height)\r\n  })\r\n}\r\nexport default {\r\n  name: \"Canvas\",\r\n  data(){\r\n    return{\r\n      ctx:null,\r\n      tool:'',\r\n      tempPos:[],\r\n      posArray:[],\r\n      tools:[\r\n        {value:\"1\", label:\"矩形\"},\r\n        {value:\"2\", label:\"圆形\"},\r\n        {value:\"3\", label:\"直线\"},\r\n        {value:\"4\", label:\"任意多边形\"},\r\n        {value:\"5\", label:\"点\"},\r\n      ],\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    //this.init();\r\n    let mycanvas = this.$refs.cont\r\n    mycanvas.width = (window.screen.width)*0.5\r\n    mycanvas.height = (window.screen.height)*0.75\r\n    this.tool = '1';\r\n    this.drawer();\r\n  },\r\n\r\n  methods:{\r\n\r\n    handleEvent(e){\r\n      //console.log(e)\r\n      this.drawer();\r\n    },\r\n\r\n    init(){\r\n      this.ctx = this.$refs.cont.getContext('2d');\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0,0);\r\n      this.ctx.lineTo(300,100);\r\n      this.ctx.strokeStyle = 'red'\r\n      this.ctx.lineWidth = '2'\r\n      this.ctx.stroke();\r\n      this.ctx.closePath();\r\n    },\r\n\r\n    // 绘制矩形\r\n    drawerRect (ctx, left, top, w, h) {\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.lineWidth = '0.5' // 画笔粗细\r\n      ctx.save()\r\n      ctx.beginPath()\r\n      ctx.rect(left, top, w, h)\r\n      ctx.stroke()\r\n      ctx.restore()\r\n      return {\r\n        data: [left, top, w, h]\r\n      }\r\n    },\r\n    // 绘制圆\r\n    drawerCircle (ctx, x, y, r) {\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.lineWidth = '0.5' // 画笔粗细\r\n      ctx.beginPath()// 开始路径\r\n      ctx.arc(x, y, r, 0, Math.PI * 2, true)// 参数依次为圆心坐标x,y，半径，开始结束角，绘制方向顺时针\r\n      ctx.stroke()\r\n      ctx.restore()\r\n      return {\r\n        data: [x, y, r]\r\n      }\r\n    },\r\n    // 绘制直线\r\n    drawerLine (ctx, x, y, z, n) {\r\n      console.log(\"各点坐标\")\r\n      console.log(x)\r\n      console.log(y)\r\n      console.log(z)\r\n      console.log(n)\r\n      ctx.save()\r\n      ctx.fillStyle = '#f00000'\r\n      ctx.lineWidth = '0.5' // 画笔粗细\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, y)\r\n      ctx.lineTo(z, n)\r\n      ctx.stroke()\r\n      ctx.restore()\r\n      return {\r\n        data: [x, y, z, n]\r\n      }\r\n    },\r\n    // 绘制点\r\n    drawerPoint (ctx, x, y) {\r\n      ctx.save()\r\n      ctx.fillStyle = '#f00000'\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.beginPath()\r\n      ctx.arc(x, y, 3, 0, Math.PI * 2, true)\r\n      ctx.closePath()\r\n      ctx.fill()\r\n      ctx.restore()\r\n      this.posArray.push({data: [x, y]})\r\n    },\r\n\r\n    // 绘制的方法及事件，根据当前选择的工具进行不同的方法绘制图形\r\n    drawer () {\r\n      let mycanvas = this.$refs.cont\r\n      console.log(mycanvas)\r\n      let ctx = mycanvas.getContext('2d')\r\n      console.log(ctx)\r\n      let that = this\r\n      if (this.tool === '1') {\r\n        console.log(this.tool)\r\n        mycanvas.onclick = null\r\n        console.log(mycanvas.onmousedown)\r\n        mycanvas.onmousedown = function (e) {\r\n          console.log(\"鼠标点击\")\r\n          console.log(e)\r\n          that.tempPos = []\r\n          e.preventDefault()\r\n          let mousedown = windowToCanvas(e, mycanvas)\r\n          mycanvas.onmousemove = function (e) {\r\n            console.log(\"点击事件\")\r\n            console.log(e)\r\n            e.preventDefault()\r\n            showLastHistory(ctx, history) // 每次绘制先清除上一次\r\n            let point = windowToCanvas(e, mycanvas)\r\n            let w = Math.abs(point.x - mousedown.x)\r\n            let h = Math.abs(point.y - mousedown.y)\r\n            let left = point.x > mousedown.x ? mousedown.x : point.x\r\n            let top = point.y > mousedown.y ? mousedown.y : point.y\r\n            let pos = that.drawerRect(ctx, left, top, w, h)\r\n            that.tempPos.push(pos)\r\n          }\r\n          mycanvas.onmouseup = function (e) {\r\n            e.preventDefault()\r\n            addHistoy(history, ctx, mycanvas) // 保存上一次数据\r\n            mycanvas.onmousemove = null\r\n            that.posArray.push(that.tempPos[that.tempPos.length - 1])\r\n          }\r\n        }\r\n        addHistoy(history, ctx, mycanvas) // 添加一张默认的数据\r\n      } else if (this.tool === '2') {\r\n        // 清除事件\r\n        mycanvas.onmousedown = null\r\n        mycanvas.onmousemove = null\r\n        mycanvas.onmouseup = null\r\n        mycanvas.onclick = null\r\n        mycanvas.onmousedown = function (e) {\r\n          that.tempPos = []\r\n          e.preventDefault()\r\n          let mousedown = windowToCanvas(e, mycanvas)\r\n          mycanvas.onmousemove = function (e) {\r\n            e.preventDefault()\r\n            showLastHistory(ctx, history) // 每次绘制先清除上一次\r\n            let point = windowToCanvas(e, mycanvas)\r\n            let rx = (point.x - mousedown.x) / 2\r\n            let ry = (point.y - mousedown.y) / 2\r\n            let r = Math.sqrt(rx * rx + ry * ry)\r\n            let pos = that.drawerCircle(ctx, rx + mousedown.x, ry + mousedown.y, r)\r\n            that.tempPos.push(pos)\r\n          }\r\n          mycanvas.onmouseup = function (e) {\r\n            e.preventDefault()\r\n            addHistoy(history, ctx, mycanvas) // 保存上一次数据\r\n            mycanvas.onmousemove = null\r\n            that.posArray.push(that.tempPos[that.tempPos.length - 1])\r\n          }\r\n        }\r\n        addHistoy(history, ctx, mycanvas) // 添加一张默认的数据\r\n      } else if (this.tool === '3') {\r\n        mycanvas.onmousedown = null\r\n        mycanvas.onmousemove = null\r\n        mycanvas.onmouseup = null\r\n        mycanvas.onclick = null\r\n        mycanvas.onmousedown = function (e) {\r\n          that.tempPos = []\r\n          e.preventDefault()\r\n          let mousedown = windowToCanvas(e, mycanvas)\r\n          mycanvas.onmousemove = function (e) {\r\n            e.preventDefault()\r\n            showLastHistory(ctx, history) // 每次绘制先清除上一次\r\n            let point = windowToCanvas(e, mycanvas)\r\n            let pos = that.drawerLine(ctx, mousedown.x, mousedown.y, point.x, point.y)\r\n            console.log( mousedown.x, mousedown.y, point.x, point.y)\r\n            that.tempPos.push(pos)\r\n            console.log(that.tempPos)\r\n          }\r\n          mycanvas.onmouseup = function (e) {\r\n            e.preventDefault()\r\n            addHistoy(history, ctx, mycanvas) // 保存上一次数据\r\n            mycanvas.onmousemove = null\r\n            that.posArray.push(that.tempPos[that.tempPos.length - 1])\r\n          }\r\n        }\r\n        addHistoy(history, ctx, mycanvas) // 添加一张默认的数据\r\n      } else if (this.tool === '4') {\r\n\r\n      } else if (this.tool === '5') {\r\n        mycanvas.onmousedown = null\r\n        mycanvas.onmousemove = null\r\n        mycanvas.onmouseup = null\r\n        mycanvas.onclick = function (event) {\r\n          let rect = mycanvas.getBoundingClientRect()\r\n          let CanvasPos = {\r\n            x: event.clientX - rect.left * (mycanvas.width / rect.width),\r\n            y: event.clientY - rect.top * (mycanvas.height / rect.height)\r\n          }\r\n          that.drawerPoint(ctx, CanvasPos.x, CanvasPos.y)\r\n        }\r\n      }\r\n    },\r\n\r\n    // 重置\r\n    resetMap () {\r\n      // 标注的信息都放在这个数组中\r\n      this.posArray = []\r\n      history = [history[0]]\r\n      let mycanvas = this.$refs.cont\r\n      let ctx = mycanvas.getContext('2d')\r\n      ctx.clearRect(0, 0, mycanvas.width, mycanvas.height)\r\n      addHistoy(history, ctx, mycanvas)\r\n    },\r\n    // 取消上一步操作\r\n    cancel () {\r\n      if (history.length > 1) {\r\n        console.log(\"取消上一步\")\r\n        console.log(history)\r\n        this.posArray.pop()\r\n        history.pop()\r\n        let mycanvas = this.$refs.cont\r\n        let ctx = mycanvas.getContext('2d')\r\n        showLastHistory(ctx, history)\r\n      }\r\n    },\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}