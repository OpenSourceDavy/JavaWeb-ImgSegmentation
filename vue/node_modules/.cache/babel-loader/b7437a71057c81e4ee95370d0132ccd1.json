{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, unref, inject, resolveComponent, openBlock, createBlock, withCtx, createVNode, mergeProps, renderSlot } from 'vue';\nimport '../../roving-focus-group/index.mjs';\nimport '../../../utils/index.mjs';\nimport ElDropdownItemImpl from './dropdown-item-impl.mjs';\nimport { useDropdown } from './useDropdown.mjs';\nimport { ElCollectionItem, dropdownItemProps } from './dropdown.mjs';\nimport { DROPDOWN_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ElRovingFocusItem from '../../roving-focus-group/src/roving-focus-item.mjs';\nimport { composeEventHandlers, whenMouse } from '../../../utils/dom/event.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElDropdownItem\",\n  components: {\n    ElDropdownCollectionItem: ElCollectionItem,\n    ElRovingFocusItem,\n    ElDropdownItemImpl\n  },\n  inheritAttrs: false,\n  props: dropdownItemProps,\n  emits: [\"pointermove\", \"pointerleave\", \"click\"],\n\n  setup(props, {\n    emit,\n    attrs\n  }) {\n    const {\n      elDropdown\n    } = useDropdown();\n\n    const _instance = getCurrentInstance();\n\n    const itemRef = ref(null);\n    const textContent = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = unref(itemRef)) == null ? void 0 : _a.textContent) != null ? _b : \"\";\n    });\n    const {\n      onItemEnter,\n      onItemLeave\n    } = inject(DROPDOWN_INJECTION_KEY, void 0);\n    const handlePointerMove = composeEventHandlers(e => {\n      emit(\"pointermove\", e);\n      return e.defaultPrevented;\n    }, whenMouse(e => {\n      var _a;\n\n      if (props.disabled) {\n        onItemLeave(e);\n      } else {\n        onItemEnter(e);\n\n        if (!e.defaultPrevented) {\n          ;\n          (_a = e.currentTarget) == null ? void 0 : _a.focus();\n        }\n      }\n    }));\n    const handlePointerLeave = composeEventHandlers(e => {\n      emit(\"pointerleave\", e);\n      return e.defaultPrevented;\n    }, whenMouse(e => {\n      onItemLeave(e);\n    }));\n    const handleClick = composeEventHandlers(e => {\n      emit(\"click\", e);\n      return e.defaultPrevented;\n    }, e => {\n      var _a, _b, _c;\n\n      if (props.disabled) {\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      if ((_a = elDropdown == null ? void 0 : elDropdown.hideOnClick) == null ? void 0 : _a.value) {\n        (_b = elDropdown.handleClick) == null ? void 0 : _b.call(elDropdown);\n      }\n\n      (_c = elDropdown.commandHandler) == null ? void 0 : _c.call(elDropdown, props.command, _instance, e);\n    });\n    const propsAndAttrs = computed(() => {\n      return { ...props,\n        ...attrs\n      };\n    });\n    return {\n      handleClick,\n      handlePointerMove,\n      handlePointerLeave,\n      textContent,\n      propsAndAttrs\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n\n  const _component_el_dropdown_item_impl = resolveComponent(\"el-dropdown-item-impl\");\n\n  const _component_el_roving_focus_item = resolveComponent(\"el-roving-focus-item\");\n\n  const _component_el_dropdown_collection_item = resolveComponent(\"el-dropdown-collection-item\");\n\n  return openBlock(), createBlock(_component_el_dropdown_collection_item, {\n    disabled: _ctx.disabled,\n    \"text-value\": (_a = _ctx.textValue) != null ? _a : _ctx.textContent\n  }, {\n    default: withCtx(() => [createVNode(_component_el_roving_focus_item, {\n      focusable: !_ctx.disabled\n    }, {\n      default: withCtx(() => [createVNode(_component_el_dropdown_item_impl, mergeProps(_ctx.propsAndAttrs, {\n        onPointerleave: _ctx.handlePointerLeave,\n        onPointermove: _ctx.handlePointerMove,\n        onClickimpl: _ctx.handleClick\n      }), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16, [\"onPointerleave\", \"onPointermove\", \"onClickimpl\"])]),\n      _: 3\n    }, 8, [\"focusable\"])]),\n    _: 3\n  }, 8, [\"disabled\", \"text-value\"]);\n}\n\nvar DropdownItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown-item.vue\"]]);\n\nexport { DropdownItem as default };","map":{"version":3,"mappings":";;;;;;;;;;;AAoCA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,kBADuB;AAE7BC,YAAY;AAAAC,8BACVA,gBADU;AAEVC,qBAFU;AAGVC;AAHU,GAFiB;AAO7BC,cAAc,OAPe;AAQ7BC,OAAO,mBARsB;AAS7BC,OAAO,GAAC,aAAD,EAAgB,cAAhB,EAAgC,OAAhC,CATsB;;AAU7BC,OAAM,QAAO;AAAEC,QAAF;AAAQC;AAAR,GAAP,EAAwB;AACtB;AAAEC;AAAF,QAAiBC,WAAY,EAA7B;;AACN,UAAMC,YAAYC,kBAAmB,EAArC;;AACM,oBAAUC,IAAwB,IAAxB,CAAV;AACN,UAAMC,cAAcC,QAAS,OAAM;AACnC,UAAMC,EAAN,EAAQC,EAAR;;AAKM,8BAAoB,CACxBC,OADwB,CAApB,KACJ,IADI,GACJ,KAAqB,CADjB,GACiBF,cADjB,KACiB,IADjB,GACiBC,EADjB,GACiB,EADjB;AAEF,KARyB,CAA7B;AASI;AAAAE;AAASC;AAAT,QAASC,sCAAT;AACF,UACUC,iBAAO;AACff,UAAI,gBAAgBgB,CAAhB,CAAJ;AACE;AAAa,KAFA,EAGRC;AACL;;AACI,eAAG,CAAkBC,QAArB,EAAqB;AACvBL;AAAE,OADA,MACA;AACJD;;AACF;AAEJ;AAEM,oCACJ,IADI,GACJ,MADI,GACJH,EAAqB,MAArB,EADI;AAEF;AACA;AACF,KAbS,CAHQ,CADjB;AAmBE,4BAAa;AAEjBT;AAEM;AAEF,KANa,EAMbiB,eAAe;AACfJ,iBAAS,GAAT;AACF,KAFE,CANa,CAAb;AAUA,UAAIM,WAAgB;AAClBnB,UAAE,CAAyB,OAAzB,EAAyBgB,CAAzB,CAAF;AACA;AACF,KAHoB,EAGpBA;AACI;;AACF,0BAAyB;AAC3BA;AACA;AAEJ;;AAGM,0BAAgB,QAAhB,GAA+B,MAA/B,GAA+Bd,sBAA/B,KAA+B,IAA/B,GAA+B,MAA/B,GAA+BO,QAA/B,EAA+B;AAC5B,yCAAqB,IAArB,GAAqB,MAArB,GAAqBC,mBAArB;AACR;;AAEM;AACL,KAjBsB,CAApB;AAkBF;AACA;AAAA;AAAA;AACA,KAFA;AAGA;AACFS,iBADE;AAEJJ,uBAFI;AAGLK,wBAHK;iBAAA;;AAAA;;;AA1EyB,EAA/B;;AArBgC,SAbjBC,WAaiB,CAbjBC,IAaiB,EAbjBC,MAaiB,EAbjBC,MAaiB,EAbjBC,MAaiB,EAbjBC,KAaiB,EAbjBC,QAaiB,EAbjB;AAAA;;AACe;;uCAWH;;AAAA;;AAAA,kBATS,IAAGC;AAAAV;4BAQT;AARS,KAQT;AANDW,aACNC,0BACD;AAAAC,eACF;AADE,OACF;6BAEJ;AAAAC;6CAAA;;AAAA;;;OAAA,2DAFI;;AAAA,KADE,mBADC,EAKO;;AAAA,GARS,gCASZ","names":["_sfc_main","defineComponent","name","components","ElDropdownCollectionItem","ElRovingFocusItem","ElDropdownItemImpl","inheritAttrs","props","emits","setup","emit","attrs","elDropdown","useDropdown","_instance","getCurrentInstance","ref","textContent","computed","_a","_b","itemRef","onItemEnter","onItemLeave","inject","handlePointerMove","e","whenMouse","disabled","handleClick","handlePointerLeave","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_createBlock","default","_withCtx","focusable","onPointerleave"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-item.vue"],"sourcesContent":["<template>\n  <el-dropdown-collection-item\n    :disabled=\"disabled\"\n    :text-value=\"textValue ?? textContent\"\n  >\n    <el-roving-focus-item :focusable=\"!disabled\">\n      <el-dropdown-item-impl\n        v-bind=\"propsAndAttrs\"\n        @pointerleave=\"handlePointerLeave\"\n        @pointermove=\"handlePointerMove\"\n        @clickimpl=\"handleClick\"\n      >\n        <slot />\n      </el-dropdown-item-impl>\n    </el-roving-focus-item>\n  </el-dropdown-collection-item>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  ref,\n  unref,\n} from 'vue'\nimport { ElRovingFocusItem } from '@element-plus/components/roving-focus-group'\nimport { composeEventHandlers, whenMouse } from '@element-plus/utils'\nimport ElDropdownItemImpl from './dropdown-item-impl.vue'\nimport { useDropdown } from './useDropdown'\nimport {\n  ElCollectionItem as ElDropdownCollectionItem,\n  dropdownItemProps,\n} from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElDropdownItem',\n  components: {\n    ElDropdownCollectionItem,\n    ElRovingFocusItem,\n    ElDropdownItemImpl,\n  },\n  inheritAttrs: false,\n  props: dropdownItemProps,\n  emits: ['pointermove', 'pointerleave', 'click'],\n  setup(props, { emit, attrs }) {\n    const { elDropdown } = useDropdown()\n    const _instance = getCurrentInstance()\n    const itemRef = ref<HTMLElement | null>(null)\n    const textContent = computed(() => unref(itemRef)?.textContent ?? '')\n    const { onItemEnter, onItemLeave } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const handlePointerMove = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointermove', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        if (props.disabled) {\n          onItemLeave(e)\n        } else {\n          onItemEnter(e)\n          if (!e.defaultPrevented) {\n            ;(e.currentTarget as HTMLElement)?.focus()\n          }\n        }\n      })\n    )\n\n    const handlePointerLeave = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointerleave', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        onItemLeave(e)\n      })\n    )\n\n    const handleClick = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('click', e)\n        return e.defaultPrevented\n      },\n      (e) => {\n        if (props.disabled) {\n          e.stopImmediatePropagation()\n          return\n        }\n        if (elDropdown?.hideOnClick?.value) {\n          elDropdown.handleClick?.()\n        }\n        elDropdown.commandHandler?.(props.command, _instance, e)\n      }\n    )\n\n    // direct usage of v-bind={ ...$props, ...$attrs } causes type errors\n    const propsAndAttrs = computed(() => {\n      return { ...props, ...attrs }\n    })\n\n    return {\n      handleClick,\n      handlePointerMove,\n      handlePointerLeave,\n      textContent,\n      propsAndAttrs,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}