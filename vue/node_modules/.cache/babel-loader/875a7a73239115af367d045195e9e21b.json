{"ast":null,"code":"import { watch, unref, nextTick } from 'vue';\n\nconst useDelayedRender = ({\n  indicator,\n  intermediateIndicator,\n  shouldSetIntermediate = () => true,\n  beforeShow,\n  afterShow,\n  afterHide,\n  beforeHide\n}) => {\n  watch(() => unref(indicator), val => {\n    if (val) {\n      beforeShow == null ? void 0 : beforeShow();\n      nextTick(() => {\n        if (!unref(indicator)) return;\n\n        if (shouldSetIntermediate(\"show\")) {\n          intermediateIndicator.value = true;\n        }\n      });\n    } else {\n      beforeHide == null ? void 0 : beforeHide();\n      nextTick(() => {\n        if (unref(indicator)) return;\n\n        if (shouldSetIntermediate(\"hide\")) {\n          intermediateIndicator.value = false;\n        }\n      });\n    }\n  });\n  watch(() => intermediateIndicator.value, val => {\n    if (val) {\n      afterShow == null ? void 0 : afterShow();\n    } else {\n      afterHide == null ? void 0 : afterHide();\n    }\n  });\n};\n\nexport { useDelayedRender };","map":{"version":3,"mappings":";;AACY,MAACA,gBAAgB,GAAG,CAAC;AAC/BC,WAD+B;AAE/BC,uBAF+B;AAG/BC,uBAAqB,GAAG,MAAM,IAHC;AAI/BC,YAJ+B;AAK/BC,WAL+B;AAM/BC,WAN+B;AAO/BC;AAP+B,CAAD,KAQ1B;AACJC,OAAK,CAAC,MAAMC,KAAK,CAACR,SAAD,CAAZ,EAA0BS,GAAD,IAAS;AACrC,QAAIA,GAAJ,EAAS;AACPN,gBAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,EAAxC;AACAO,cAAQ,CAAC,MAAM;AACb,YAAI,CAACF,KAAK,CAACR,SAAD,CAAV,EACE;;AACF,YAAIE,qBAAqB,CAAC,MAAD,CAAzB,EAAmC;AACjCD,+BAAqB,CAACU,KAAtB,GAA8B,IAA9B;AACD;AACF,OANO,CAAR;AAOD,KATD,MASO;AACLL,gBAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,EAAxC;AACAI,cAAQ,CAAC,MAAM;AACb,YAAIF,KAAK,CAACR,SAAD,CAAT,EACE;;AACF,YAAIE,qBAAqB,CAAC,MAAD,CAAzB,EAAmC;AACjCD,+BAAqB,CAACU,KAAtB,GAA8B,KAA9B;AACD;AACF,OANO,CAAR;AAOD;AACF,GApBI,CAAL;AAqBAJ,OAAK,CAAC,MAAMN,qBAAqB,CAACU,KAA7B,EAAqCF,GAAD,IAAS;AAChD,QAAIA,GAAJ,EAAS;AACPL,eAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,EAAtC;AACD,KAFD,MAEO;AACLC,eAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,EAAtC;AACD;AACF,GANI,CAAL;AAOF,CArCY","names":["useDelayedRender","indicator","intermediateIndicator","shouldSetIntermediate","beforeShow","afterShow","afterHide","beforeHide","watch","unref","val","nextTick","value"],"sources":["../../../../../packages/hooks/use-intermediate-render/index.ts"],"sourcesContent":["import { nextTick, unref, watch } from 'vue'\n\nimport type { Ref } from 'vue'\n\nexport type UseDelayedRenderProps = {\n  indicator: Ref<boolean>\n  intermediateIndicator: Ref<boolean>\n  shouldSetIntermediate?: (step: 'show' | 'hide') => boolean\n  beforeShow?: () => void\n  beforeHide?: () => void\n  afterShow?: () => void\n  afterHide?: () => void\n}\n\nexport const useDelayedRender = ({\n  indicator,\n  intermediateIndicator,\n  shouldSetIntermediate = () => true,\n  beforeShow,\n  afterShow,\n  afterHide,\n  beforeHide,\n}: UseDelayedRenderProps) => {\n  watch(\n    () => unref(indicator),\n    (val) => {\n      if (val) {\n        beforeShow?.()\n        nextTick(() => {\n          if (!unref(indicator)) return\n          if (shouldSetIntermediate('show')) {\n            intermediateIndicator.value = true\n          }\n        })\n      } else {\n        beforeHide?.()\n        nextTick(() => {\n          if (unref(indicator)) return\n\n          if (shouldSetIntermediate('hide')) {\n            intermediateIndicator.value = false\n          }\n        })\n      }\n    }\n  )\n\n  // because we don't always set the value ourselves, so that we\n  // simply watch the value's state, then invoke the corresponding hook.\n  watch(\n    () => intermediateIndicator.value,\n    (val) => {\n      if (val) {\n        afterShow?.()\n      } else {\n        afterHide?.()\n      }\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}