{"ast":null,"code":"import { isClient } from '@vueuse/core';\nconst globalNodes = [];\nlet target = !isClient ? void 0 : document.body;\n\nfunction createGlobalNode(id) {\n  const el = document.createElement(\"div\");\n\n  if (id !== void 0) {\n    el.setAttribute(\"id\", id);\n  }\n\n  target.appendChild(el);\n  globalNodes.push(el);\n  return el;\n}\n\nfunction removeGlobalNode(el) {\n  globalNodes.splice(globalNodes.indexOf(el), 1);\n  el.remove();\n}\n\nfunction changeGlobalNodesTarget(el) {\n  if (el === target) return;\n  target = el;\n  globalNodes.forEach(el2 => {\n    if (el2.contains(target) === false) {\n      target.appendChild(el2);\n    }\n  });\n}\n\nexport { changeGlobalNodesTarget, createGlobalNode, removeGlobalNode };","map":{"version":3,"mappings":";AACA,MAAMA,WAAW,GAAG,EAApB;AACA,IAAIC,MAAM,GAAG,CAACC,QAAD,GAAY,KAAK,CAAjB,GAAqBC,QAAQ,CAACC,IAA3C;;AACO,SAASC,gBAAT,CAA0BC,EAA1B,EAA8B;AACnC,QAAMC,EAAE,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAX;;AACA,MAAIF,EAAE,KAAK,KAAK,CAAhB,EAAmB;AACjBC,MAAE,CAACE,YAAH,CAAgB,IAAhB,EAAsBH,EAAtB;AACD;;AACDL,QAAM,CAACS,WAAP,CAAmBH,EAAnB;AACAP,aAAW,CAACW,IAAZ,CAAiBJ,EAAjB;AACA,SAAOA,EAAP;AACD;;AACM,SAASK,gBAAT,CAA0BL,EAA1B,EAA8B;AACnCP,aAAW,CAACa,MAAZ,CAAmBb,WAAW,CAACc,OAAZ,CAAoBP,EAApB,CAAnB,EAA4C,CAA5C;AACAA,IAAE,CAACQ,MAAH;AACD;;AACM,SAASC,uBAAT,CAAiCT,EAAjC,EAAqC;AAC1C,MAAIA,EAAE,KAAKN,MAAX,EACE;AACFA,QAAM,GAAGM,EAAT;AACAP,aAAW,CAACiB,OAAZ,CAAqBC,GAAD,IAAS;AAC3B,QAAIA,GAAG,CAACC,QAAJ,CAAalB,MAAb,MAAyB,KAA7B,EAAoC;AAClCA,YAAM,CAACS,WAAP,CAAmBQ,GAAnB;AACD;AACF,GAJD;AAKF","names":["globalNodes","target","isClient","document","body","createGlobalNode","id","el","createElement","setAttribute","appendChild","push","removeGlobalNode","splice","indexOf","remove","changeGlobalNodesTarget","forEach","el2","contains"],"sources":["../../../../../packages/utils/vue/global-node.ts"],"sourcesContent":["import { isClient } from '@vueuse/core'\n\nconst globalNodes: HTMLElement[] = []\nlet target: HTMLElement = !isClient ? (undefined as any) : document.body\n\nexport function createGlobalNode(id?: string) {\n  const el = document.createElement('div')\n  if (id !== undefined) {\n    el.setAttribute('id', id)\n  }\n\n  target.appendChild(el)\n  globalNodes.push(el)\n\n  return el\n}\n\nexport function removeGlobalNode(el: HTMLElement) {\n  globalNodes.splice(globalNodes.indexOf(el), 1)\n  el.remove()\n}\n\nexport function changeGlobalNodesTarget(el: HTMLElement) {\n  if (el === target) return\n\n  target = el\n  globalNodes.forEach((el) => {\n    if (el.contains(target) === false) {\n      target.appendChild(el)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}