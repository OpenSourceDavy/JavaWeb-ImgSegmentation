{"ast":null,"code":"let history = [];\n\nfunction Point(x, y, type) {\n  this.x = x;\n  this.y = y;\n  this.type = type; // 左击 1  右击 3\n}\n\nfunction windowToCanvas(e, mycanvas) {\n  // 返回元素的大小以及位置\n  var rect = mycanvas.getBoundingClientRect(); // rect 的宽度会加上 canvas 的 border 会影响精度\n\n  return new Point(e.clientX - rect.left * (mycanvas.width / rect.width), e.clientY - rect.top * (mycanvas.height / rect.height), e.which);\n}\n\nfunction showLastHistory(ctx, history) {\n  ctx.putImageData(history[history.length - 1]['data'], 0, 0);\n}\n\nfunction addHistoy(history, ctx, mycanvas) {\n  history.push({\n    data: ctx.getImageData(0, 0, mycanvas.width, mycanvas.height)\n  });\n}\n\nexport default {\n  name: \"Canvas\",\n\n  data() {\n    return {\n      ctx: null,\n      tool: ''\n    };\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n      this.ctx = this.$refs.cont.getContext('2d');\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, 0);\n      this.ctx.lineTo(300, 100);\n      this.ctx.strokeStyle = 'red';\n      this.ctx.lineWidth = '2';\n      this.ctx.stroke();\n      this.ctx.closePath();\n    },\n\n    // 绘制矩形\n    drawerRect(ctx, left, top, w, h) {\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.lineWidth = '2'; // 画笔粗细\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(left, top, w, h);\n      ctx.stroke();\n      ctx.restore();\n      return {\n        data: [left, top, w, h]\n      };\n    },\n\n    // 绘制圆\n    drawerCircle(ctx, x, y, r) {\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.lineWidth = '2'; // 画笔粗细\n\n      ctx.beginPath(); // 开始路径\n\n      ctx.arc(x, y, r, 0, Math.PI * 2, true); // 参数依次为圆心坐标x,y，半径，开始结束角，绘制方向顺时针\n\n      ctx.stroke();\n      ctx.restore();\n      return {\n        data: [x, y, r]\n      };\n    },\n\n    // 绘制直线\n    drawerLine(ctx, x, y, z, n) {\n      ctx.save();\n      ctx.fillStyle = '#f00000';\n      ctx.lineWidth = '2'; // 画笔粗细\n\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(z, n);\n      ctx.stroke();\n      ctx.restore();\n      return {\n        data: [x, y, z, n]\n      };\n    },\n\n    // 绘制点\n    drawerPoint(ctx, x, y) {\n      ctx.save();\n      ctx.fillStyle = '#f00000';\n      ctx.strokeStyle = '#f00000'; // 画笔颜色\n\n      ctx.beginPath();\n      ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n      this.posArray.push({\n        data: [x, y]\n      });\n    },\n\n    // 绘制的方法及事件，根据当前选择的工具进行不同的方法绘制图形\n    drawer() {\n      let mycanvas = this.$refs.cont;\n      let ctx = mycanvas.getContext('2d');\n      let that = this;\n\n      if (this.tool === '1') {\n        mycanvas.onclick = null;\n\n        mycanvas.onmousedown = function (e) {\n          that.tempPos = [];\n          e.preventDefault();\n          var mousedown = windowToCanvas(e, mycanvas);\n\n          mycanvas.onmousemove = function (e) {\n            e.preventDefault();\n            showLastHistory(ctx, history); // 每次绘制先清除上一次\n\n            let point = windowToCanvas(e, mycanvas);\n            let w = Math.abs(point.x - mousedown.x);\n            let h = Math.abs(point.y - mousedown.y);\n            let left = point.x > mousedown.x ? mousedown.x : point.x;\n            let top = point.y > mousedown.y ? mousedown.y : point.y;\n            let pos = that.drawerRect(ctx, left, top, w, h);\n            that.tempPos.push(pos);\n          };\n\n          mycanvas.onmouseup = function (e) {\n            e.preventDefault();\n            addHistoy(history, ctx, mycanvas); // 保存上一次数据\n\n            mycanvas.onmousemove = null;\n            that.posArray.push(that.tempPos[that.tempPos.length - 1]);\n          };\n        };\n\n        addHistoy(history, ctx, mycanvas); // 添加一张默认的数据\n      } else if (this.tool === '2') {\n        // 清除事件\n        mycanvas.onmousedown = null;\n        mycanvas.onmousemove = null;\n        mycanvas.onmouseup = null;\n        mycanvas.onclick = null;\n\n        mycanvas.onmousedown = function (e) {\n          that.tempPos = [];\n          e.preventDefault();\n          var mousedown = windowToCanvas(e, mycanvas);\n\n          mycanvas.onmousemove = function (e) {\n            e.preventDefault();\n            showLastHistory(ctx, history); // 每次绘制先清除上一次\n\n            let point = windowToCanvas(e, mycanvas);\n            var rx = (point.x - mousedown.x) / 2;\n            var ry = (point.y - mousedown.y) / 2;\n            var r = Math.sqrt(rx * rx + ry * ry);\n            let pos = that.drawerCircle(ctx, rx + mousedown.x, ry + mousedown.y, r);\n            that.tempPos.push(pos);\n          };\n\n          mycanvas.onmouseup = function (e) {\n            e.preventDefault();\n            addHistoy(history, ctx, mycanvas); // 保存上一次数据\n\n            mycanvas.onmousemove = null;\n            that.posArray.push(that.tempPos[that.tempPos.length - 1]);\n          };\n        };\n\n        addHistoy(history, ctx, mycanvas); // 添加一张默认的数据\n      } else if (this.tool === '3') {\n        mycanvas.onmousedown = null;\n        mycanvas.onmousemove = null;\n        mycanvas.onmouseup = null;\n        mycanvas.onclick = null;\n\n        mycanvas.onmousedown = function (e) {\n          that.tempPos = [];\n          e.preventDefault();\n          var mousedown = windowToCanvas(e, mycanvas);\n\n          mycanvas.onmousemove = function (e) {\n            e.preventDefault();\n            showLastHistory(ctx, history); // 每次绘制先清除上一次\n\n            let point = windowToCanvas(e, mycanvas);\n            let pos = that.drawerLine(ctx, mousedown.x, mousedown.y, point.x, point.y);\n            that.tempPos.push(pos);\n            console.log(that.tempPos);\n          };\n\n          mycanvas.onmouseup = function (e) {\n            e.preventDefault();\n            addHistoy(history, ctx, mycanvas); // 保存上一次数据\n\n            mycanvas.onmousemove = null;\n            that.posArray.push(that.tempPos[that.tempPos.length - 1]);\n          };\n        };\n\n        addHistoy(history, ctx, mycanvas); // 添加一张默认的数据\n      } else if (this.tool === '4') {} else if (this.tool === '5') {\n        mycanvas.onmousedown = null;\n        mycanvas.onmousemove = null;\n        mycanvas.onmouseup = null;\n\n        mycanvas.onclick = function (event) {\n          var rect = mycanvas.getBoundingClientRect();\n          var CanvasPos = {\n            x: event.clientX - rect.left * (mycanvas.width / rect.width),\n            y: event.clientY - rect.top * (mycanvas.height / rect.height)\n          };\n          that.drawerPoint(ctx, CanvasPos.x, CanvasPos.y);\n        };\n      }\n    },\n\n    // 重置\n    resetMap() {\n      // 标注的信息都放在这个数组中\n      this.posArray = [];\n      history = [history[0]];\n      var mycanvas = document.getElementById('mycanvas');\n      var ctx = mycanvas.getContext('2d');\n      ctx.clearRect(0, 0, mycanvas.width, mycanvas.height);\n      addHistoy(history, ctx, mycanvas);\n    },\n\n    // 取消上一步操作\n    cancel() {\n      if (history.length > 1) {\n        console.log(history);\n        this.posArray.pop();\n        history.pop();\n        var mycanvas = document.getElementById('mycanvas');\n        var ctx = mycanvas.getContext('2d');\n        showLastHistory(ctx, history);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["history","Point","x","y","type","windowToCanvas","e","mycanvas","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","which","showLastHistory","ctx","putImageData","length","addHistoy","push","data","getImageData","name","tool","mounted","init","methods","$refs","cont","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","drawerRect","w","h","save","restore","drawerCircle","r","arc","Math","PI","drawerLine","z","n","fillStyle","drawerPoint","fill","posArray","drawer","that","onclick","onmousedown","tempPos","preventDefault","mousedown","onmousemove","point","abs","pos","onmouseup","rx","ry","sqrt","console","log","event","CanvasPos","resetMap","document","getElementById","clearRect","cancel","pop"],"sourceRoot":"","sources":["G:\\springboot+vue\\crm_vue\\vue\\src\\views\\Canvas.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--canvas居中：display设置为block-->\r\n    <canvas ref=\"cont\" style=\"width: 500px;height: 500px;margin: 10px auto;border: 2px solid #aaaaaa;display: block\">\r\n    </canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nlet history = []\r\nfunction Point (x, y, type) {\r\n  this.x = x\r\n  this.y = y\r\n  this.type = type // 左击 1  右击 3\r\n}\r\nfunction windowToCanvas (e, mycanvas) {\r\n  // 返回元素的大小以及位置\r\n  var rect = mycanvas.getBoundingClientRect()\r\n  // rect 的宽度会加上 canvas 的 border 会影响精度\r\n  return new Point(e.clientX - rect.left * (mycanvas.width / rect.width),\r\n      e.clientY - rect.top * (mycanvas.height / rect.height), e.which)\r\n}\r\nfunction showLastHistory (ctx, history) {\r\n  ctx.putImageData(history[history.length - 1]['data'], 0, 0)\r\n}\r\nfunction addHistoy (history, ctx, mycanvas) {\r\n  history.push({\r\n    data: ctx.getImageData(0, 0, mycanvas.width, mycanvas.height)\r\n  })\r\n}\r\nexport default {\r\n  name: \"Canvas\",\r\n  data(){\r\n    return{\r\n      ctx:null,\r\n      tool:'',\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.init();\r\n  },\r\n\r\n  methods:{\r\n    init(){\r\n      this.ctx = this.$refs.cont.getContext('2d');\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(0,0);\r\n      this.ctx.lineTo(300,100);\r\n      this.ctx.strokeStyle = 'red'\r\n      this.ctx.lineWidth = '2'\r\n      this.ctx.stroke();\r\n      this.ctx.closePath();\r\n    },\r\n\r\n    // 绘制矩形\r\n    drawerRect (ctx, left, top, w, h) {\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.lineWidth = '2' // 画笔粗细\r\n      ctx.save()\r\n      ctx.beginPath()\r\n      ctx.rect(left, top, w, h)\r\n      ctx.stroke()\r\n      ctx.restore()\r\n      return {\r\n        data: [left, top, w, h]\r\n      }\r\n    },\r\n    // 绘制圆\r\n    drawerCircle (ctx, x, y, r) {\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.lineWidth = '2' // 画笔粗细\r\n      ctx.beginPath()// 开始路径\r\n      ctx.arc(x, y, r, 0, Math.PI * 2, true)// 参数依次为圆心坐标x,y，半径，开始结束角，绘制方向顺时针\r\n      ctx.stroke()\r\n      ctx.restore()\r\n      return {\r\n        data: [x, y, r]\r\n      }\r\n    },\r\n    // 绘制直线\r\n    drawerLine (ctx, x, y, z, n) {\r\n      ctx.save()\r\n      ctx.fillStyle = '#f00000'\r\n      ctx.lineWidth = '2' // 画笔粗细\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, y)\r\n      ctx.lineTo(z, n)\r\n      ctx.stroke()\r\n      ctx.restore()\r\n      return {\r\n        data: [x, y, z, n]\r\n      }\r\n    },\r\n    // 绘制点\r\n    drawerPoint (ctx, x, y) {\r\n      ctx.save()\r\n      ctx.fillStyle = '#f00000'\r\n      ctx.strokeStyle = '#f00000'// 画笔颜色\r\n      ctx.beginPath()\r\n      ctx.arc(x, y, 3, 0, Math.PI * 2, true)\r\n      ctx.closePath()\r\n      ctx.fill()\r\n      ctx.restore()\r\n      this.posArray.push({data: [x, y]})\r\n    },\r\n\r\n    // 绘制的方法及事件，根据当前选择的工具进行不同的方法绘制图形\r\n    drawer () {\r\n      let mycanvas = this.$refs.cont\r\n      let ctx = mycanvas.getContext('2d')\r\n      let that = this\r\n      if (this.tool === '1') {\r\n        mycanvas.onclick = null\r\n        mycanvas.onmousedown = function (e) {\r\n          that.tempPos = []\r\n          e.preventDefault()\r\n          var mousedown = windowToCanvas(e, mycanvas)\r\n          mycanvas.onmousemove = function (e) {\r\n            e.preventDefault()\r\n            showLastHistory(ctx, history) // 每次绘制先清除上一次\r\n            let point = windowToCanvas(e, mycanvas)\r\n            let w = Math.abs(point.x - mousedown.x)\r\n            let h = Math.abs(point.y - mousedown.y)\r\n            let left = point.x > mousedown.x ? mousedown.x : point.x\r\n            let top = point.y > mousedown.y ? mousedown.y : point.y\r\n            let pos = that.drawerRect(ctx, left, top, w, h)\r\n            that.tempPos.push(pos)\r\n          }\r\n          mycanvas.onmouseup = function (e) {\r\n            e.preventDefault()\r\n            addHistoy(history, ctx, mycanvas) // 保存上一次数据\r\n            mycanvas.onmousemove = null\r\n            that.posArray.push(that.tempPos[that.tempPos.length - 1])\r\n          }\r\n        }\r\n        addHistoy(history, ctx, mycanvas) // 添加一张默认的数据\r\n      } else if (this.tool === '2') {\r\n        // 清除事件\r\n        mycanvas.onmousedown = null\r\n        mycanvas.onmousemove = null\r\n        mycanvas.onmouseup = null\r\n        mycanvas.onclick = null\r\n        mycanvas.onmousedown = function (e) {\r\n          that.tempPos = []\r\n          e.preventDefault()\r\n          var mousedown = windowToCanvas(e, mycanvas)\r\n          mycanvas.onmousemove = function (e) {\r\n            e.preventDefault()\r\n            showLastHistory(ctx, history) // 每次绘制先清除上一次\r\n            let point = windowToCanvas(e, mycanvas)\r\n            var rx = (point.x - mousedown.x) / 2\r\n            var ry = (point.y - mousedown.y) / 2\r\n            var r = Math.sqrt(rx * rx + ry * ry)\r\n            let pos = that.drawerCircle(ctx, rx + mousedown.x, ry + mousedown.y, r)\r\n            that.tempPos.push(pos)\r\n          }\r\n          mycanvas.onmouseup = function (e) {\r\n            e.preventDefault()\r\n            addHistoy(history, ctx, mycanvas) // 保存上一次数据\r\n            mycanvas.onmousemove = null\r\n            that.posArray.push(that.tempPos[that.tempPos.length - 1])\r\n          }\r\n        }\r\n        addHistoy(history, ctx, mycanvas) // 添加一张默认的数据\r\n      } else if (this.tool === '3') {\r\n        mycanvas.onmousedown = null\r\n        mycanvas.onmousemove = null\r\n        mycanvas.onmouseup = null\r\n        mycanvas.onclick = null\r\n        mycanvas.onmousedown = function (e) {\r\n          that.tempPos = []\r\n          e.preventDefault()\r\n          var mousedown = windowToCanvas(e, mycanvas)\r\n          mycanvas.onmousemove = function (e) {\r\n            e.preventDefault()\r\n            showLastHistory(ctx, history) // 每次绘制先清除上一次\r\n            let point = windowToCanvas(e, mycanvas)\r\n            let pos = that.drawerLine(ctx, mousedown.x, mousedown.y, point.x, point.y)\r\n            that.tempPos.push(pos)\r\n            console.log(that.tempPos)\r\n          }\r\n          mycanvas.onmouseup = function (e) {\r\n            e.preventDefault()\r\n            addHistoy(history, ctx, mycanvas) // 保存上一次数据\r\n            mycanvas.onmousemove = null\r\n            that.posArray.push(that.tempPos[that.tempPos.length - 1])\r\n          }\r\n        }\r\n        addHistoy(history, ctx, mycanvas) // 添加一张默认的数据\r\n      } else if (this.tool === '4') {\r\n\r\n      } else if (this.tool === '5') {\r\n        mycanvas.onmousedown = null\r\n        mycanvas.onmousemove = null\r\n        mycanvas.onmouseup = null\r\n        mycanvas.onclick = function (event) {\r\n          var rect = mycanvas.getBoundingClientRect()\r\n          var CanvasPos = {\r\n            x: event.clientX - rect.left * (mycanvas.width / rect.width),\r\n            y: event.clientY - rect.top * (mycanvas.height / rect.height)\r\n          }\r\n          that.drawerPoint(ctx, CanvasPos.x, CanvasPos.y)\r\n        }\r\n      }\r\n    },\r\n\r\n    // 重置\r\n    resetMap () {\r\n      // 标注的信息都放在这个数组中\r\n      this.posArray = []\r\n      history = [history[0]]\r\n      var mycanvas = document.getElementById('mycanvas')\r\n      var ctx = mycanvas.getContext('2d')\r\n      ctx.clearRect(0, 0, mycanvas.width, mycanvas.height)\r\n      addHistoy(history, ctx, mycanvas)\r\n    },\r\n    // 取消上一步操作\r\n    cancel () {\r\n      if (history.length > 1) {\r\n        console.log(history)\r\n        this.posArray.pop()\r\n        history.pop()\r\n        var mycanvas = document.getElementById('mycanvas')\r\n        var ctx = mycanvas.getContext('2d')\r\n        showLastHistory(ctx, history)\r\n      }\r\n    },\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}