{"ast":null,"code":"import { onBeforeMount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { generateId } from '../../utils/rand.mjs';\nlet cachedContainer;\nconst POPPER_CONTAINER_ID = `el-popper-container-${generateId()}`;\nconst POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`;\n\nconst usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return;\n\n    if (process.env.NODE_ENV === \"test\" || !cachedContainer) {\n      const container = document.createElement(\"div\");\n      container.id = POPPER_CONTAINER_ID;\n      document.body.appendChild(container);\n      cachedContainer = container;\n    }\n  });\n};\n\nexport { POPPER_CONTAINER_ID, POPPER_CONTAINER_SELECTOR, usePopperContainer };","map":{"version":3,"mappings":";;;;AAGA,IAAIA,eAAJ;AACY,MAACC,mBAAmB,GAAI,uBAAsBC,UAAU,EAAG,EAA3D;AACA,MAACC,yBAAyB,GAAI,IAAGF,mBAAoB,EAArD;;AACA,MAACG,kBAAkB,GAAG,MAAM;AACtCC,eAAa,CAAC,MAAM;AAClB,QAAI,CAACC,QAAL,EACE;;AACF,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmC,CAACT,eAAxC,EAAyD;AACvD,YAAMU,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,eAAS,CAACG,EAAV,GAAeZ,mBAAf;AACAU,cAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACAV,qBAAe,GAAGU,SAAlB;AACD;AACF,GATY,CAAb;AAUF,CAXY","names":["cachedContainer","POPPER_CONTAINER_ID","generateId","POPPER_CONTAINER_SELECTOR","usePopperContainer","onBeforeMount","isClient","process","env","NODE_ENV","container","document","createElement","id","body","appendChild"],"sources":["../../../../../packages/hooks/use-popper-container/index.ts"],"sourcesContent":["import { onBeforeMount } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { generateId } from '@element-plus/utils'\n\nlet cachedContainer: HTMLElement\n\nexport const POPPER_CONTAINER_ID = `el-popper-container-${generateId()}`\n\nexport const POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`\n\nexport const usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return\n\n    // This is for bypassing the error that when under testing env, we often encounter\n    // document.body.innerHTML = '' situation\n    // for this we need to disable the caching since it's not really needed\n    if (process.env.NODE_ENV === 'test' || !cachedContainer) {\n      const container = document.createElement('div')\n      container.id = POPPER_CONTAINER_ID\n      document.body.appendChild(container)\n      cachedContainer = container\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}