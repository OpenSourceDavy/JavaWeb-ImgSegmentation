{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { treeNodeContentProps, ROOT_TREE_INJECTION_KEY } from './virtual-tree.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar ElNodeContent = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: treeNodeContentProps,\n\n  setup(props) {\n    const tree = inject(ROOT_TREE_INJECTION_KEY);\n    const ns = useNamespace(\"tree\");\n    return () => {\n      const node = props.node;\n      const {\n        data\n      } = node;\n      return (tree == null ? void 0 : tree.ctx.slots.default) ? tree.ctx.slots.default({\n        node,\n        data\n      }) : h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [node == null ? void 0 : node.label]);\n    };\n  }\n\n});\nexport { ElNodeContent as default };","map":{"version":3,"mappings":";;;;AAGA,oBAAeA,eAAe,CAAC;AAC7BC,MAAI,EAAE,mBADuB;AAE7BC,OAAK,EAAEC,oBAFsB;;AAG7BC,OAAK,CAACF,KAAD,EAAQ;AACX,UAAMG,IAAI,GAAGC,MAAM,CAACC,uBAAD,CAAnB;AACA,UAAMC,EAAE,GAAGC,YAAY,CAAC,MAAD,CAAvB;AACA,WAAO,MAAM;AACX,YAAMC,IAAI,GAAGR,KAAK,CAACQ,IAAnB;AACA,YAAM;AAAEC;AAAF,UAAWD,IAAjB;AACA,aAAO,CAACL,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACO,GAAL,CAASC,KAAT,CAAeC,OAAxC,IAAmDT,IAAI,CAACO,GAAL,CAASC,KAAT,CAAeC,OAAf,CAAuB;AAAEJ,YAAF;AAAQC;AAAR,OAAvB,CAAnD,GAA4FI,CAAC,CAAC,MAAD,EAAS;AAAEC,aAAK,EAAER,EAAE,CAACS,EAAH,CAAM,MAAN,EAAc,OAAd;AAAT,OAAT,EAA4C,CAACP,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACQ,KAA9B,CAA5C,CAApG;AACD,KAJD;AAKD;;AAX4B,CAAD,CAA9B","names":["defineComponent","name","props","treeNodeContentProps","setup","tree","inject","ROOT_TREE_INJECTION_KEY","ns","useNamespace","node","data","ctx","slots","default","h","class","be","label"],"sources":["../../../../../../packages/components/tree-v2/src/tree-node-content.ts"],"sourcesContent":["import { defineComponent, h, inject } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { ROOT_TREE_INJECTION_KEY, treeNodeContentProps } from './virtual-tree'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: treeNodeContentProps,\n  setup(props) {\n    const tree = inject(ROOT_TREE_INJECTION_KEY)\n    const ns = useNamespace('tree')\n    return () => {\n      const node = props.node\n      const { data } = node!\n      return tree?.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node?.label])\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}